{
	"id": "aab6a194b5b6392dc4c347364e279427",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\nimport \"../HubSpokeStructs.sol\";\nimport \"./SpokeState.sol\";\nimport \"./SpokeGetters.sol\";\nimport \"./SpokeSetters.sol\";\n\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract SpokeUtilities is HubSpokeStructs, SpokeState, SpokeGetters, SpokeSetters {\n    function sendWormholeMessage(bytes memory payload) internal returns (uint64 sequence) {\n        sequence = wormhole().publishMessage(\n            0, // nonce\n            payload,\n            consistencyLevel()\n        );\n    }\n\n    function sendTokenBridgeMessage(address assetAddress, uint256 assetAmount, bytes memory payload)\n        internal\n        returns (uint64 sequence)\n    {\n        SafeERC20.safeTransferFrom(IERC20(assetAddress), msg.sender, address(this), assetAmount);\n\n        SafeERC20.safeTransfer(IERC20(assetAddress), tokenBridgeAddress(), assetAmount);\n\n        sequence = tokenBridge().transferTokensWithPayload(\n            assetAddress, assetAmount, hubChainId(), bytes32(uint256(uint160(hubContractAddress()))), 0, payload\n        );\n    }\n\n    function sendTokenBridgeMessageNative(uint256 amount, bytes memory payload) internal returns (uint64 sequence) {\n        sequence = tokenBridge().wrapAndTransferETHWithPayload{value: amount}(\n            hubChainId(), bytes32(uint256(uint160(hubContractAddress()))), 0, payload\n        );\n    }\n\n    function requireAssetAmountValidForTokenBridge(address assetAddress, uint256 assetAmount) internal view {\n        (, bytes memory queriedDecimals) = assetAddress.staticcall(abi.encodeWithSignature(\"decimals()\"));\n        uint8 decimals = abi.decode(queriedDecimals, (uint8));\n        require(\n            deNormalizeAmount(normalizeAmount(assetAmount, decimals), decimals) == assetAmount,\n            \"Too many decimal places\"\n        );\n    }\n\n    function normalizeAmount(uint256 amount, uint8 decimals) internal pure returns (uint256) {\n        if (decimals > 8) {\n            amount /= 10 ** (decimals - 8);\n        }\n        return amount;\n    }\n\n    function deNormalizeAmount(uint256 amount, uint8 decimals) internal pure returns (uint256) {\n        if (decimals > 8) {\n            amount *= 10 ** (decimals - 8);\n        }\n        return amount;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\nimport \"./SpokeState.sol\";\nimport \"../HubSpokeStructs.sol\";\n\ncontract SpokeSetters is HubSpokeStructs, SpokeState {\n    function setChainId(uint16 chainId) internal {\n        _state.provider.chainId = chainId;\n    }\n\n    function setWormhole(address wormholeAddress) internal {\n        _state.provider.wormhole = payable(wormholeAddress);\n    }\n\n    function setTokenBridge(address tokenBridgeAddress) internal {\n        _state.provider.tokenBridge = tokenBridgeAddress;\n    }\n\n    function setHubChainId(uint16 hubChainId) internal {\n        _state.hubChainId = hubChainId;\n    }\n\n    function setHubContractAddress(address hubContractAddress) internal {\n        _state.hubContractAddress = hubContractAddress;\n    }\n}\n"
			},
			"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/IWormhole.sol\";\nimport \"../../interfaces/ITokenBridge.sol\";\nimport \"./SpokeState.sol\";\nimport \"../HubSpokeStructs.sol\";\n\ncontract SpokeGetters is HubSpokeStructs, SpokeState {\n    function chainId() public view returns (uint16) {\n        return _state.provider.chainId;\n    }\n\n    function wormhole() internal view returns (IWormhole) {\n        return IWormhole(_state.provider.wormhole);\n    }\n\n    function tokenBridge() public view returns (ITokenBridge) {\n        return ITokenBridge(payable(_state.provider.tokenBridge));\n    }\n\n    function tokenBridgeAddress() public view returns (address) {\n        return _state.provider.tokenBridge;\n    }\n\n    function consistencyLevel() internal view returns (uint8) {\n        return _state.consistencyLevel;\n    }\n\n    function hubChainId() internal view returns (uint16) {\n        return _state.hubChainId;\n    }\n\n    function hubContractAddress() internal view returns (address) {\n        return _state.hubContractAddress;\n    }\n}\n"
			},
			"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\nimport \"../HubSpokeStructs.sol\";\n\ncontract SpokeStorage is HubSpokeStructs {\n    struct Provider {\n        uint16 chainId;\n        address payable wormhole;\n        address tokenBridge;\n    }\n\n    struct State {\n        Provider provider;\n        // number of confirmations for wormhole messages\n        uint8 consistencyLevel;\n        uint16 hubChainId;\n        address hubContractAddress;\n        // @dev storage gap\n        uint256[50] ______gap;\n    }\n}\n\ncontract SpokeState {\n    SpokeStorage.State _state;\n}\n"
			},
			"example-2/evm/src/contracts/HubSpokeStructs.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\ncontract HubSpokeStructs {\n    struct VaultAmount {\n        uint256 deposited;\n        uint256 borrowed;\n    }\n\n    struct AccrualIndices {\n        uint256 deposited;\n        uint256 borrowed;\n    }\n\n    struct AssetInfo {\n        uint256 collateralizationRatioDeposit;\n        uint256 collateralizationRatioBorrow;\n        bytes32 pythId;\n        // pyth id info\n        uint8 decimals;\n        PiecewiseInterestRateModel interestRateModel;\n        bool exists;\n    }\n\n    struct InterestRateModel {\n        uint64 ratePrecision;\n        uint64 rateIntercept;\n        uint64 rateCoefficientA;\n        uint256 reserveFactor;\n        uint256 reservePrecision;\n    }\n\n    struct PiecewiseInterestRateModel {\n        uint64 ratePrecision;\n        uint256[] kinks;\n        uint256[] rates;\n        uint256 reserveFactor;\n        uint256 reservePrecision;\n    }\n\n    enum Action {\n        Deposit,\n        Borrow,\n        Withdraw,\n        Repay,\n        DepositNative,\n        RepayNative\n    }\n\n    enum Round {\n        UP,\n        DOWN\n    }\n\n    struct ActionPayload {\n        Action action;\n        address sender;\n        address assetAddress;\n        uint256 assetAmount;\n    }\n\n    // struct for mock oracle price\n    struct Price {\n        int64 price;\n        uint64 conf;\n        int32 expo;\n        uint256 publishTime;\n    }\n}\n"
			},
			"example-2/evm/src/interfaces/ITokenBridge.sol": {
				"content": "// contracts/Bridge.sol\n// SPDX-License-Identifier: Apache 2\n\npragma solidity ^0.8.0;\n\nimport \"./IWETH.sol\";\nimport \"./IWormhole.sol\";\n\ninterface ITokenBridge {\n    struct Transfer {\n        uint8 payloadID;\n        uint256 amount;\n        bytes32 tokenAddress;\n        uint16 tokenChain;\n        bytes32 to;\n        uint16 toChain;\n        uint256 fee;\n    }\n\n    struct TransferWithPayload {\n        uint8 payloadID;\n        uint256 amount;\n        bytes32 tokenAddress;\n        uint16 tokenChain;\n        bytes32 to;\n        uint16 toChain;\n        bytes32 fromAddress;\n        bytes payload;\n    }\n\n    struct AssetMeta {\n        uint8 payloadID;\n        bytes32 tokenAddress;\n        uint16 tokenChain;\n        uint8 decimals;\n        bytes32 symbol;\n        bytes32 name;\n    }\n\n    struct RegisterChain {\n        bytes32 module;\n        uint8 action;\n        uint16 chainId;\n\n        uint16 emitterChainID;\n        bytes32 emitterAddress;\n    }\n\n     struct UpgradeContract {\n        bytes32 module;\n        uint8 action;\n        uint16 chainId;\n\n        bytes32 newContract;\n    }\n\n    struct RecoverChainId {\n        bytes32 module;\n        uint8 action;\n\n        uint256 evmChainId;\n        uint16 newChainId;\n    }\n\n    event ContractUpgraded(address indexed oldContract, address indexed newContract);\n\n    function _parseTransferCommon(bytes memory encoded) external pure returns (Transfer memory transfer);\n\n    function attestToken(address tokenAddress, uint32 nonce) external payable returns (uint64 sequence);\n\n    function wrapAndTransferETH(uint16 recipientChain, bytes32 recipient, uint256 arbiterFee, uint32 nonce) external payable returns (uint64 sequence);\n\n    function wrapAndTransferETHWithPayload(uint16 recipientChain, bytes32 recipient, uint32 nonce, bytes memory payload) external payable returns (uint64 sequence);\n\n    function transferTokens(address token, uint256 amount, uint16 recipientChain, bytes32 recipient, uint256 arbiterFee, uint32 nonce) external payable returns (uint64 sequence);\n\n    function transferTokensWithPayload(address token, uint256 amount, uint16 recipientChain, bytes32 recipient, uint32 nonce, bytes memory payload) external payable returns (uint64 sequence);\n\n    function updateWrapped(bytes memory encodedVm) external returns (address token);\n\n    function createWrapped(bytes memory encodedVm) external returns (address token);\n\n    function completeTransferWithPayload(bytes memory encodedVm) external returns (bytes memory);\n\n    function completeTransferAndUnwrapETHWithPayload(bytes memory encodedVm) external returns (bytes memory);\n\n    function completeTransfer(bytes memory encodedVm) external;\n\n    function completeTransferAndUnwrapETH(bytes memory encodedVm) external;\n\n    function encodeAssetMeta(AssetMeta memory meta) external pure returns (bytes memory encoded);\n\n    function encodeTransfer(Transfer memory transfer) external pure returns (bytes memory encoded);\n\n    function encodeTransferWithPayload(TransferWithPayload memory transfer) external pure returns (bytes memory encoded);\n\n    function parsePayloadID(bytes memory encoded) external pure returns (uint8 payloadID);\n\n    function parseAssetMeta(bytes memory encoded) external pure returns (AssetMeta memory meta);\n\n    function parseTransfer(bytes memory encoded) external pure returns (Transfer memory transfer);\n\n    function parseTransferWithPayload(bytes memory encoded) external pure returns (TransferWithPayload memory transfer);\n\n    function governanceActionIsConsumed(bytes32 hash) external view returns (bool);\n\n    function isInitialized(address impl) external view returns (bool);\n\n    function isTransferCompleted(bytes32 hash) external view returns (bool);\n\n    function wormhole() external view returns (IWormhole);\n\n    function chainId() external view returns (uint16);\n\n    function evmChainId() external view returns (uint256);\n\n    function isFork() external view returns (bool);\n\n    function governanceChainId() external view returns (uint16);\n\n    function governanceContract() external view returns (bytes32);\n\n    function wrappedAsset(uint16 tokenChainId, bytes32 tokenAddress) external view returns (address);\n\n    function bridgeContracts(uint16 chainId_) external view returns (bytes32);\n\n    function tokenImplementation() external view returns (address);\n\n    function WETH() external view returns (IWETH);\n\n    function outstandingBridged(address token) external view returns (uint256);\n\n    function isWrappedAsset(address token) external view returns (bool);\n\n    function finality() external view returns (uint8);\n\n    function implementation() external view returns (address);\n\n    function initialize() external;\n\n    function registerChain(bytes memory encodedVM) external;\n\n    function upgrade(bytes memory encodedVM) external;\n\n    function submitRecoverChainId(bytes memory encodedVM) external;\n\n    function parseRegisterChain(bytes memory encoded) external pure returns (RegisterChain memory chain);\n\n    function parseUpgrade(bytes memory encoded) external pure returns (UpgradeContract memory chain);\n\n    function parseRecoverChainId(bytes memory encodedRecoverChainId) external pure returns (RecoverChainId memory rci);\n}"
			},
			"example-2/evm/src/interfaces/IWormhole.sol": {
				"content": "// contracts/Messages.sol\n// SPDX-License-Identifier: Apache 2\n\npragma solidity ^0.8.0;\n\ninterface IWormhole {\n    struct Signature {\n        bytes32 r;\n        bytes32 s;\n        uint8 v;\n        uint8 guardianIndex;\n    }\n\n    struct VM {\n        uint8 version;\n        uint32 timestamp;\n        uint32 nonce;\n        uint16 emitterChainId;\n        bytes32 emitterAddress;\n        uint64 sequence;\n        uint8 consistencyLevel;\n        bytes payload;\n        uint32 guardianSetIndex;\n        Signature[] signatures;\n        bytes32 hash;\n    }\n\n    struct WormholeBodyParams {\n        uint32 timestamp;\n        uint32 nonce;\n        uint16 emitterChainId;\n        bytes32 emitterAddress;\n        uint64 sequence;\n        uint8 consistencyLevel;\n    }\n\n    event LogMessagePublished(\n        address indexed sender, uint64 sequence, uint32 nonce, bytes payload, uint8 consistencyLevel\n    );\n\n    function publishMessage(uint32 nonce, bytes memory payload, uint8 consistencyLevel)\n        external\n        payable\n        returns (uint64 sequence);\n\n    function parseAndVerifyVM(bytes calldata encodedVM)\n        external\n        view\n        returns (VM memory vm, bool valid, string memory reason);\n\n    function chainId() external view returns (uint16);\n\n    function messageFee() external view returns (uint256);\n\n    // added due to WormholeSimulator need\n    function getCurrentGuardianSetIndex() external view returns (uint32);\n\n    struct GuardianSet {\n        address[] keys;\n        uint32 expirationTime;\n    }\n\n    function getGuardianSet(uint32 guardianSetIndex) external view returns (GuardianSet memory guardians);\n\n    function parseVM(bytes memory encodedVM) external pure returns (VM memory vm);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"example-2/evm/src/interfaces/IWETH.sol": {
				"content": "// contracts/Bridge.sol\n// SPDX-License-Identifier: Apache 2\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ninterface IWETH is IERC20 {\n    function deposit() external payable;\n    function withdraw(uint amount) external;\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206e91400817a14899fb90e4cceba323d92c1ed4d12a44620b3495b18737fd513a64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206e91400817a14899fb90e4cceba323d92c1ed4d12a44620b3495b18737fd513a64736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x91400817A14899FB90E4CCEBA323D9 0x2C 0x1E 0xD4 0xD1 0x2A PREVRANDAO PUSH3 0xB3495 0xB1 DUP8 CALLDATACOPY REVERT MLOAD GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206e91400817a14899fb90e4cceba323d92c1ed4d12a44620b3495b18737fd513a64736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x91400817A14899FB90E4CCEBA323D9 0x2C 0x1E 0xD4 0xD1 0x2A PREVRANDAO PUSH3 0xB3495 0xB1 DUP8 CALLDATACOPY REVERT MLOAD GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206e91400817a14899fb90e4cceba323d92c1ed4d12a44620b3495b18737fd513a64736f6c63430008170033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"example-2/evm/src/contracts/HubSpokeStructs.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol",
								"example-2/evm/src/interfaces/ITokenBridge.sol",
								"example-2/evm/src/interfaces/IWETH.sol",
								"example-2/evm/src/interfaces/IWormhole.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202c24ff3b6a47b6f74e8dd78a73ee72b7dd260f82c5ce17e41949b65246ab2a1964736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202c24ff3b6a47b6f74e8dd78a73ee72b7dd260f82c5ce17e41949b65246ab2a1964736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x24 SELFDESTRUCT EXTCODESIZE PUSH11 0x47B6F74E8DD78A73EE72B7 0xDD 0x26 0xF DUP3 0xC5 0xCE OR 0xE4 NOT 0x49 0xB6 MSTORE CHAINID 0xAB 0x2A NOT PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202c24ff3b6a47b6f74e8dd78a73ee72b7dd260f82c5ce17e41949b65246ab2a1964736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x24 SELFDESTRUCT EXTCODESIZE PUSH11 0x47B6F74E8DD78A73EE72B7 0xDD 0x26 0xF DUP3 0xC5 0xCE OR 0xE4 NOT 0x49 0xB6 MSTORE CHAINID 0xAB 0x2A NOT PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c24ff3b6a47b6f74e8dd78a73ee72b7dd260f82c5ce17e41949b65246ab2a1964736f6c63430008170033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"example-2/evm/src/contracts/HubSpokeStructs.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol",
								"example-2/evm/src/interfaces/ITokenBridge.sol",
								"example-2/evm/src/interfaces/IWETH.sol",
								"example-2/evm/src/interfaces/IWormhole.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"example-2/evm/src/contracts/HubSpokeStructs.sol": {
				"HubSpokeStructs": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"example-2/evm/src/contracts/HubSpokeStructs.sol\":64:1398  contract HubSpokeStructs {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"example-2/evm/src/contracts/HubSpokeStructs.sol\":64:1398  contract HubSpokeStructs {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206663aaeed5f2d8ea0b7239c411127357766a1ba5f4fadede756cd3f51d58028264736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea26469706673582212206663aaeed5f2d8ea0b7239c411127357766a1ba5f4fadede756cd3f51d58028264736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x63AAEED5F2D8EA SIGNEXTEND PUSH19 0x39C411127357766A1BA5F4FADEDE756CD3F51D PC MUL DUP3 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "64:1334:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea26469706673582212206663aaeed5f2d8ea0b7239c411127357766a1ba5f4fadede756cd3f51d58028264736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x63AAEED5F2D8EA SIGNEXTEND PUSH19 0x39C411127357766A1BA5F4FADEDE756CD3F51D PC MUL DUP3 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "64:1334:4:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 64,
									"end": 1398,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206663aaeed5f2d8ea0b7239c411127357766a1ba5f4fadede756cd3f51d58028264736f6c63430008170033",
									".code": [
										{
											"begin": 64,
											"end": 1398,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 64,
											"end": 1398,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 64,
											"end": 1398,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 64,
											"end": 1398,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 1398,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 64,
											"end": 1398,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"example-2/evm/src/contracts/HubSpokeStructs.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol",
								"example-2/evm/src/interfaces/ITokenBridge.sol",
								"example-2/evm/src/interfaces/IWETH.sol",
								"example-2/evm/src/interfaces/IWormhole.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"example-2/evm/src/contracts/HubSpokeStructs.sol\":\"HubSpokeStructs\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"example-2/evm/src/contracts/HubSpokeStructs.sol\":{\"keccak256\":\"0x24302b1f2d165f5b53d3bedd11aa1c367d30458bb93e0a34a79a939e753fd7dc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://11d40dd261195ea6fe19f0aa56d2aad5040cabd000041b250d3419985e9d6a9e\",\"dweb:/ipfs/Qmd59wjnwsyt2ave7vYQZQdPxk2AGHAvWVhQAUGAgxPMJ6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol": {
				"SpokeGetters": {
					"abi": [
						{
							"inputs": [],
							"name": "chainId",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenBridge",
							"outputs": [
								{
									"internalType": "contract ITokenBridge",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenBridgeAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":210:1068  contract SpokeGetters is HubSpokeStructs, SpokeState {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":210:1068  contract SpokeGetters is HubSpokeStructs, SpokeState {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9a8a0592\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xc6328a46\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe1884919\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":269:364  function chainId() public view returns (uint16) {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":489:621  function tokenBridge() public view returns (ITokenBridge) {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":627:738  function tokenBridgeAddress() public view returns (address) {... */\n    tag_5:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":269:364  function chainId() public view returns (uint16) {... */\n    tag_7:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":309:315  uint16 */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":334:340  _state */\n      dup1\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":334:349  _state.provider */\n      0x00\n      add\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":334:357  _state.provider.chainId */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":327:357  return _state.provider.chainId */\n      swap1\n      pop\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":269:364  function chainId() public view returns (uint16) {... */\n      swap1\n      jump\t// out\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":489:621  function tokenBridge() public view returns (ITokenBridge) {... */\n    tag_11:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":533:545  ITokenBridge */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":585:591  _state */\n      dup1\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":585:600  _state.provider */\n      0x00\n      add\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":585:612  _state.provider.tokenBridge */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":557:614  return ITokenBridge(payable(_state.provider.tokenBridge)) */\n      swap1\n      pop\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":489:621  function tokenBridge() public view returns (ITokenBridge) {... */\n      swap1\n      jump\t// out\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":627:738  function tokenBridgeAddress() public view returns (address) {... */\n    tag_15:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":678:685  address */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":704:710  _state */\n      dup1\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":704:719  _state.provider */\n      0x00\n      add\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":704:731  _state.provider.tokenBridge */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":697:731  return _state.provider.tokenBridge */\n      swap1\n      pop\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":627:738  function tokenBridgeAddress() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:96   */\n    tag_21:\n        /* \"#utility.yul\":43:50   */\n      0x00\n        /* \"#utility.yul\":83:89   */\n      0xffff\n        /* \"#utility.yul\":76:81   */\n      dup3\n        /* \"#utility.yul\":72:90   */\n      and\n        /* \"#utility.yul\":61:90   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:96   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":102:217   */\n    tag_22:\n        /* \"#utility.yul\":187:210   */\n      tag_34\n        /* \"#utility.yul\":204:209   */\n      dup2\n        /* \"#utility.yul\":187:210   */\n      tag_21\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":182:185   */\n      dup3\n        /* \"#utility.yul\":175:211   */\n      mstore\n        /* \"#utility.yul\":102:217   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":223:441   */\n    tag_9:\n        /* \"#utility.yul\":314:318   */\n      0x00\n        /* \"#utility.yul\":352:354   */\n      0x20\n        /* \"#utility.yul\":341:350   */\n      dup3\n        /* \"#utility.yul\":337:355   */\n      add\n        /* \"#utility.yul\":329:355   */\n      swap1\n      pop\n        /* \"#utility.yul\":365:434   */\n      tag_36\n        /* \"#utility.yul\":431:432   */\n      0x00\n        /* \"#utility.yul\":420:429   */\n      dup4\n        /* \"#utility.yul\":416:433   */\n      add\n        /* \"#utility.yul\":407:413   */\n      dup5\n        /* \"#utility.yul\":365:434   */\n      tag_22\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":223:441   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":447:573   */\n    tag_23:\n        /* \"#utility.yul\":484:491   */\n      0x00\n        /* \"#utility.yul\":524:566   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":517:522   */\n      dup3\n        /* \"#utility.yul\":513:567   */\n      and\n        /* \"#utility.yul\":502:567   */\n      swap1\n      pop\n        /* \"#utility.yul\":447:573   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":579:639   */\n    tag_24:\n        /* \"#utility.yul\":607:610   */\n      0x00\n        /* \"#utility.yul\":628:633   */\n      dup2\n        /* \"#utility.yul\":621:633   */\n      swap1\n      pop\n        /* \"#utility.yul\":579:639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":645:787   */\n    tag_25:\n        /* \"#utility.yul\":695:704   */\n      0x00\n        /* \"#utility.yul\":728:781   */\n      tag_40\n        /* \"#utility.yul\":746:780   */\n      tag_41\n        /* \"#utility.yul\":755:779   */\n      tag_42\n        /* \"#utility.yul\":773:778   */\n      dup5\n        /* \"#utility.yul\":755:779   */\n      tag_23\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":746:780   */\n      tag_24\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":728:781   */\n      tag_23\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":715:781   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:787   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":793:919   */\n    tag_26:\n        /* \"#utility.yul\":843:852   */\n      0x00\n        /* \"#utility.yul\":876:913   */\n      tag_44\n        /* \"#utility.yul\":907:912   */\n      dup3\n        /* \"#utility.yul\":876:913   */\n      tag_25\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":863:913   */\n      swap1\n      pop\n        /* \"#utility.yul\":793:919   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":925:1072   */\n    tag_27:\n        /* \"#utility.yul\":996:1005   */\n      0x00\n        /* \"#utility.yul\":1029:1066   */\n      tag_46\n        /* \"#utility.yul\":1060:1065   */\n      dup3\n        /* \"#utility.yul\":1029:1066   */\n      tag_26\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1016:1066   */\n      swap1\n      pop\n        /* \"#utility.yul\":925:1072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1078:1251   */\n    tag_28:\n        /* \"#utility.yul\":1186:1244   */\n      tag_48\n        /* \"#utility.yul\":1238:1243   */\n      dup2\n        /* \"#utility.yul\":1186:1244   */\n      tag_27\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1181:1184   */\n      dup3\n        /* \"#utility.yul\":1174:1245   */\n      mstore\n        /* \"#utility.yul\":1078:1251   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1257:1521   */\n    tag_13:\n        /* \"#utility.yul\":1371:1375   */\n      0x00\n        /* \"#utility.yul\":1409:1411   */\n      0x20\n        /* \"#utility.yul\":1398:1407   */\n      dup3\n        /* \"#utility.yul\":1394:1412   */\n      add\n        /* \"#utility.yul\":1386:1412   */\n      swap1\n      pop\n        /* \"#utility.yul\":1422:1514   */\n      tag_50\n        /* \"#utility.yul\":1511:1512   */\n      0x00\n        /* \"#utility.yul\":1500:1509   */\n      dup4\n        /* \"#utility.yul\":1496:1513   */\n      add\n        /* \"#utility.yul\":1487:1493   */\n      dup5\n        /* \"#utility.yul\":1422:1514   */\n      tag_28\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1257:1521   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1527:1623   */\n    tag_29:\n        /* \"#utility.yul\":1564:1571   */\n      0x00\n        /* \"#utility.yul\":1593:1617   */\n      tag_52\n        /* \"#utility.yul\":1611:1616   */\n      dup3\n        /* \"#utility.yul\":1593:1617   */\n      tag_23\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1582:1617   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1623   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1629:1747   */\n    tag_30:\n        /* \"#utility.yul\":1716:1740   */\n      tag_54\n        /* \"#utility.yul\":1734:1739   */\n      dup2\n        /* \"#utility.yul\":1716:1740   */\n      tag_29\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1711:1714   */\n      dup3\n        /* \"#utility.yul\":1704:1741   */\n      mstore\n        /* \"#utility.yul\":1629:1747   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1753:1975   */\n    tag_17:\n        /* \"#utility.yul\":1846:1850   */\n      0x00\n        /* \"#utility.yul\":1884:1886   */\n      0x20\n        /* \"#utility.yul\":1873:1882   */\n      dup3\n        /* \"#utility.yul\":1869:1887   */\n      add\n        /* \"#utility.yul\":1861:1887   */\n      swap1\n      pop\n        /* \"#utility.yul\":1897:1968   */\n      tag_56\n        /* \"#utility.yul\":1965:1966   */\n      0x00\n        /* \"#utility.yul\":1954:1963   */\n      dup4\n        /* \"#utility.yul\":1950:1967   */\n      add\n        /* \"#utility.yul\":1941:1947   */\n      dup5\n        /* \"#utility.yul\":1897:1968   */\n      tag_30\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1753:1975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220542c0eaa025179768c1b144317afe1dc0aa51003902208aab39fee0ed9e5218e64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506102458061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c80639a8a059214610043578063c6328a4614610061578063e18849191461007f575b5f80fd5b61004b61009d565b604051610058919061012a565b60405180910390f35b6100696100b6565b60405161007691906101bd565b60405180910390f35b6100876100e2565b60405161009491906101f6565b60405180910390f35b5f805f015f015f9054906101000a900461ffff16905090565b5f805f016001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f016001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f61ffff82169050919050565b6101248161010e565b82525050565b5f60208201905061013d5f83018461011b565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61018561018061017b84610143565b610162565b610143565b9050919050565b5f6101968261016b565b9050919050565b5f6101a78261018c565b9050919050565b6101b78161019d565b82525050565b5f6020820190506101d05f8301846101ae565b92915050565b5f6101e082610143565b9050919050565b6101f0816101d6565b82525050565b5f6020820190506102095f8301846101e7565b9291505056fea2646970667358221220542c0eaa025179768c1b144317afe1dc0aa51003902208aab39fee0ed9e5218e64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A8A0592 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xC6328A46 EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xE1884919 EQ PUSH2 0x7F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x12A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH2 0xB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x1BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x87 PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 ADD PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 ADD PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 ADD PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x124 DUP2 PUSH2 0x10E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13D PUSH0 DUP4 ADD DUP5 PUSH2 0x11B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x185 PUSH2 0x180 PUSH2 0x17B DUP5 PUSH2 0x143 JUMP JUMPDEST PUSH2 0x162 JUMP JUMPDEST PUSH2 0x143 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x196 DUP3 PUSH2 0x16B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A7 DUP3 PUSH2 0x18C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B7 DUP2 PUSH2 0x19D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E0 DUP3 PUSH2 0x143 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0 DUP2 PUSH2 0x1D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x209 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0x2C 0xE 0xAA MUL MLOAD PUSH26 0x768C1B144317AFE1DC0AA51003902208AAB39FEE0ED9E5218E64 PUSH20 0x6F6C634300081700330000000000000000000000 ",
							"sourceMap": "210:858:5:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@chainId_756": {
									"entryPoint": 157,
									"id": 756,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenBridgeAddress_795": {
									"entryPoint": 226,
									"id": 795,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenBridge_785": {
									"entryPoint": 182,
									"id": 785,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ITokenBridge_$1559_to_t_address_fromStack": {
									"entryPoint": 430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint16_to_t_uint16_fromStack": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ITokenBridge_$1559__to_t_address__fromStack_reversed": {
									"entryPoint": 445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": 298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ITokenBridge_$1559_to_t_address": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1978:12",
										"nodeType": "YulBlock",
										"src": "0:1978:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:45:12",
													"nodeType": "YulBlock",
													"src": "51:45:12",
													"statements": [
														{
															"nativeSrc": "61:29:12",
															"nodeType": "YulAssignment",
															"src": "61:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "76:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "83:6:12",
																		"nodeType": "YulLiteral",
																		"src": "83:6:12",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "72:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:12"
																},
																"nativeSrc": "72:18:12",
																"nodeType": "YulFunctionCall",
																"src": "72:18:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nativeSrc": "7:89:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:12",
														"nodeType": "YulTypedName",
														"src": "33:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:12",
														"nodeType": "YulTypedName",
														"src": "43:7:12",
														"type": ""
													}
												],
												"src": "7:89:12"
											},
											{
												"body": {
													"nativeSrc": "165:52:12",
													"nodeType": "YulBlock",
													"src": "165:52:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "182:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "182:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "204:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "204:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint16",
																			"nativeSrc": "187:16:12",
																			"nodeType": "YulIdentifier",
																			"src": "187:16:12"
																		},
																		"nativeSrc": "187:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "187:23:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "175:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "175:6:12"
																},
																"nativeSrc": "175:36:12",
																"nodeType": "YulFunctionCall",
																"src": "175:36:12"
															},
															"nativeSrc": "175:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "175:36:12"
														}
													]
												},
												"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
												"nativeSrc": "102:115:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "153:5:12",
														"nodeType": "YulTypedName",
														"src": "153:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "160:3:12",
														"nodeType": "YulTypedName",
														"src": "160:3:12",
														"type": ""
													}
												],
												"src": "102:115:12"
											},
											{
												"body": {
													"nativeSrc": "319:122:12",
													"nodeType": "YulBlock",
													"src": "319:122:12",
													"statements": [
														{
															"nativeSrc": "329:26:12",
															"nodeType": "YulAssignment",
															"src": "329:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "341:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "341:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "352:2:12",
																		"nodeType": "YulLiteral",
																		"src": "352:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "337:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "337:3:12"
																},
																"nativeSrc": "337:18:12",
																"nodeType": "YulFunctionCall",
																"src": "337:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "329:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "329:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "407:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "407:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "420:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "420:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "431:1:12",
																				"nodeType": "YulLiteral",
																				"src": "431:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "416:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "416:3:12"
																		},
																		"nativeSrc": "416:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "416:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
																	"nativeSrc": "365:41:12",
																	"nodeType": "YulIdentifier",
																	"src": "365:41:12"
																},
																"nativeSrc": "365:69:12",
																"nodeType": "YulFunctionCall",
																"src": "365:69:12"
															},
															"nativeSrc": "365:69:12",
															"nodeType": "YulExpressionStatement",
															"src": "365:69:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nativeSrc": "223:218:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "291:9:12",
														"nodeType": "YulTypedName",
														"src": "291:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "303:6:12",
														"nodeType": "YulTypedName",
														"src": "303:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "314:4:12",
														"nodeType": "YulTypedName",
														"src": "314:4:12",
														"type": ""
													}
												],
												"src": "223:218:12"
											},
											{
												"body": {
													"nativeSrc": "492:81:12",
													"nodeType": "YulBlock",
													"src": "492:81:12",
													"statements": [
														{
															"nativeSrc": "502:65:12",
															"nodeType": "YulAssignment",
															"src": "502:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "517:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "517:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "524:42:12",
																		"nodeType": "YulLiteral",
																		"src": "524:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "513:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:12"
																},
																"nativeSrc": "513:54:12",
																"nodeType": "YulFunctionCall",
																"src": "513:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "502:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "502:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "447:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "474:5:12",
														"nodeType": "YulTypedName",
														"src": "474:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "484:7:12",
														"nodeType": "YulTypedName",
														"src": "484:7:12",
														"type": ""
													}
												],
												"src": "447:126:12"
											},
											{
												"body": {
													"nativeSrc": "611:28:12",
													"nodeType": "YulBlock",
													"src": "611:28:12",
													"statements": [
														{
															"nativeSrc": "621:12:12",
															"nodeType": "YulAssignment",
															"src": "621:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "628:5:12",
																"nodeType": "YulIdentifier",
																"src": "628:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "621:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "621:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "579:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "597:5:12",
														"nodeType": "YulTypedName",
														"src": "597:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "607:3:12",
														"nodeType": "YulTypedName",
														"src": "607:3:12",
														"type": ""
													}
												],
												"src": "579:60:12"
											},
											{
												"body": {
													"nativeSrc": "705:82:12",
													"nodeType": "YulBlock",
													"src": "705:82:12",
													"statements": [
														{
															"nativeSrc": "715:66:12",
															"nodeType": "YulAssignment",
															"src": "715:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "773:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "773:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "755:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "755:17:12"
																				},
																				"nativeSrc": "755:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "755:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "746:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "746:8:12"
																		},
																		"nativeSrc": "746:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "746:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "728:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "728:17:12"
																},
																"nativeSrc": "728:53:12",
																"nodeType": "YulFunctionCall",
																"src": "728:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "715:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "715:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "645:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "685:5:12",
														"nodeType": "YulTypedName",
														"src": "685:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "695:9:12",
														"nodeType": "YulTypedName",
														"src": "695:9:12",
														"type": ""
													}
												],
												"src": "645:142:12"
											},
											{
												"body": {
													"nativeSrc": "853:66:12",
													"nodeType": "YulBlock",
													"src": "853:66:12",
													"statements": [
														{
															"nativeSrc": "863:50:12",
															"nodeType": "YulAssignment",
															"src": "863:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "907:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "907:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "876:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "876:30:12"
																},
																"nativeSrc": "876:37:12",
																"nodeType": "YulFunctionCall",
																"src": "876:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "863:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "863:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "793:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "833:5:12",
														"nodeType": "YulTypedName",
														"src": "833:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "843:9:12",
														"nodeType": "YulTypedName",
														"src": "843:9:12",
														"type": ""
													}
												],
												"src": "793:126:12"
											},
											{
												"body": {
													"nativeSrc": "1006:66:12",
													"nodeType": "YulBlock",
													"src": "1006:66:12",
													"statements": [
														{
															"nativeSrc": "1016:50:12",
															"nodeType": "YulAssignment",
															"src": "1016:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1060:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1060:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1029:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "1029:30:12"
																},
																"nativeSrc": "1029:37:12",
																"nodeType": "YulFunctionCall",
																"src": "1029:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1016:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "1016:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ITokenBridge_$1559_to_t_address",
												"nativeSrc": "925:147:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "986:5:12",
														"nodeType": "YulTypedName",
														"src": "986:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "996:9:12",
														"nodeType": "YulTypedName",
														"src": "996:9:12",
														"type": ""
													}
												],
												"src": "925:147:12"
											},
											{
												"body": {
													"nativeSrc": "1164:87:12",
													"nodeType": "YulBlock",
													"src": "1164:87:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1181:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1181:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1238:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1238:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ITokenBridge_$1559_to_t_address",
																			"nativeSrc": "1186:51:12",
																			"nodeType": "YulIdentifier",
																			"src": "1186:51:12"
																		},
																		"nativeSrc": "1186:58:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1186:58:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1174:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1174:6:12"
																},
																"nativeSrc": "1174:71:12",
																"nodeType": "YulFunctionCall",
																"src": "1174:71:12"
															},
															"nativeSrc": "1174:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "1174:71:12"
														}
													]
												},
												"name": "abi_encode_t_contract$_ITokenBridge_$1559_to_t_address_fromStack",
												"nativeSrc": "1078:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1152:5:12",
														"nodeType": "YulTypedName",
														"src": "1152:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1159:3:12",
														"nodeType": "YulTypedName",
														"src": "1159:3:12",
														"type": ""
													}
												],
												"src": "1078:173:12"
											},
											{
												"body": {
													"nativeSrc": "1376:145:12",
													"nodeType": "YulBlock",
													"src": "1376:145:12",
													"statements": [
														{
															"nativeSrc": "1386:26:12",
															"nodeType": "YulAssignment",
															"src": "1386:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1398:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1409:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1409:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1394:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1394:3:12"
																},
																"nativeSrc": "1394:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1394:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1386:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1386:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1487:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1487:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1500:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1500:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1511:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1511:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1496:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1496:3:12"
																		},
																		"nativeSrc": "1496:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1496:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ITokenBridge_$1559_to_t_address_fromStack",
																	"nativeSrc": "1422:64:12",
																	"nodeType": "YulIdentifier",
																	"src": "1422:64:12"
																},
																"nativeSrc": "1422:92:12",
																"nodeType": "YulFunctionCall",
																"src": "1422:92:12"
															},
															"nativeSrc": "1422:92:12",
															"nodeType": "YulExpressionStatement",
															"src": "1422:92:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ITokenBridge_$1559__to_t_address__fromStack_reversed",
												"nativeSrc": "1257:264:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1348:9:12",
														"nodeType": "YulTypedName",
														"src": "1348:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1360:6:12",
														"nodeType": "YulTypedName",
														"src": "1360:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1371:4:12",
														"nodeType": "YulTypedName",
														"src": "1371:4:12",
														"type": ""
													}
												],
												"src": "1257:264:12"
											},
											{
												"body": {
													"nativeSrc": "1572:51:12",
													"nodeType": "YulBlock",
													"src": "1572:51:12",
													"statements": [
														{
															"nativeSrc": "1582:35:12",
															"nodeType": "YulAssignment",
															"src": "1582:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1611:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1611:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1593:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1593:17:12"
																},
																"nativeSrc": "1593:24:12",
																"nodeType": "YulFunctionCall",
																"src": "1593:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1582:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1582:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1527:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1554:5:12",
														"nodeType": "YulTypedName",
														"src": "1554:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1564:7:12",
														"nodeType": "YulTypedName",
														"src": "1564:7:12",
														"type": ""
													}
												],
												"src": "1527:96:12"
											},
											{
												"body": {
													"nativeSrc": "1694:53:12",
													"nodeType": "YulBlock",
													"src": "1694:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1711:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1711:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1734:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1734:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1716:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "1716:17:12"
																		},
																		"nativeSrc": "1716:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1716:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1704:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:12"
																},
																"nativeSrc": "1704:37:12",
																"nodeType": "YulFunctionCall",
																"src": "1704:37:12"
															},
															"nativeSrc": "1704:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "1704:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1629:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1682:5:12",
														"nodeType": "YulTypedName",
														"src": "1682:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1689:3:12",
														"nodeType": "YulTypedName",
														"src": "1689:3:12",
														"type": ""
													}
												],
												"src": "1629:118:12"
											},
											{
												"body": {
													"nativeSrc": "1851:124:12",
													"nodeType": "YulBlock",
													"src": "1851:124:12",
													"statements": [
														{
															"nativeSrc": "1861:26:12",
															"nodeType": "YulAssignment",
															"src": "1861:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1873:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1873:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1884:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1884:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1869:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1869:3:12"
																},
																"nativeSrc": "1869:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1869:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1861:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1861:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1941:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1941:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1954:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1954:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1965:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1965:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1950:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1950:3:12"
																		},
																		"nativeSrc": "1950:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1950:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1897:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "1897:43:12"
																},
																"nativeSrc": "1897:71:12",
																"nodeType": "YulFunctionCall",
																"src": "1897:71:12"
															},
															"nativeSrc": "1897:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "1897:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1753:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1823:9:12",
														"nodeType": "YulTypedName",
														"src": "1823:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1835:6:12",
														"nodeType": "YulTypedName",
														"src": "1835:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1846:4:12",
														"nodeType": "YulTypedName",
														"src": "1846:4:12",
														"type": ""
													}
												],
												"src": "1753:222:12"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ITokenBridge_$1559_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ITokenBridge_$1559_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ITokenBridge_$1559_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ITokenBridge_$1559__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ITokenBridge_$1559_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c80639a8a059214610043578063c6328a4614610061578063e18849191461007f575b5f80fd5b61004b61009d565b604051610058919061012a565b60405180910390f35b6100696100b6565b60405161007691906101bd565b60405180910390f35b6100876100e2565b60405161009491906101f6565b60405180910390f35b5f805f015f015f9054906101000a900461ffff16905090565b5f805f016001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f016001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f61ffff82169050919050565b6101248161010e565b82525050565b5f60208201905061013d5f83018461011b565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61018561018061017b84610143565b610162565b610143565b9050919050565b5f6101968261016b565b9050919050565b5f6101a78261018c565b9050919050565b6101b78161019d565b82525050565b5f6020820190506101d05f8301846101ae565b92915050565b5f6101e082610143565b9050919050565b6101f0816101d6565b82525050565b5f6020820190506102095f8301846101e7565b9291505056fea2646970667358221220542c0eaa025179768c1b144317afe1dc0aa51003902208aab39fee0ed9e5218e64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A8A0592 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xC6328A46 EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xE1884919 EQ PUSH2 0x7F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x12A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH2 0xB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x1BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x87 PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 ADD PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 ADD PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 ADD PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x124 DUP2 PUSH2 0x10E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13D PUSH0 DUP4 ADD DUP5 PUSH2 0x11B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x185 PUSH2 0x180 PUSH2 0x17B DUP5 PUSH2 0x143 JUMP JUMPDEST PUSH2 0x162 JUMP JUMPDEST PUSH2 0x143 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x196 DUP3 PUSH2 0x16B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A7 DUP3 PUSH2 0x18C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B7 DUP2 PUSH2 0x19D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E0 DUP3 PUSH2 0x143 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0 DUP2 PUSH2 0x1D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x209 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0x2C 0xE 0xAA MUL MLOAD PUSH26 0x768C1B144317AFE1DC0AA51003902208AAB39FEE0ED9E5218E64 PUSH20 0x6F6C634300081700330000000000000000000000 ",
							"sourceMap": "210:858:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;269:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;489:132;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;627:111;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;269:95;309:6;334;:15;;:23;;;;;;;;;;;;327:30;;269:95;:::o;489:132::-;533:12;585:6;:15;;:27;;;;;;;;;;;;557:57;;489:132;:::o;627:111::-;678:7;704:6;:15;;:27;;;;;;;;;;;;697:34;;627:111;:::o;7:89:12:-;43:7;83:6;76:5;72:18;61:29;;7:89;;;:::o;102:115::-;187:23;204:5;187:23;:::i;:::-;182:3;175:36;102:115;;:::o;223:218::-;314:4;352:2;341:9;337:18;329:26;;365:69;431:1;420:9;416:17;407:6;365:69;:::i;:::-;223:218;;;;:::o;447:126::-;484:7;524:42;517:5;513:54;502:65;;447:126;;;:::o;579:60::-;607:3;628:5;621:12;;579:60;;;:::o;645:142::-;695:9;728:53;746:34;755:24;773:5;755:24;:::i;:::-;746:34;:::i;:::-;728:53;:::i;:::-;715:66;;645:142;;;:::o;793:126::-;843:9;876:37;907:5;876:37;:::i;:::-;863:50;;793:126;;;:::o;925:147::-;996:9;1029:37;1060:5;1029:37;:::i;:::-;1016:50;;925:147;;;:::o;1078:173::-;1186:58;1238:5;1186:58;:::i;:::-;1181:3;1174:71;1078:173;;:::o;1257:264::-;1371:4;1409:2;1398:9;1394:18;1386:26;;1422:92;1511:1;1500:9;1496:17;1487:6;1422:92;:::i;:::-;1257:264;;;;:::o;1527:96::-;1564:7;1593:24;1611:5;1593:24;:::i;:::-;1582:35;;1527:96;;;:::o;1629:118::-;1716:24;1734:5;1716:24;:::i;:::-;1711:3;1704:37;1629:118;;:::o;1753:222::-;1846:4;1884:2;1873:9;1869:18;1861:26;;1897:71;1965:1;1954:9;1950:17;1941:6;1897:71;:::i;:::-;1753:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "116200",
								"executionCost": "163",
								"totalCost": "116363"
							},
							"external": {
								"chainId()": "2461",
								"tokenBridge()": "infinite",
								"tokenBridgeAddress()": "2548"
							},
							"internal": {
								"consistencyLevel()": "infinite",
								"hubChainId()": "infinite",
								"hubContractAddress()": "infinite",
								"wormhole()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 210,
									"end": 1068,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220542c0eaa025179768c1b144317afe1dc0aa51003902208aab39fee0ed9e5218e64736f6c63430008170033",
									".code": [
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH",
											"source": 5,
											"value": "9A8A0592"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH",
											"source": 5,
											"value": "C6328A46"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH",
											"source": 5,
											"value": "E1884919"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 269,
											"end": 364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 269,
											"end": 364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 489,
											"end": 621,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 489,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 489,
											"end": 621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 489,
											"end": 621,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 489,
											"end": 621,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 489,
											"end": 621,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 489,
											"end": 621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 489,
											"end": 621,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 489,
											"end": 621,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 627,
											"end": 738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 627,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 627,
											"end": 738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 627,
											"end": 738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 738,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 627,
											"end": 738,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 627,
											"end": 738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 627,
											"end": 738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 738,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 309,
											"end": 315,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 340,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 349,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 349,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 334,
											"end": 357,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 357,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 334,
											"end": 357,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 357,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 334,
											"end": 357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 357,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 334,
											"end": 357,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 357,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 334,
											"end": 357,
											"name": "PUSH",
											"source": 5,
											"value": "FFFF"
										},
										{
											"begin": 334,
											"end": 357,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 327,
											"end": 357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 489,
											"end": 621,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 533,
											"end": 545,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 591,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 585,
											"end": 600,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 600,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 585,
											"end": 612,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 585,
											"end": 612,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 585,
											"end": 612,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 585,
											"end": 612,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 585,
											"end": 612,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 557,
											"end": 614,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 557,
											"end": 614,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 627,
											"end": 738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 678,
											"end": 685,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 710,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 704,
											"end": 719,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 719,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 704,
											"end": 731,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 704,
											"end": 731,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 704,
											"end": 731,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 731,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 704,
											"end": 731,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 704,
											"end": 731,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 704,
											"end": 731,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 704,
											"end": 731,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 704,
											"end": 731,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 704,
											"end": 731,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 704,
											"end": 731,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 704,
											"end": 731,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 697,
											"end": 731,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 697,
											"end": 731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 96,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 7,
											"end": 96,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 43,
											"end": 50,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 89,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 76,
											"end": 81,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 72,
											"end": 90,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 61,
											"end": 90,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 61,
											"end": 90,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 96,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7,
											"end": 96,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 96,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 96,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 102,
											"end": 217,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 102,
											"end": 217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 187,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 204,
											"end": 209,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 187,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 187,
											"end": 210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 187,
											"end": 210,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 187,
											"end": 210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 175,
											"end": 211,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 102,
											"end": 217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 102,
											"end": 217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 102,
											"end": 217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 223,
											"end": 441,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 223,
											"end": 441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 314,
											"end": 318,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 352,
											"end": 354,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 341,
											"end": 350,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 329,
											"end": 355,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 329,
											"end": 355,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 365,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 431,
											"end": 432,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 429,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 416,
											"end": 433,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 407,
											"end": 413,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 365,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 365,
											"end": 434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 365,
											"end": 434,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 365,
											"end": 434,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 223,
											"end": 441,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 223,
											"end": 441,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 223,
											"end": 441,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 223,
											"end": 441,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 223,
											"end": 441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 447,
											"end": 573,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 447,
											"end": 573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 484,
											"end": 491,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 566,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 513,
											"end": 567,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 502,
											"end": 567,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 567,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 447,
											"end": 573,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 447,
											"end": 573,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 447,
											"end": 573,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 447,
											"end": 573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 579,
											"end": 639,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 579,
											"end": 639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 607,
											"end": 610,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 633,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 621,
											"end": 633,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 621,
											"end": 633,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 579,
											"end": 639,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 579,
											"end": 639,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 579,
											"end": 639,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 579,
											"end": 639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 645,
											"end": 787,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 645,
											"end": 787,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 695,
											"end": 704,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 746,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 755,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 755,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 755,
											"end": 779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 755,
											"end": 779,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 755,
											"end": 779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 746,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 746,
											"end": 780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 746,
											"end": 780,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 746,
											"end": 780,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 728,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 728,
											"end": 781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 728,
											"end": 781,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 728,
											"end": 781,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 715,
											"end": 781,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 715,
											"end": 781,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 645,
											"end": 787,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 645,
											"end": 787,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 645,
											"end": 787,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 645,
											"end": 787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 793,
											"end": 919,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 793,
											"end": 919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 843,
											"end": 852,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 876,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 876,
											"end": 913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 876,
											"end": 913,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 876,
											"end": 913,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 863,
											"end": 913,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 863,
											"end": 913,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 793,
											"end": 919,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 793,
											"end": 919,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 793,
											"end": 919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 793,
											"end": 919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 925,
											"end": 1072,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 925,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 996,
											"end": 1005,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 1060,
											"end": 1065,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1029,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1029,
											"end": 1066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1029,
											"end": 1066,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 1029,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1066,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1066,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 925,
											"end": 1072,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 925,
											"end": 1072,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 925,
											"end": 1072,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 925,
											"end": 1072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1078,
											"end": 1251,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1078,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1186,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 1238,
											"end": 1243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1186,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 1186,
											"end": 1244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1186,
											"end": 1244,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 1186,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1181,
											"end": 1184,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1174,
											"end": 1245,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1078,
											"end": 1251,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1078,
											"end": 1251,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1078,
											"end": 1251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1521,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 1257,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1371,
											"end": 1375,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1411,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1398,
											"end": 1407,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1394,
											"end": 1412,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1412,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1412,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1422,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 1511,
											"end": 1512,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1496,
											"end": 1513,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1493,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1422,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1422,
											"end": 1514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1422,
											"end": 1514,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 1422,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1521,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1521,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1521,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1521,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1527,
											"end": 1623,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 1527,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1564,
											"end": 1571,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1611,
											"end": 1616,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1593,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 1593,
											"end": 1617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1593,
											"end": 1617,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1593,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1582,
											"end": 1617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1582,
											"end": 1617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1527,
											"end": 1623,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1527,
											"end": 1623,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1527,
											"end": 1623,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1527,
											"end": 1623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1629,
											"end": 1747,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1629,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 1716,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1711,
											"end": 1714,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1704,
											"end": 1741,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1629,
											"end": 1747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1629,
											"end": 1747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1629,
											"end": 1747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1753,
											"end": 1975,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 1753,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1846,
											"end": 1850,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1884,
											"end": 1886,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1873,
											"end": 1882,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1861,
											"end": 1887,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1861,
											"end": 1887,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1897,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 1965,
											"end": 1966,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1963,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1950,
											"end": 1967,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1941,
											"end": 1947,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1897,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1897,
											"end": 1968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1897,
											"end": 1968,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 1897,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1753,
											"end": 1975,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1753,
											"end": 1975,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1753,
											"end": 1975,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1753,
											"end": 1975,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1753,
											"end": 1975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"example-2/evm/src/contracts/HubSpokeStructs.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol",
								"example-2/evm/src/interfaces/ITokenBridge.sol",
								"example-2/evm/src/interfaces/IWETH.sol",
								"example-2/evm/src/interfaces/IWormhole.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"chainId()": "9a8a0592",
							"tokenBridge()": "c6328a46",
							"tokenBridgeAddress()": "e1884919"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridge\",\"outputs\":[{\"internalType\":\"contract ITokenBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridgeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":\"SpokeGetters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"example-2/evm/src/contracts/HubSpokeStructs.sol\":{\"keccak256\":\"0x24302b1f2d165f5b53d3bedd11aa1c367d30458bb93e0a34a79a939e753fd7dc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://11d40dd261195ea6fe19f0aa56d2aad5040cabd000041b250d3419985e9d6a9e\",\"dweb:/ipfs/Qmd59wjnwsyt2ave7vYQZQdPxk2AGHAvWVhQAUGAgxPMJ6\"]},\"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":{\"keccak256\":\"0xb997dc0290213b1a75e59c29dd4a2528d203bc6c2f511db26e07c9e7e4795d4b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fe39567ca05eca938a1a173c036a348bc0abde7af35227d5fa38a7e173813166\",\"dweb:/ipfs/QmPU7NnzM1MLPHFH9rpxT9PU8Xn3kpw9beyaxfbi4hcf3V\"]},\"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol\":{\"keccak256\":\"0xf80dacbb4d6dcdaf5e87cd345ce29cbbcd8de072a0afc52893a2afb62eee3e79\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://da38f2e7895e5a2cd7434bb9379c8e302e2d1332469e0981273acbad59613802\",\"dweb:/ipfs/QmYmEgB535PXwEywshC7PdbgxiT2Av1MstdUnttHWgq4SM\"]},\"example-2/evm/src/interfaces/ITokenBridge.sol\":{\"keccak256\":\"0x4c464b3e06d31406bd5c777cf8cc985a2f61ce363b6b8f1471c6b5c5da85bf17\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://acb5d5fc309b2cb1db62e1a8b9b3a1cb30b66f6b92b39477beb7a6bc61e0a4ae\",\"dweb:/ipfs/QmakrPQL2o7uVBYenB4wf1rth1JwKRoo7rJdXx7EPKczva\"]},\"example-2/evm/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xecabfd3b5626aaac6da21213b966a2aac8380f4fec739f84ffe08b29006d134e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://912a0accde3c2d18f8d268726ec16b9dfa0f24522e66e7d88c9ed368f3db7d60\",\"dweb:/ipfs/Qmf2V8YhAXRSYVFKuCeCViYAnnWtPi9GTL7w4zRPtMvGTT\"]},\"example-2/evm/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x8547d11f760ad248fe6620e146ed7756654f26b769f9deebdbb84d534144e216\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://5ac7aae1f4c9fbf06056856e854ba7ab14a5c7a487618f0a5a752e25d8d36563\",\"dweb:/ipfs/QmNf2aFrp4tgEGd1AvaSJTMHb72RVgw1TBfvNp5tQ2TZH8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 931,
								"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol:SpokeGetters",
								"label": "_state",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(State)927_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_struct(Provider)913_storage": {
								"encoding": "inplace",
								"label": "struct SpokeStorage.Provider",
								"members": [
									{
										"astId": 908,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol:SpokeGetters",
										"label": "chainId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint16"
									},
									{
										"astId": 910,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol:SpokeGetters",
										"label": "wormhole",
										"offset": 2,
										"slot": "0",
										"type": "t_address_payable"
									},
									{
										"astId": 912,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol:SpokeGetters",
										"label": "tokenBridge",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(State)927_storage": {
								"encoding": "inplace",
								"label": "struct SpokeStorage.State",
								"members": [
									{
										"astId": 916,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol:SpokeGetters",
										"label": "provider",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Provider)913_storage"
									},
									{
										"astId": 918,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol:SpokeGetters",
										"label": "consistencyLevel",
										"offset": 0,
										"slot": "2",
										"type": "t_uint8"
									},
									{
										"astId": 920,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol:SpokeGetters",
										"label": "hubChainId",
										"offset": 1,
										"slot": "2",
										"type": "t_uint16"
									},
									{
										"astId": 922,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol:SpokeGetters",
										"label": "hubContractAddress",
										"offset": 3,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 926,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol:SpokeGetters",
										"label": "______gap",
										"offset": 0,
										"slot": "3",
										"type": "t_array(t_uint256)50_storage"
									}
								],
								"numberOfBytes": "1696"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol": {
				"SpokeSetters": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol\":125:783  contract SpokeSetters is HubSpokeStructs, SpokeState {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol\":125:783  contract SpokeSetters is HubSpokeStructs, SpokeState {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c0ce67c18b4e69af215fa056ee561fbc52214ec92ba9e435703e2e69ecadd32664736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea2646970667358221220c0ce67c18b4e69af215fa056ee561fbc52214ec92ba9e435703e2e69ecadd32664736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0xCE PUSH8 0xC18B4E69AF215FA0 JUMP 0xEE JUMP 0x1F 0xBC MSTORE 0x21 0x4E 0xC9 0x2B 0xA9 0xE4 CALLDATALOAD PUSH17 0x3E2E69ECADD32664736F6C634300081700 CALLER ",
							"sourceMap": "125:658:6:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea2646970667358221220c0ce67c18b4e69af215fa056ee561fbc52214ec92ba9e435703e2e69ecadd32664736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0xCE PUSH8 0xC18B4E69AF215FA0 JUMP 0xEE JUMP 0x1F 0xBC MSTORE 0x21 0x4E 0xC9 0x2B 0xA9 0xE4 CALLDATALOAD PUSH17 0x3E2E69ECADD32664736F6C634300081700 CALLER ",
							"sourceMap": "125:658:6:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							},
							"internal": {
								"setChainId(uint16)": "infinite",
								"setHubChainId(uint16)": "infinite",
								"setHubContractAddress(address)": "infinite",
								"setTokenBridge(address)": "infinite",
								"setWormhole(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 125,
									"end": 783,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 125,
									"end": 783,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 125,
									"end": 783,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 125,
									"end": 783,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 125,
									"end": 783,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 125,
									"end": 783,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 125,
									"end": 783,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 125,
									"end": 783,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 125,
									"end": 783,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 783,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 125,
									"end": 783,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 125,
									"end": 783,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 125,
									"end": 783,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 125,
									"end": 783,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 125,
									"end": 783,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 125,
									"end": 783,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 125,
									"end": 783,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 125,
									"end": 783,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 783,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 125,
									"end": 783,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 783,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c0ce67c18b4e69af215fa056ee561fbc52214ec92ba9e435703e2e69ecadd32664736f6c63430008170033",
									".code": [
										{
											"begin": 125,
											"end": 783,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 125,
											"end": 783,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 125,
											"end": 783,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 125,
											"end": 783,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 783,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 125,
											"end": 783,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"example-2/evm/src/contracts/HubSpokeStructs.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol",
								"example-2/evm/src/interfaces/ITokenBridge.sol",
								"example-2/evm/src/interfaces/IWETH.sol",
								"example-2/evm/src/interfaces/IWormhole.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol\":\"SpokeSetters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"example-2/evm/src/contracts/HubSpokeStructs.sol\":{\"keccak256\":\"0x24302b1f2d165f5b53d3bedd11aa1c367d30458bb93e0a34a79a939e753fd7dc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://11d40dd261195ea6fe19f0aa56d2aad5040cabd000041b250d3419985e9d6a9e\",\"dweb:/ipfs/Qmd59wjnwsyt2ave7vYQZQdPxk2AGHAvWVhQAUGAgxPMJ6\"]},\"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol\":{\"keccak256\":\"0x9ac8f289c14b91bfa37e3e4e52de2b7b045ac8b18881600e94f9177e7339180a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://775105aa5cc5315e82d9b7ce6c9ad1c52bf5fb0659ec6f03b3f76339f1ffed78\",\"dweb:/ipfs/QmfWXxyrasDjtXLD1fAvytQe6tQL5cJGsqQUUxhdS3orFu\"]},\"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol\":{\"keccak256\":\"0xf80dacbb4d6dcdaf5e87cd345ce29cbbcd8de072a0afc52893a2afb62eee3e79\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://da38f2e7895e5a2cd7434bb9379c8e302e2d1332469e0981273acbad59613802\",\"dweb:/ipfs/QmYmEgB535PXwEywshC7PdbgxiT2Av1MstdUnttHWgq4SM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 931,
								"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol:SpokeSetters",
								"label": "_state",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(State)927_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_struct(Provider)913_storage": {
								"encoding": "inplace",
								"label": "struct SpokeStorage.Provider",
								"members": [
									{
										"astId": 908,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol:SpokeSetters",
										"label": "chainId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint16"
									},
									{
										"astId": 910,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol:SpokeSetters",
										"label": "wormhole",
										"offset": 2,
										"slot": "0",
										"type": "t_address_payable"
									},
									{
										"astId": 912,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol:SpokeSetters",
										"label": "tokenBridge",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(State)927_storage": {
								"encoding": "inplace",
								"label": "struct SpokeStorage.State",
								"members": [
									{
										"astId": 916,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol:SpokeSetters",
										"label": "provider",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Provider)913_storage"
									},
									{
										"astId": 918,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol:SpokeSetters",
										"label": "consistencyLevel",
										"offset": 0,
										"slot": "2",
										"type": "t_uint8"
									},
									{
										"astId": 920,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol:SpokeSetters",
										"label": "hubChainId",
										"offset": 1,
										"slot": "2",
										"type": "t_uint16"
									},
									{
										"astId": 922,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol:SpokeSetters",
										"label": "hubContractAddress",
										"offset": 3,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 926,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol:SpokeSetters",
										"label": "______gap",
										"offset": 0,
										"slot": "3",
										"type": "t_array(t_uint256)50_storage"
									}
								],
								"numberOfBytes": "1696"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol": {
				"SpokeState": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol\":523:577  contract SpokeState {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol\":523:577  contract SpokeState {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b6cdfa95409cb40404c6ba5801e0af8d0d3e870e43ffea9dd67208f355b0b8a364736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea2646970667358221220b6cdfa95409cb40404c6ba5801e0af8d0d3e870e43ffea9dd67208f355b0b8a364736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 0xCD STATICCALL SWAP6 BLOCKHASH SWAP13 0xB4 DIV DIV 0xC6 0xBA PC ADD 0xE0 0xAF DUP14 0xD RETURNDATACOPY DUP8 0xE NUMBER SELFDESTRUCT 0xEA SWAP14 0xD6 PUSH19 0x8F355B0B8A364736F6C634300081700330000 ",
							"sourceMap": "523:54:7:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea2646970667358221220b6cdfa95409cb40404c6ba5801e0af8d0d3e870e43ffea9dd67208f355b0b8a364736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 0xCD STATICCALL SWAP6 BLOCKHASH SWAP13 0xB4 DIV DIV 0xC6 0xBA PC ADD 0xE0 0xAF DUP14 0xD RETURNDATACOPY DUP8 0xE NUMBER SELFDESTRUCT 0xEA SWAP14 0xD6 PUSH19 0x8F355B0B8A364736F6C634300081700330000 ",
							"sourceMap": "523:54:7:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 523,
									"end": 577,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 523,
									"end": 577,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 523,
									"end": 577,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 523,
									"end": 577,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 523,
									"end": 577,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 523,
									"end": 577,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 523,
									"end": 577,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 523,
									"end": 577,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 523,
									"end": 577,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 577,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 523,
									"end": 577,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 523,
									"end": 577,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 523,
									"end": 577,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 523,
									"end": 577,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 523,
									"end": 577,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 523,
									"end": 577,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 523,
									"end": 577,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 523,
									"end": 577,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 577,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 523,
									"end": 577,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 577,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b6cdfa95409cb40404c6ba5801e0af8d0d3e870e43ffea9dd67208f355b0b8a364736f6c63430008170033",
									".code": [
										{
											"begin": 523,
											"end": 577,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 523,
											"end": 577,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 577,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 523,
											"end": 577,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 577,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 523,
											"end": 577,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"example-2/evm/src/contracts/HubSpokeStructs.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol",
								"example-2/evm/src/interfaces/ITokenBridge.sol",
								"example-2/evm/src/interfaces/IWETH.sol",
								"example-2/evm/src/interfaces/IWormhole.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol\":\"SpokeState\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"example-2/evm/src/contracts/HubSpokeStructs.sol\":{\"keccak256\":\"0x24302b1f2d165f5b53d3bedd11aa1c367d30458bb93e0a34a79a939e753fd7dc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://11d40dd261195ea6fe19f0aa56d2aad5040cabd000041b250d3419985e9d6a9e\",\"dweb:/ipfs/Qmd59wjnwsyt2ave7vYQZQdPxk2AGHAvWVhQAUGAgxPMJ6\"]},\"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol\":{\"keccak256\":\"0xf80dacbb4d6dcdaf5e87cd345ce29cbbcd8de072a0afc52893a2afb62eee3e79\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://da38f2e7895e5a2cd7434bb9379c8e302e2d1332469e0981273acbad59613802\",\"dweb:/ipfs/QmYmEgB535PXwEywshC7PdbgxiT2Av1MstdUnttHWgq4SM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 931,
								"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol:SpokeState",
								"label": "_state",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(State)927_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_struct(Provider)913_storage": {
								"encoding": "inplace",
								"label": "struct SpokeStorage.Provider",
								"members": [
									{
										"astId": 908,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol:SpokeState",
										"label": "chainId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint16"
									},
									{
										"astId": 910,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol:SpokeState",
										"label": "wormhole",
										"offset": 2,
										"slot": "0",
										"type": "t_address_payable"
									},
									{
										"astId": 912,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol:SpokeState",
										"label": "tokenBridge",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(State)927_storage": {
								"encoding": "inplace",
								"label": "struct SpokeStorage.State",
								"members": [
									{
										"astId": 916,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol:SpokeState",
										"label": "provider",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Provider)913_storage"
									},
									{
										"astId": 918,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol:SpokeState",
										"label": "consistencyLevel",
										"offset": 0,
										"slot": "2",
										"type": "t_uint8"
									},
									{
										"astId": 920,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol:SpokeState",
										"label": "hubChainId",
										"offset": 1,
										"slot": "2",
										"type": "t_uint16"
									},
									{
										"astId": 922,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol:SpokeState",
										"label": "hubContractAddress",
										"offset": 3,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 926,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol:SpokeState",
										"label": "______gap",
										"offset": 0,
										"slot": "3",
										"type": "t_array(t_uint256)50_storage"
									}
								],
								"numberOfBytes": "1696"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SpokeStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol\":98:521  contract SpokeStorage is HubSpokeStructs {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol\":98:521  contract SpokeStorage is HubSpokeStructs {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c27287bbb7b9c08ae54991115ed3c37a1c38ff5640b9039f1e56547b4d95a7cf64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea2646970667358221220c27287bbb7b9c08ae54991115ed3c37a1c38ff5640b9039f1e56547b4d95a7cf64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 PUSH19 0x87BBB7B9C08AE54991115ED3C37A1C38FF5640 0xB9 SUB SWAP16 0x1E JUMP SLOAD PUSH28 0x4D95A7CF64736F6C6343000817003300000000000000000000000000 ",
							"sourceMap": "98:423:7:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea2646970667358221220c27287bbb7b9c08ae54991115ed3c37a1c38ff5640b9039f1e56547b4d95a7cf64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 PUSH19 0x87BBB7B9C08AE54991115ED3C37A1C38FF5640 0xB9 SUB SWAP16 0x1E JUMP SLOAD PUSH28 0x4D95A7CF64736F6C6343000817003300000000000000000000000000 ",
							"sourceMap": "98:423:7:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 98,
									"end": 521,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 98,
									"end": 521,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 98,
									"end": 521,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 98,
									"end": 521,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 98,
									"end": 521,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 98,
									"end": 521,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 98,
									"end": 521,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 98,
									"end": 521,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 98,
									"end": 521,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 521,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 98,
									"end": 521,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 98,
									"end": 521,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 98,
									"end": 521,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 98,
									"end": 521,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 98,
									"end": 521,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 521,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 98,
									"end": 521,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 521,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 521,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 98,
									"end": 521,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 521,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c27287bbb7b9c08ae54991115ed3c37a1c38ff5640b9039f1e56547b4d95a7cf64736f6c63430008170033",
									".code": [
										{
											"begin": 98,
											"end": 521,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 98,
											"end": 521,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 98,
											"end": 521,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 98,
											"end": 521,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 521,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 98,
											"end": 521,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"example-2/evm/src/contracts/HubSpokeStructs.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol",
								"example-2/evm/src/interfaces/ITokenBridge.sol",
								"example-2/evm/src/interfaces/IWETH.sol",
								"example-2/evm/src/interfaces/IWormhole.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol\":\"SpokeStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"example-2/evm/src/contracts/HubSpokeStructs.sol\":{\"keccak256\":\"0x24302b1f2d165f5b53d3bedd11aa1c367d30458bb93e0a34a79a939e753fd7dc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://11d40dd261195ea6fe19f0aa56d2aad5040cabd000041b250d3419985e9d6a9e\",\"dweb:/ipfs/Qmd59wjnwsyt2ave7vYQZQdPxk2AGHAvWVhQAUGAgxPMJ6\"]},\"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol\":{\"keccak256\":\"0xf80dacbb4d6dcdaf5e87cd345ce29cbbcd8de072a0afc52893a2afb62eee3e79\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://da38f2e7895e5a2cd7434bb9379c8e302e2d1332469e0981273acbad59613802\",\"dweb:/ipfs/QmYmEgB535PXwEywshC7PdbgxiT2Av1MstdUnttHWgq4SM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol": {
				"SpokeUtilities": {
					"abi": [
						{
							"inputs": [],
							"name": "chainId",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenBridge",
							"outputs": [
								{
									"internalType": "contract ITokenBridge",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenBridgeAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":338:2358  contract SpokeUtilities is HubSpokeStructs, SpokeState, SpokeGetters, SpokeSetters {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":338:2358  contract SpokeUtilities is HubSpokeStructs, SpokeState, SpokeGetters, SpokeSetters {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9a8a0592\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xc6328a46\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe1884919\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":269:364  function chainId() public view returns (uint16) {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":489:621  function tokenBridge() public view returns (ITokenBridge) {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":627:738  function tokenBridgeAddress() public view returns (address) {... */\n    tag_5:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":269:364  function chainId() public view returns (uint16) {... */\n    tag_7:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":309:315  uint16 */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":334:340  _state */\n      dup1\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":334:349  _state.provider */\n      0x00\n      add\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":334:357  _state.provider.chainId */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":327:357  return _state.provider.chainId */\n      swap1\n      pop\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":269:364  function chainId() public view returns (uint16) {... */\n      swap1\n      jump\t// out\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":489:621  function tokenBridge() public view returns (ITokenBridge) {... */\n    tag_11:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":533:545  ITokenBridge */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":585:591  _state */\n      dup1\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":585:600  _state.provider */\n      0x00\n      add\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":585:612  _state.provider.tokenBridge */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":557:614  return ITokenBridge(payable(_state.provider.tokenBridge)) */\n      swap1\n      pop\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":489:621  function tokenBridge() public view returns (ITokenBridge) {... */\n      swap1\n      jump\t// out\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":627:738  function tokenBridgeAddress() public view returns (address) {... */\n    tag_15:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":678:685  address */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":704:710  _state */\n      dup1\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":704:719  _state.provider */\n      0x00\n      add\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":704:731  _state.provider.tokenBridge */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":697:731  return _state.provider.tokenBridge */\n      swap1\n      pop\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":627:738  function tokenBridgeAddress() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:96   */\n    tag_21:\n        /* \"#utility.yul\":43:50   */\n      0x00\n        /* \"#utility.yul\":83:89   */\n      0xffff\n        /* \"#utility.yul\":76:81   */\n      dup3\n        /* \"#utility.yul\":72:90   */\n      and\n        /* \"#utility.yul\":61:90   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:96   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":102:217   */\n    tag_22:\n        /* \"#utility.yul\":187:210   */\n      tag_34\n        /* \"#utility.yul\":204:209   */\n      dup2\n        /* \"#utility.yul\":187:210   */\n      tag_21\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":182:185   */\n      dup3\n        /* \"#utility.yul\":175:211   */\n      mstore\n        /* \"#utility.yul\":102:217   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":223:441   */\n    tag_9:\n        /* \"#utility.yul\":314:318   */\n      0x00\n        /* \"#utility.yul\":352:354   */\n      0x20\n        /* \"#utility.yul\":341:350   */\n      dup3\n        /* \"#utility.yul\":337:355   */\n      add\n        /* \"#utility.yul\":329:355   */\n      swap1\n      pop\n        /* \"#utility.yul\":365:434   */\n      tag_36\n        /* \"#utility.yul\":431:432   */\n      0x00\n        /* \"#utility.yul\":420:429   */\n      dup4\n        /* \"#utility.yul\":416:433   */\n      add\n        /* \"#utility.yul\":407:413   */\n      dup5\n        /* \"#utility.yul\":365:434   */\n      tag_22\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":223:441   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":447:573   */\n    tag_23:\n        /* \"#utility.yul\":484:491   */\n      0x00\n        /* \"#utility.yul\":524:566   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":517:522   */\n      dup3\n        /* \"#utility.yul\":513:567   */\n      and\n        /* \"#utility.yul\":502:567   */\n      swap1\n      pop\n        /* \"#utility.yul\":447:573   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":579:639   */\n    tag_24:\n        /* \"#utility.yul\":607:610   */\n      0x00\n        /* \"#utility.yul\":628:633   */\n      dup2\n        /* \"#utility.yul\":621:633   */\n      swap1\n      pop\n        /* \"#utility.yul\":579:639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":645:787   */\n    tag_25:\n        /* \"#utility.yul\":695:704   */\n      0x00\n        /* \"#utility.yul\":728:781   */\n      tag_40\n        /* \"#utility.yul\":746:780   */\n      tag_41\n        /* \"#utility.yul\":755:779   */\n      tag_42\n        /* \"#utility.yul\":773:778   */\n      dup5\n        /* \"#utility.yul\":755:779   */\n      tag_23\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":746:780   */\n      tag_24\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":728:781   */\n      tag_23\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":715:781   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:787   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":793:919   */\n    tag_26:\n        /* \"#utility.yul\":843:852   */\n      0x00\n        /* \"#utility.yul\":876:913   */\n      tag_44\n        /* \"#utility.yul\":907:912   */\n      dup3\n        /* \"#utility.yul\":876:913   */\n      tag_25\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":863:913   */\n      swap1\n      pop\n        /* \"#utility.yul\":793:919   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":925:1072   */\n    tag_27:\n        /* \"#utility.yul\":996:1005   */\n      0x00\n        /* \"#utility.yul\":1029:1066   */\n      tag_46\n        /* \"#utility.yul\":1060:1065   */\n      dup3\n        /* \"#utility.yul\":1029:1066   */\n      tag_26\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1016:1066   */\n      swap1\n      pop\n        /* \"#utility.yul\":925:1072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1078:1251   */\n    tag_28:\n        /* \"#utility.yul\":1186:1244   */\n      tag_48\n        /* \"#utility.yul\":1238:1243   */\n      dup2\n        /* \"#utility.yul\":1186:1244   */\n      tag_27\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1181:1184   */\n      dup3\n        /* \"#utility.yul\":1174:1245   */\n      mstore\n        /* \"#utility.yul\":1078:1251   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1257:1521   */\n    tag_13:\n        /* \"#utility.yul\":1371:1375   */\n      0x00\n        /* \"#utility.yul\":1409:1411   */\n      0x20\n        /* \"#utility.yul\":1398:1407   */\n      dup3\n        /* \"#utility.yul\":1394:1412   */\n      add\n        /* \"#utility.yul\":1386:1412   */\n      swap1\n      pop\n        /* \"#utility.yul\":1422:1514   */\n      tag_50\n        /* \"#utility.yul\":1511:1512   */\n      0x00\n        /* \"#utility.yul\":1500:1509   */\n      dup4\n        /* \"#utility.yul\":1496:1513   */\n      add\n        /* \"#utility.yul\":1487:1493   */\n      dup5\n        /* \"#utility.yul\":1422:1514   */\n      tag_28\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1257:1521   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1527:1623   */\n    tag_29:\n        /* \"#utility.yul\":1564:1571   */\n      0x00\n        /* \"#utility.yul\":1593:1617   */\n      tag_52\n        /* \"#utility.yul\":1611:1616   */\n      dup3\n        /* \"#utility.yul\":1593:1617   */\n      tag_23\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1582:1617   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1623   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1629:1747   */\n    tag_30:\n        /* \"#utility.yul\":1716:1740   */\n      tag_54\n        /* \"#utility.yul\":1734:1739   */\n      dup2\n        /* \"#utility.yul\":1716:1740   */\n      tag_29\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1711:1714   */\n      dup3\n        /* \"#utility.yul\":1704:1741   */\n      mstore\n        /* \"#utility.yul\":1629:1747   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1753:1975   */\n    tag_17:\n        /* \"#utility.yul\":1846:1850   */\n      0x00\n        /* \"#utility.yul\":1884:1886   */\n      0x20\n        /* \"#utility.yul\":1873:1882   */\n      dup3\n        /* \"#utility.yul\":1869:1887   */\n      add\n        /* \"#utility.yul\":1861:1887   */\n      swap1\n      pop\n        /* \"#utility.yul\":1897:1968   */\n      tag_56\n        /* \"#utility.yul\":1965:1966   */\n      0x00\n        /* \"#utility.yul\":1954:1963   */\n      dup4\n        /* \"#utility.yul\":1950:1967   */\n      add\n        /* \"#utility.yul\":1941:1947   */\n      dup5\n        /* \"#utility.yul\":1897:1968   */\n      tag_30\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1753:1975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220141de2ebffecbf25c900511e6ad382020baed90626968785b7997df2e079bce164736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506102458061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c80639a8a059214610043578063c6328a4614610061578063e18849191461007f575b5f80fd5b61004b61009d565b604051610058919061012a565b60405180910390f35b6100696100b6565b60405161007691906101bd565b60405180910390f35b6100876100e2565b60405161009491906101f6565b60405180910390f35b5f805f015f015f9054906101000a900461ffff16905090565b5f805f016001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f016001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f61ffff82169050919050565b6101248161010e565b82525050565b5f60208201905061013d5f83018461011b565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61018561018061017b84610143565b610162565b610143565b9050919050565b5f6101968261016b565b9050919050565b5f6101a78261018c565b9050919050565b6101b78161019d565b82525050565b5f6020820190506101d05f8301846101ae565b92915050565b5f6101e082610143565b9050919050565b6101f0816101d6565b82525050565b5f6020820190506102095f8301846101e7565b9291505056fea2646970667358221220141de2ebffecbf25c900511e6ad382020baed90626968785b7997df2e079bce164736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A8A0592 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xC6328A46 EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xE1884919 EQ PUSH2 0x7F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x12A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH2 0xB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x1BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x87 PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 ADD PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 ADD PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 ADD PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x124 DUP2 PUSH2 0x10E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13D PUSH0 DUP4 ADD DUP5 PUSH2 0x11B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x185 PUSH2 0x180 PUSH2 0x17B DUP5 PUSH2 0x143 JUMP JUMPDEST PUSH2 0x162 JUMP JUMPDEST PUSH2 0x143 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x196 DUP3 PUSH2 0x16B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A7 DUP3 PUSH2 0x18C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B7 DUP2 PUSH2 0x19D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E0 DUP3 PUSH2 0x143 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0 DUP2 PUSH2 0x1D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x209 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ SAR 0xE2 0xEB SELFDESTRUCT 0xEC 0xBF 0x25 0xC9 STOP MLOAD 0x1E PUSH11 0xD382020BAED90626968785 0xB7 SWAP10 PUSH30 0xF2E079BCE164736F6C634300081700330000000000000000000000000000 ",
							"sourceMap": "338:2020:8:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@chainId_756": {
									"entryPoint": 157,
									"id": 756,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenBridgeAddress_795": {
									"entryPoint": 226,
									"id": 795,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenBridge_785": {
									"entryPoint": 182,
									"id": 785,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ITokenBridge_$1559_to_t_address_fromStack": {
									"entryPoint": 430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint16_to_t_uint16_fromStack": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ITokenBridge_$1559__to_t_address__fromStack_reversed": {
									"entryPoint": 445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": 298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ITokenBridge_$1559_to_t_address": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1978:12",
										"nodeType": "YulBlock",
										"src": "0:1978:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:45:12",
													"nodeType": "YulBlock",
													"src": "51:45:12",
													"statements": [
														{
															"nativeSrc": "61:29:12",
															"nodeType": "YulAssignment",
															"src": "61:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "76:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "83:6:12",
																		"nodeType": "YulLiteral",
																		"src": "83:6:12",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "72:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:12"
																},
																"nativeSrc": "72:18:12",
																"nodeType": "YulFunctionCall",
																"src": "72:18:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nativeSrc": "7:89:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:12",
														"nodeType": "YulTypedName",
														"src": "33:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:12",
														"nodeType": "YulTypedName",
														"src": "43:7:12",
														"type": ""
													}
												],
												"src": "7:89:12"
											},
											{
												"body": {
													"nativeSrc": "165:52:12",
													"nodeType": "YulBlock",
													"src": "165:52:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "182:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "182:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "204:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "204:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint16",
																			"nativeSrc": "187:16:12",
																			"nodeType": "YulIdentifier",
																			"src": "187:16:12"
																		},
																		"nativeSrc": "187:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "187:23:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "175:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "175:6:12"
																},
																"nativeSrc": "175:36:12",
																"nodeType": "YulFunctionCall",
																"src": "175:36:12"
															},
															"nativeSrc": "175:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "175:36:12"
														}
													]
												},
												"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
												"nativeSrc": "102:115:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "153:5:12",
														"nodeType": "YulTypedName",
														"src": "153:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "160:3:12",
														"nodeType": "YulTypedName",
														"src": "160:3:12",
														"type": ""
													}
												],
												"src": "102:115:12"
											},
											{
												"body": {
													"nativeSrc": "319:122:12",
													"nodeType": "YulBlock",
													"src": "319:122:12",
													"statements": [
														{
															"nativeSrc": "329:26:12",
															"nodeType": "YulAssignment",
															"src": "329:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "341:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "341:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "352:2:12",
																		"nodeType": "YulLiteral",
																		"src": "352:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "337:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "337:3:12"
																},
																"nativeSrc": "337:18:12",
																"nodeType": "YulFunctionCall",
																"src": "337:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "329:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "329:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "407:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "407:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "420:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "420:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "431:1:12",
																				"nodeType": "YulLiteral",
																				"src": "431:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "416:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "416:3:12"
																		},
																		"nativeSrc": "416:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "416:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
																	"nativeSrc": "365:41:12",
																	"nodeType": "YulIdentifier",
																	"src": "365:41:12"
																},
																"nativeSrc": "365:69:12",
																"nodeType": "YulFunctionCall",
																"src": "365:69:12"
															},
															"nativeSrc": "365:69:12",
															"nodeType": "YulExpressionStatement",
															"src": "365:69:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nativeSrc": "223:218:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "291:9:12",
														"nodeType": "YulTypedName",
														"src": "291:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "303:6:12",
														"nodeType": "YulTypedName",
														"src": "303:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "314:4:12",
														"nodeType": "YulTypedName",
														"src": "314:4:12",
														"type": ""
													}
												],
												"src": "223:218:12"
											},
											{
												"body": {
													"nativeSrc": "492:81:12",
													"nodeType": "YulBlock",
													"src": "492:81:12",
													"statements": [
														{
															"nativeSrc": "502:65:12",
															"nodeType": "YulAssignment",
															"src": "502:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "517:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "517:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "524:42:12",
																		"nodeType": "YulLiteral",
																		"src": "524:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "513:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:12"
																},
																"nativeSrc": "513:54:12",
																"nodeType": "YulFunctionCall",
																"src": "513:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "502:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "502:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "447:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "474:5:12",
														"nodeType": "YulTypedName",
														"src": "474:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "484:7:12",
														"nodeType": "YulTypedName",
														"src": "484:7:12",
														"type": ""
													}
												],
												"src": "447:126:12"
											},
											{
												"body": {
													"nativeSrc": "611:28:12",
													"nodeType": "YulBlock",
													"src": "611:28:12",
													"statements": [
														{
															"nativeSrc": "621:12:12",
															"nodeType": "YulAssignment",
															"src": "621:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "628:5:12",
																"nodeType": "YulIdentifier",
																"src": "628:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "621:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "621:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "579:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "597:5:12",
														"nodeType": "YulTypedName",
														"src": "597:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "607:3:12",
														"nodeType": "YulTypedName",
														"src": "607:3:12",
														"type": ""
													}
												],
												"src": "579:60:12"
											},
											{
												"body": {
													"nativeSrc": "705:82:12",
													"nodeType": "YulBlock",
													"src": "705:82:12",
													"statements": [
														{
															"nativeSrc": "715:66:12",
															"nodeType": "YulAssignment",
															"src": "715:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "773:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "773:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "755:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "755:17:12"
																				},
																				"nativeSrc": "755:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "755:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "746:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "746:8:12"
																		},
																		"nativeSrc": "746:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "746:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "728:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "728:17:12"
																},
																"nativeSrc": "728:53:12",
																"nodeType": "YulFunctionCall",
																"src": "728:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "715:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "715:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "645:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "685:5:12",
														"nodeType": "YulTypedName",
														"src": "685:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "695:9:12",
														"nodeType": "YulTypedName",
														"src": "695:9:12",
														"type": ""
													}
												],
												"src": "645:142:12"
											},
											{
												"body": {
													"nativeSrc": "853:66:12",
													"nodeType": "YulBlock",
													"src": "853:66:12",
													"statements": [
														{
															"nativeSrc": "863:50:12",
															"nodeType": "YulAssignment",
															"src": "863:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "907:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "907:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "876:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "876:30:12"
																},
																"nativeSrc": "876:37:12",
																"nodeType": "YulFunctionCall",
																"src": "876:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "863:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "863:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "793:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "833:5:12",
														"nodeType": "YulTypedName",
														"src": "833:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "843:9:12",
														"nodeType": "YulTypedName",
														"src": "843:9:12",
														"type": ""
													}
												],
												"src": "793:126:12"
											},
											{
												"body": {
													"nativeSrc": "1006:66:12",
													"nodeType": "YulBlock",
													"src": "1006:66:12",
													"statements": [
														{
															"nativeSrc": "1016:50:12",
															"nodeType": "YulAssignment",
															"src": "1016:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1060:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1060:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1029:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "1029:30:12"
																},
																"nativeSrc": "1029:37:12",
																"nodeType": "YulFunctionCall",
																"src": "1029:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1016:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "1016:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ITokenBridge_$1559_to_t_address",
												"nativeSrc": "925:147:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "986:5:12",
														"nodeType": "YulTypedName",
														"src": "986:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "996:9:12",
														"nodeType": "YulTypedName",
														"src": "996:9:12",
														"type": ""
													}
												],
												"src": "925:147:12"
											},
											{
												"body": {
													"nativeSrc": "1164:87:12",
													"nodeType": "YulBlock",
													"src": "1164:87:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1181:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1181:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1238:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1238:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ITokenBridge_$1559_to_t_address",
																			"nativeSrc": "1186:51:12",
																			"nodeType": "YulIdentifier",
																			"src": "1186:51:12"
																		},
																		"nativeSrc": "1186:58:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1186:58:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1174:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1174:6:12"
																},
																"nativeSrc": "1174:71:12",
																"nodeType": "YulFunctionCall",
																"src": "1174:71:12"
															},
															"nativeSrc": "1174:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "1174:71:12"
														}
													]
												},
												"name": "abi_encode_t_contract$_ITokenBridge_$1559_to_t_address_fromStack",
												"nativeSrc": "1078:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1152:5:12",
														"nodeType": "YulTypedName",
														"src": "1152:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1159:3:12",
														"nodeType": "YulTypedName",
														"src": "1159:3:12",
														"type": ""
													}
												],
												"src": "1078:173:12"
											},
											{
												"body": {
													"nativeSrc": "1376:145:12",
													"nodeType": "YulBlock",
													"src": "1376:145:12",
													"statements": [
														{
															"nativeSrc": "1386:26:12",
															"nodeType": "YulAssignment",
															"src": "1386:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1398:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1409:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1409:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1394:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1394:3:12"
																},
																"nativeSrc": "1394:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1394:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1386:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1386:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1487:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1487:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1500:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1500:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1511:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1511:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1496:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1496:3:12"
																		},
																		"nativeSrc": "1496:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1496:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ITokenBridge_$1559_to_t_address_fromStack",
																	"nativeSrc": "1422:64:12",
																	"nodeType": "YulIdentifier",
																	"src": "1422:64:12"
																},
																"nativeSrc": "1422:92:12",
																"nodeType": "YulFunctionCall",
																"src": "1422:92:12"
															},
															"nativeSrc": "1422:92:12",
															"nodeType": "YulExpressionStatement",
															"src": "1422:92:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ITokenBridge_$1559__to_t_address__fromStack_reversed",
												"nativeSrc": "1257:264:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1348:9:12",
														"nodeType": "YulTypedName",
														"src": "1348:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1360:6:12",
														"nodeType": "YulTypedName",
														"src": "1360:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1371:4:12",
														"nodeType": "YulTypedName",
														"src": "1371:4:12",
														"type": ""
													}
												],
												"src": "1257:264:12"
											},
											{
												"body": {
													"nativeSrc": "1572:51:12",
													"nodeType": "YulBlock",
													"src": "1572:51:12",
													"statements": [
														{
															"nativeSrc": "1582:35:12",
															"nodeType": "YulAssignment",
															"src": "1582:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1611:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1611:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1593:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1593:17:12"
																},
																"nativeSrc": "1593:24:12",
																"nodeType": "YulFunctionCall",
																"src": "1593:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1582:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1582:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1527:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1554:5:12",
														"nodeType": "YulTypedName",
														"src": "1554:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1564:7:12",
														"nodeType": "YulTypedName",
														"src": "1564:7:12",
														"type": ""
													}
												],
												"src": "1527:96:12"
											},
											{
												"body": {
													"nativeSrc": "1694:53:12",
													"nodeType": "YulBlock",
													"src": "1694:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1711:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1711:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1734:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1734:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1716:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "1716:17:12"
																		},
																		"nativeSrc": "1716:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1716:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1704:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:12"
																},
																"nativeSrc": "1704:37:12",
																"nodeType": "YulFunctionCall",
																"src": "1704:37:12"
															},
															"nativeSrc": "1704:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "1704:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1629:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1682:5:12",
														"nodeType": "YulTypedName",
														"src": "1682:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1689:3:12",
														"nodeType": "YulTypedName",
														"src": "1689:3:12",
														"type": ""
													}
												],
												"src": "1629:118:12"
											},
											{
												"body": {
													"nativeSrc": "1851:124:12",
													"nodeType": "YulBlock",
													"src": "1851:124:12",
													"statements": [
														{
															"nativeSrc": "1861:26:12",
															"nodeType": "YulAssignment",
															"src": "1861:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1873:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1873:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1884:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1884:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1869:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1869:3:12"
																},
																"nativeSrc": "1869:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1869:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1861:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1861:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1941:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1941:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1954:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1954:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1965:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1965:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1950:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1950:3:12"
																		},
																		"nativeSrc": "1950:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1950:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1897:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "1897:43:12"
																},
																"nativeSrc": "1897:71:12",
																"nodeType": "YulFunctionCall",
																"src": "1897:71:12"
															},
															"nativeSrc": "1897:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "1897:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1753:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1823:9:12",
														"nodeType": "YulTypedName",
														"src": "1823:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1835:6:12",
														"nodeType": "YulTypedName",
														"src": "1835:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1846:4:12",
														"nodeType": "YulTypedName",
														"src": "1846:4:12",
														"type": ""
													}
												],
												"src": "1753:222:12"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ITokenBridge_$1559_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ITokenBridge_$1559_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ITokenBridge_$1559_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ITokenBridge_$1559__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ITokenBridge_$1559_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c80639a8a059214610043578063c6328a4614610061578063e18849191461007f575b5f80fd5b61004b61009d565b604051610058919061012a565b60405180910390f35b6100696100b6565b60405161007691906101bd565b60405180910390f35b6100876100e2565b60405161009491906101f6565b60405180910390f35b5f805f015f015f9054906101000a900461ffff16905090565b5f805f016001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f016001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f61ffff82169050919050565b6101248161010e565b82525050565b5f60208201905061013d5f83018461011b565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61018561018061017b84610143565b610162565b610143565b9050919050565b5f6101968261016b565b9050919050565b5f6101a78261018c565b9050919050565b6101b78161019d565b82525050565b5f6020820190506101d05f8301846101ae565b92915050565b5f6101e082610143565b9050919050565b6101f0816101d6565b82525050565b5f6020820190506102095f8301846101e7565b9291505056fea2646970667358221220141de2ebffecbf25c900511e6ad382020baed90626968785b7997df2e079bce164736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A8A0592 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xC6328A46 EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xE1884919 EQ PUSH2 0x7F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x12A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH2 0xB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x1BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x87 PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 ADD PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 ADD PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 ADD PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x124 DUP2 PUSH2 0x10E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13D PUSH0 DUP4 ADD DUP5 PUSH2 0x11B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x185 PUSH2 0x180 PUSH2 0x17B DUP5 PUSH2 0x143 JUMP JUMPDEST PUSH2 0x162 JUMP JUMPDEST PUSH2 0x143 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x196 DUP3 PUSH2 0x16B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A7 DUP3 PUSH2 0x18C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B7 DUP2 PUSH2 0x19D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E0 DUP3 PUSH2 0x143 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0 DUP2 PUSH2 0x1D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x209 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ SAR 0xE2 0xEB SELFDESTRUCT 0xEC 0xBF 0x25 0xC9 STOP MLOAD 0x1E PUSH11 0xD382020BAED90626968785 0xB7 SWAP10 PUSH30 0xF2E079BCE164736F6C634300081700330000000000000000000000000000 ",
							"sourceMap": "338:2020:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;269:95:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;489:132;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;627:111;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;269:95;309:6;334;:15;;:23;;;;;;;;;;;;327:30;;269:95;:::o;489:132::-;533:12;585:6;:15;;:27;;;;;;;;;;;;557:57;;489:132;:::o;627:111::-;678:7;704:6;:15;;:27;;;;;;;;;;;;697:34;;627:111;:::o;7:89:12:-;43:7;83:6;76:5;72:18;61:29;;7:89;;;:::o;102:115::-;187:23;204:5;187:23;:::i;:::-;182:3;175:36;102:115;;:::o;223:218::-;314:4;352:2;341:9;337:18;329:26;;365:69;431:1;420:9;416:17;407:6;365:69;:::i;:::-;223:218;;;;:::o;447:126::-;484:7;524:42;517:5;513:54;502:65;;447:126;;;:::o;579:60::-;607:3;628:5;621:12;;579:60;;;:::o;645:142::-;695:9;728:53;746:34;755:24;773:5;755:24;:::i;:::-;746:34;:::i;:::-;728:53;:::i;:::-;715:66;;645:142;;;:::o;793:126::-;843:9;876:37;907:5;876:37;:::i;:::-;863:50;;793:126;;;:::o;925:147::-;996:9;1029:37;1060:5;1029:37;:::i;:::-;1016:50;;925:147;;;:::o;1078:173::-;1186:58;1238:5;1186:58;:::i;:::-;1181:3;1174:71;1078:173;;:::o;1257:264::-;1371:4;1409:2;1398:9;1394:18;1386:26;;1422:92;1511:1;1500:9;1496:17;1487:6;1422:92;:::i;:::-;1257:264;;;;:::o;1527:96::-;1564:7;1593:24;1611:5;1593:24;:::i;:::-;1582:35;;1527:96;;;:::o;1629:118::-;1716:24;1734:5;1716:24;:::i;:::-;1711:3;1704:37;1629:118;;:::o;1753:222::-;1846:4;1884:2;1873:9;1869:18;1861:26;;1897:71;1965:1;1954:9;1950:17;1941:6;1897:71;:::i;:::-;1753:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "116200",
								"executionCost": "163",
								"totalCost": "116363"
							},
							"external": {
								"chainId()": "2461",
								"tokenBridge()": "infinite",
								"tokenBridgeAddress()": "2548"
							},
							"internal": {
								"deNormalizeAmount(uint256,uint8)": "infinite",
								"normalizeAmount(uint256,uint8)": "infinite",
								"requireAssetAmountValidForTokenBridge(address,uint256)": "infinite",
								"sendTokenBridgeMessage(address,uint256,bytes memory)": "infinite",
								"sendTokenBridgeMessageNative(uint256,bytes memory)": "infinite",
								"sendWormholeMessage(bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 338,
									"end": 2358,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220141de2ebffecbf25c900511e6ad382020baed90626968785b7997df2e079bce164736f6c63430008170033",
									".code": [
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "9A8A0592"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "C6328A46"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "E1884919"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 269,
											"end": 364,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 269,
											"end": 364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 269,
											"end": 364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 489,
											"end": 621,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 489,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 489,
											"end": 621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 489,
											"end": 621,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 489,
											"end": 621,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 489,
											"end": 621,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 489,
											"end": 621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 489,
											"end": 621,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 489,
											"end": 621,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 627,
											"end": 738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 627,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 627,
											"end": 738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 627,
											"end": 738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 738,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 627,
											"end": 738,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 627,
											"end": 738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 627,
											"end": 738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 738,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 309,
											"end": 315,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 340,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 349,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 349,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 334,
											"end": 357,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 357,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 334,
											"end": 357,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 357,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 334,
											"end": 357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 357,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 334,
											"end": 357,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 357,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 334,
											"end": 357,
											"name": "PUSH",
											"source": 5,
											"value": "FFFF"
										},
										{
											"begin": 334,
											"end": 357,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 327,
											"end": 357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 269,
											"end": 364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 489,
											"end": 621,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 533,
											"end": 545,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 591,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 585,
											"end": 600,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 600,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 585,
											"end": 612,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 585,
											"end": 612,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 585,
											"end": 612,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 585,
											"end": 612,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 585,
											"end": 612,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 557,
											"end": 614,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 557,
											"end": 614,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 489,
											"end": 621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 627,
											"end": 738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 678,
											"end": 685,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 710,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 704,
											"end": 719,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 719,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 704,
											"end": 731,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 704,
											"end": 731,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 704,
											"end": 731,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 731,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 704,
											"end": 731,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 704,
											"end": 731,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 704,
											"end": 731,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 704,
											"end": 731,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 704,
											"end": 731,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 704,
											"end": 731,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 704,
											"end": 731,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 704,
											"end": 731,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 697,
											"end": 731,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 697,
											"end": 731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 627,
											"end": 738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 96,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 7,
											"end": 96,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 43,
											"end": 50,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 89,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 76,
											"end": 81,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 72,
											"end": 90,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 61,
											"end": 90,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 61,
											"end": 90,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 96,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7,
											"end": 96,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 96,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 96,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 102,
											"end": 217,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 102,
											"end": 217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 187,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 204,
											"end": 209,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 187,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 187,
											"end": 210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 187,
											"end": 210,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 187,
											"end": 210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 175,
											"end": 211,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 102,
											"end": 217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 102,
											"end": 217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 102,
											"end": 217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 223,
											"end": 441,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 223,
											"end": 441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 314,
											"end": 318,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 352,
											"end": 354,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 341,
											"end": 350,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 329,
											"end": 355,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 329,
											"end": 355,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 365,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 431,
											"end": 432,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 429,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 416,
											"end": 433,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 407,
											"end": 413,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 365,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 365,
											"end": 434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 365,
											"end": 434,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 365,
											"end": 434,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 223,
											"end": 441,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 223,
											"end": 441,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 223,
											"end": 441,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 223,
											"end": 441,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 223,
											"end": 441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 447,
											"end": 573,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 447,
											"end": 573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 484,
											"end": 491,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 566,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 513,
											"end": 567,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 502,
											"end": 567,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 567,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 447,
											"end": 573,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 447,
											"end": 573,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 447,
											"end": 573,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 447,
											"end": 573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 579,
											"end": 639,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 579,
											"end": 639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 607,
											"end": 610,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 633,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 621,
											"end": 633,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 621,
											"end": 633,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 579,
											"end": 639,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 579,
											"end": 639,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 579,
											"end": 639,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 579,
											"end": 639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 645,
											"end": 787,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 645,
											"end": 787,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 695,
											"end": 704,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 746,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 755,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 755,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 755,
											"end": 779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 755,
											"end": 779,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 755,
											"end": 779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 746,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 746,
											"end": 780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 746,
											"end": 780,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 746,
											"end": 780,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 728,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 728,
											"end": 781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 728,
											"end": 781,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 728,
											"end": 781,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 715,
											"end": 781,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 715,
											"end": 781,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 645,
											"end": 787,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 645,
											"end": 787,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 645,
											"end": 787,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 645,
											"end": 787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 793,
											"end": 919,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 793,
											"end": 919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 843,
											"end": 852,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 876,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 876,
											"end": 913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 876,
											"end": 913,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 876,
											"end": 913,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 863,
											"end": 913,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 863,
											"end": 913,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 793,
											"end": 919,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 793,
											"end": 919,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 793,
											"end": 919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 793,
											"end": 919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 925,
											"end": 1072,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 925,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 996,
											"end": 1005,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 1060,
											"end": 1065,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1029,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1029,
											"end": 1066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1029,
											"end": 1066,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 1029,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1066,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1066,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 925,
											"end": 1072,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 925,
											"end": 1072,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 925,
											"end": 1072,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 925,
											"end": 1072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1078,
											"end": 1251,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1078,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1186,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 1238,
											"end": 1243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1186,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 1186,
											"end": 1244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1186,
											"end": 1244,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 1186,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1181,
											"end": 1184,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1174,
											"end": 1245,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1078,
											"end": 1251,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1078,
											"end": 1251,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1078,
											"end": 1251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1521,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 1257,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1371,
											"end": 1375,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1411,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1398,
											"end": 1407,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1394,
											"end": 1412,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1412,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1412,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1422,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 1511,
											"end": 1512,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1496,
											"end": 1513,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1493,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1422,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1422,
											"end": 1514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1422,
											"end": 1514,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 1422,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1521,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1521,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1521,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1521,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1527,
											"end": 1623,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 1527,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1564,
											"end": 1571,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1611,
											"end": 1616,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1593,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 1593,
											"end": 1617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1593,
											"end": 1617,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1593,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1582,
											"end": 1617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1582,
											"end": 1617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1527,
											"end": 1623,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1527,
											"end": 1623,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1527,
											"end": 1623,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1527,
											"end": 1623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1629,
											"end": 1747,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1629,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 1716,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1711,
											"end": 1714,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1704,
											"end": 1741,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1629,
											"end": 1747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1629,
											"end": 1747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1629,
											"end": 1747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1753,
											"end": 1975,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 1753,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1846,
											"end": 1850,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1884,
											"end": 1886,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1873,
											"end": 1882,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1861,
											"end": 1887,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1861,
											"end": 1887,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1897,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 1965,
											"end": 1966,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1963,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1950,
											"end": 1967,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1941,
											"end": 1947,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1897,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1897,
											"end": 1968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1897,
											"end": 1968,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 1897,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1753,
											"end": 1975,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1753,
											"end": 1975,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1753,
											"end": 1975,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1753,
											"end": 1975,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1753,
											"end": 1975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"example-2/evm/src/contracts/HubSpokeStructs.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol",
								"example-2/evm/src/interfaces/ITokenBridge.sol",
								"example-2/evm/src/interfaces/IWETH.sol",
								"example-2/evm/src/interfaces/IWormhole.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"chainId()": "9a8a0592",
							"tokenBridge()": "c6328a46",
							"tokenBridgeAddress()": "e1884919"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridge\",\"outputs\":[{\"internalType\":\"contract ITokenBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridgeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":\"SpokeUtilities\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"example-2/evm/src/contracts/HubSpokeStructs.sol\":{\"keccak256\":\"0x24302b1f2d165f5b53d3bedd11aa1c367d30458bb93e0a34a79a939e753fd7dc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://11d40dd261195ea6fe19f0aa56d2aad5040cabd000041b250d3419985e9d6a9e\",\"dweb:/ipfs/Qmd59wjnwsyt2ave7vYQZQdPxk2AGHAvWVhQAUGAgxPMJ6\"]},\"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":{\"keccak256\":\"0xb997dc0290213b1a75e59c29dd4a2528d203bc6c2f511db26e07c9e7e4795d4b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fe39567ca05eca938a1a173c036a348bc0abde7af35227d5fa38a7e173813166\",\"dweb:/ipfs/QmPU7NnzM1MLPHFH9rpxT9PU8Xn3kpw9beyaxfbi4hcf3V\"]},\"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol\":{\"keccak256\":\"0x9ac8f289c14b91bfa37e3e4e52de2b7b045ac8b18881600e94f9177e7339180a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://775105aa5cc5315e82d9b7ce6c9ad1c52bf5fb0659ec6f03b3f76339f1ffed78\",\"dweb:/ipfs/QmfWXxyrasDjtXLD1fAvytQe6tQL5cJGsqQUUxhdS3orFu\"]},\"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol\":{\"keccak256\":\"0xf80dacbb4d6dcdaf5e87cd345ce29cbbcd8de072a0afc52893a2afb62eee3e79\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://da38f2e7895e5a2cd7434bb9379c8e302e2d1332469e0981273acbad59613802\",\"dweb:/ipfs/QmYmEgB535PXwEywshC7PdbgxiT2Av1MstdUnttHWgq4SM\"]},\"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":{\"keccak256\":\"0x28456218c7446312a4c0e94a6262751885d52fff0f84053afb68437b048b072f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://588616d0c5273159b65efe2d50f0d9d657903cdc9cee5d4e04c7d8406e18bf7b\",\"dweb:/ipfs/QmenVkBzENXjWnGmeTC1p6J7NwzhitbYhhsSaXE5e4grfY\"]},\"example-2/evm/src/interfaces/ITokenBridge.sol\":{\"keccak256\":\"0x4c464b3e06d31406bd5c777cf8cc985a2f61ce363b6b8f1471c6b5c5da85bf17\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://acb5d5fc309b2cb1db62e1a8b9b3a1cb30b66f6b92b39477beb7a6bc61e0a4ae\",\"dweb:/ipfs/QmakrPQL2o7uVBYenB4wf1rth1JwKRoo7rJdXx7EPKczva\"]},\"example-2/evm/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xecabfd3b5626aaac6da21213b966a2aac8380f4fec739f84ffe08b29006d134e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://912a0accde3c2d18f8d268726ec16b9dfa0f24522e66e7d88c9ed368f3db7d60\",\"dweb:/ipfs/Qmf2V8YhAXRSYVFKuCeCViYAnnWtPi9GTL7w4zRPtMvGTT\"]},\"example-2/evm/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x8547d11f760ad248fe6620e146ed7756654f26b769f9deebdbb84d534144e216\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://5ac7aae1f4c9fbf06056856e854ba7ab14a5c7a487618f0a5a752e25d8d36563\",\"dweb:/ipfs/QmNf2aFrp4tgEGd1AvaSJTMHb72RVgw1TBfvNp5tQ2TZH8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 931,
								"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol:SpokeUtilities",
								"label": "_state",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(State)927_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_struct(Provider)913_storage": {
								"encoding": "inplace",
								"label": "struct SpokeStorage.Provider",
								"members": [
									{
										"astId": 908,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol:SpokeUtilities",
										"label": "chainId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint16"
									},
									{
										"astId": 910,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol:SpokeUtilities",
										"label": "wormhole",
										"offset": 2,
										"slot": "0",
										"type": "t_address_payable"
									},
									{
										"astId": 912,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol:SpokeUtilities",
										"label": "tokenBridge",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(State)927_storage": {
								"encoding": "inplace",
								"label": "struct SpokeStorage.State",
								"members": [
									{
										"astId": 916,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol:SpokeUtilities",
										"label": "provider",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Provider)913_storage"
									},
									{
										"astId": 918,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol:SpokeUtilities",
										"label": "consistencyLevel",
										"offset": 0,
										"slot": "2",
										"type": "t_uint8"
									},
									{
										"astId": 920,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol:SpokeUtilities",
										"label": "hubChainId",
										"offset": 1,
										"slot": "2",
										"type": "t_uint16"
									},
									{
										"astId": 922,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol:SpokeUtilities",
										"label": "hubContractAddress",
										"offset": 3,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 926,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol:SpokeUtilities",
										"label": "______gap",
										"offset": 0,
										"slot": "3",
										"type": "t_array(t_uint256)50_storage"
									}
								],
								"numberOfBytes": "1696"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"example-2/evm/src/interfaces/ITokenBridge.sol": {
				"ITokenBridge": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldContract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newContract",
									"type": "address"
								}
							],
							"name": "ContractUpgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "contract IWETH",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "_parseTransferCommon",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "to",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "toChain",
											"type": "uint16"
										},
										{
											"internalType": "uint256",
											"name": "fee",
											"type": "uint256"
										}
									],
									"internalType": "struct ITokenBridge.Transfer",
									"name": "transfer",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								}
							],
							"name": "attestToken",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "chainId_",
									"type": "uint16"
								}
							],
							"name": "bridgeContracts",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "chainId",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVm",
									"type": "bytes"
								}
							],
							"name": "completeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVm",
									"type": "bytes"
								}
							],
							"name": "completeTransferAndUnwrapETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVm",
									"type": "bytes"
								}
							],
							"name": "completeTransferAndUnwrapETHWithPayload",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVm",
									"type": "bytes"
								}
							],
							"name": "completeTransferWithPayload",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVm",
									"type": "bytes"
								}
							],
							"name": "createWrapped",
							"outputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "symbol",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "name",
											"type": "bytes32"
										}
									],
									"internalType": "struct ITokenBridge.AssetMeta",
									"name": "meta",
									"type": "tuple"
								}
							],
							"name": "encodeAssetMeta",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "to",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "toChain",
											"type": "uint16"
										},
										{
											"internalType": "uint256",
											"name": "fee",
											"type": "uint256"
										}
									],
									"internalType": "struct ITokenBridge.Transfer",
									"name": "transfer",
									"type": "tuple"
								}
							],
							"name": "encodeTransfer",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "to",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "toChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "fromAddress",
											"type": "bytes32"
										},
										{
											"internalType": "bytes",
											"name": "payload",
											"type": "bytes"
										}
									],
									"internalType": "struct ITokenBridge.TransferWithPayload",
									"name": "transfer",
									"type": "tuple"
								}
							],
							"name": "encodeTransferWithPayload",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "evmChainId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finality",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								}
							],
							"name": "governanceActionIsConsumed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governanceChainId",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governanceContract",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isFork",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "impl",
									"type": "address"
								}
							],
							"name": "isInitialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								}
							],
							"name": "isTransferCompleted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "isWrappedAsset",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "outstandingBridged",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "parseAssetMeta",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "symbol",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "name",
											"type": "bytes32"
										}
									],
									"internalType": "struct ITokenBridge.AssetMeta",
									"name": "meta",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "parsePayloadID",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "payloadID",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedRecoverChainId",
									"type": "bytes"
								}
							],
							"name": "parseRecoverChainId",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "evmChainId",
											"type": "uint256"
										},
										{
											"internalType": "uint16",
											"name": "newChainId",
											"type": "uint16"
										}
									],
									"internalType": "struct ITokenBridge.RecoverChainId",
									"name": "rci",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "parseRegisterChain",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "uint16",
											"name": "emitterChainID",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										}
									],
									"internalType": "struct ITokenBridge.RegisterChain",
									"name": "chain",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "parseTransfer",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "to",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "toChain",
											"type": "uint16"
										},
										{
											"internalType": "uint256",
											"name": "fee",
											"type": "uint256"
										}
									],
									"internalType": "struct ITokenBridge.Transfer",
									"name": "transfer",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "parseTransferWithPayload",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "to",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "toChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "fromAddress",
											"type": "bytes32"
										},
										{
											"internalType": "bytes",
											"name": "payload",
											"type": "bytes"
										}
									],
									"internalType": "struct ITokenBridge.TransferWithPayload",
									"name": "transfer",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "parseUpgrade",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "newContract",
											"type": "bytes32"
										}
									],
									"internalType": "struct ITokenBridge.UpgradeContract",
									"name": "chain",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVM",
									"type": "bytes"
								}
							],
							"name": "registerChain",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVM",
									"type": "bytes"
								}
							],
							"name": "submitRecoverChainId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "recipientChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "arbiterFee",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								}
							],
							"name": "transferTokens",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "recipientChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								}
							],
							"name": "transferTokensWithPayload",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVm",
									"type": "bytes"
								}
							],
							"name": "updateWrapped",
							"outputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVM",
									"type": "bytes"
								}
							],
							"name": "upgrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "recipientChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "arbiterFee",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								}
							],
							"name": "wrapAndTransferETH",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "recipientChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								}
							],
							"name": "wrapAndTransferETHWithPayload",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "tokenChainId",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "tokenAddress",
									"type": "bytes32"
								}
							],
							"name": "wrappedAsset",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"_parseTransferCommon(bytes)": "e89bc401",
							"attestToken(address,uint32)": "c48fa115",
							"bridgeContracts(uint16)": "ad66a5f1",
							"chainId()": "9a8a0592",
							"completeTransfer(bytes)": "c6878519",
							"completeTransferAndUnwrapETH(bytes)": "ff200cde",
							"completeTransferAndUnwrapETHWithPayload(bytes)": "1c8475e4",
							"completeTransferWithPayload(bytes)": "c3f511c1",
							"createWrapped(bytes)": "e8059810",
							"encodeAssetMeta((uint8,bytes32,uint16,uint8,bytes32,bytes32))": "b046223b",
							"encodeTransfer((uint8,uint256,bytes32,uint16,bytes32,uint16,uint256))": "5f854266",
							"encodeTransferWithPayload((uint8,uint256,bytes32,uint16,bytes32,uint16,bytes32,bytes))": "d56e2e24",
							"evmChainId()": "64d42b17",
							"finality()": "739fc8d1",
							"governanceActionIsConsumed(bytes32)": "2c3c02a4",
							"governanceChainId()": "fbe3c2cd",
							"governanceContract()": "b172b222",
							"implementation()": "5c60da1b",
							"initialize()": "8129fc1c",
							"isFork()": "e039f224",
							"isInitialized(address)": "d60b347f",
							"isTransferCompleted(bytes32)": "aa4efa5b",
							"isWrappedAsset(address)": "1a2be4da",
							"outstandingBridged(address)": "b96c7e4d",
							"parseAssetMeta(bytes)": "07dfd8fb",
							"parsePayloadID(bytes)": "0f509008",
							"parseRecoverChainId(bytes)": "cb4cfea8",
							"parseRegisterChain(bytes)": "01f53255",
							"parseTransfer(bytes)": "2b511375",
							"parseTransferWithPayload(bytes)": "ea63738d",
							"parseUpgrade(bytes)": "fbeeacd9",
							"registerChain(bytes)": "a5799f93",
							"submitRecoverChainId(bytes)": "178149e7",
							"tokenImplementation()": "2f3a3d5d",
							"transferTokens(address,uint256,uint16,bytes32,uint256,uint32)": "0f5287b0",
							"transferTokensWithPayload(address,uint256,uint16,bytes32,uint32,bytes)": "c5a5ebda",
							"updateWrapped(bytes)": "f768441f",
							"upgrade(bytes)": "25394645",
							"wormhole()": "84acd1bb",
							"wrapAndTransferETH(uint16,bytes32,uint256,uint32)": "9981509f",
							"wrapAndTransferETHWithPayload(uint16,bytes32,uint32,bytes)": "bee9cdfc",
							"wrappedAsset(uint16,bytes32)": "1ff1e286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractUpgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"_parseTransferCommon\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"toChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenBridge.Transfer\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"attestToken\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId_\",\"type\":\"uint16\"}],\"name\":\"bridgeContracts\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"completeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"completeTransferAndUnwrapETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"completeTransferAndUnwrapETHWithPayload\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"completeTransferWithPayload\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"createWrapped\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"symbol\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"internalType\":\"struct ITokenBridge.AssetMeta\",\"name\":\"meta\",\"type\":\"tuple\"}],\"name\":\"encodeAssetMeta\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"toChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenBridge.Transfer\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"name\":\"encodeTransfer\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"toChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"fromAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct ITokenBridge.TransferWithPayload\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"name\":\"encodeTransferWithPayload\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"evmChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finality\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"governanceActionIsConsumed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFork\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"isTransferCompleted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isWrappedAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"outstandingBridged\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parseAssetMeta\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"symbol\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"internalType\":\"struct ITokenBridge.AssetMeta\",\"name\":\"meta\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parsePayloadID\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedRecoverChainId\",\"type\":\"bytes\"}],\"name\":\"parseRecoverChainId\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"evmChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"newChainId\",\"type\":\"uint16\"}],\"internalType\":\"struct ITokenBridge.RecoverChainId\",\"name\":\"rci\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parseRegisterChain\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"emitterChainID\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"}],\"internalType\":\"struct ITokenBridge.RegisterChain\",\"name\":\"chain\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parseTransfer\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"toChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenBridge.Transfer\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parseTransferWithPayload\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"toChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"fromAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct ITokenBridge.TransferWithPayload\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parseUpgrade\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"newContract\",\"type\":\"bytes32\"}],\"internalType\":\"struct ITokenBridge.UpgradeContract\",\"name\":\"chain\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVM\",\"type\":\"bytes\"}],\"name\":\"registerChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVM\",\"type\":\"bytes\"}],\"name\":\"submitRecoverChainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"recipientChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"arbiterFee\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"transferTokens\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"recipientChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"transferTokensWithPayload\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"updateWrapped\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVM\",\"type\":\"bytes\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"recipientChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"arbiterFee\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"wrapAndTransferETH\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"recipientChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"wrapAndTransferETHWithPayload\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"tokenChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"}],\"name\":\"wrappedAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"example-2/evm/src/interfaces/ITokenBridge.sol\":\"ITokenBridge\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"example-2/evm/src/interfaces/ITokenBridge.sol\":{\"keccak256\":\"0x4c464b3e06d31406bd5c777cf8cc985a2f61ce363b6b8f1471c6b5c5da85bf17\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://acb5d5fc309b2cb1db62e1a8b9b3a1cb30b66f6b92b39477beb7a6bc61e0a4ae\",\"dweb:/ipfs/QmakrPQL2o7uVBYenB4wf1rth1JwKRoo7rJdXx7EPKczva\"]},\"example-2/evm/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xecabfd3b5626aaac6da21213b966a2aac8380f4fec739f84ffe08b29006d134e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://912a0accde3c2d18f8d268726ec16b9dfa0f24522e66e7d88c9ed368f3db7d60\",\"dweb:/ipfs/Qmf2V8YhAXRSYVFKuCeCViYAnnWtPi9GTL7w4zRPtMvGTT\"]},\"example-2/evm/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x8547d11f760ad248fe6620e146ed7756654f26b769f9deebdbb84d534144e216\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://5ac7aae1f4c9fbf06056856e854ba7ab14a5c7a487618f0a5a752e25d8d36563\",\"dweb:/ipfs/QmNf2aFrp4tgEGd1AvaSJTMHb72RVgw1TBfvNp5tQ2TZH8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"example-2/evm/src/interfaces/IWETH.sol": {
				"IWETH": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"deposit()": "d0e30db0",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"example-2/evm/src/interfaces/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"example-2/evm/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xecabfd3b5626aaac6da21213b966a2aac8380f4fec739f84ffe08b29006d134e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://912a0accde3c2d18f8d268726ec16b9dfa0f24522e66e7d88c9ed368f3db7d60\",\"dweb:/ipfs/Qmf2V8YhAXRSYVFKuCeCViYAnnWtPi9GTL7w4zRPtMvGTT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"example-2/evm/src/interfaces/IWormhole.sol": {
				"IWormhole": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "LogMessagePublished",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "chainId",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentGuardianSetIndex",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "guardianSetIndex",
									"type": "uint32"
								}
							],
							"name": "getGuardianSet",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address[]",
											"name": "keys",
											"type": "address[]"
										},
										{
											"internalType": "uint32",
											"name": "expirationTime",
											"type": "uint32"
										}
									],
									"internalType": "struct IWormhole.GuardianSet",
									"name": "guardians",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "messageFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVM",
									"type": "bytes"
								}
							],
							"name": "parseAndVerifyVM",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "version",
											"type": "uint8"
										},
										{
											"internalType": "uint32",
											"name": "timestamp",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "nonce",
											"type": "uint32"
										},
										{
											"internalType": "uint16",
											"name": "emitterChainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										},
										{
											"internalType": "uint8",
											"name": "consistencyLevel",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "payload",
											"type": "bytes"
										},
										{
											"internalType": "uint32",
											"name": "guardianSetIndex",
											"type": "uint32"
										},
										{
											"components": [
												{
													"internalType": "bytes32",
													"name": "r",
													"type": "bytes32"
												},
												{
													"internalType": "bytes32",
													"name": "s",
													"type": "bytes32"
												},
												{
													"internalType": "uint8",
													"name": "v",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "guardianIndex",
													"type": "uint8"
												}
											],
											"internalType": "struct IWormhole.Signature[]",
											"name": "signatures",
											"type": "tuple[]"
										},
										{
											"internalType": "bytes32",
											"name": "hash",
											"type": "bytes32"
										}
									],
									"internalType": "struct IWormhole.VM",
									"name": "vm",
									"type": "tuple"
								},
								{
									"internalType": "bool",
									"name": "valid",
									"type": "bool"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVM",
									"type": "bytes"
								}
							],
							"name": "parseVM",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "version",
											"type": "uint8"
										},
										{
											"internalType": "uint32",
											"name": "timestamp",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "nonce",
											"type": "uint32"
										},
										{
											"internalType": "uint16",
											"name": "emitterChainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										},
										{
											"internalType": "uint8",
											"name": "consistencyLevel",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "payload",
											"type": "bytes"
										},
										{
											"internalType": "uint32",
											"name": "guardianSetIndex",
											"type": "uint32"
										},
										{
											"components": [
												{
													"internalType": "bytes32",
													"name": "r",
													"type": "bytes32"
												},
												{
													"internalType": "bytes32",
													"name": "s",
													"type": "bytes32"
												},
												{
													"internalType": "uint8",
													"name": "v",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "guardianIndex",
													"type": "uint8"
												}
											],
											"internalType": "struct IWormhole.Signature[]",
											"name": "signatures",
											"type": "tuple[]"
										},
										{
											"internalType": "bytes32",
											"name": "hash",
											"type": "bytes32"
										}
									],
									"internalType": "struct IWormhole.VM",
									"name": "vm",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "publishMessage",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"chainId()": "9a8a0592",
							"getCurrentGuardianSetIndex()": "1cfe7951",
							"getGuardianSet(uint32)": "f951975a",
							"messageFee()": "1a90a219",
							"parseAndVerifyVM(bytes)": "c0fd8bde",
							"parseVM(bytes)": "a9e11893",
							"publishMessage(uint32,bytes,uint8)": "b19a437e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"LogMessagePublished\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentGuardianSetIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"guardianSetIndex\",\"type\":\"uint32\"}],\"name\":\"getGuardianSet\",\"outputs\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"keys\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"expirationTime\",\"type\":\"uint32\"}],\"internalType\":\"struct IWormhole.GuardianSet\",\"name\":\"guardians\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVM\",\"type\":\"bytes\"}],\"name\":\"parseAndVerifyVM\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"emitterChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"guardianSetIndex\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"guardianIndex\",\"type\":\"uint8\"}],\"internalType\":\"struct IWormhole.Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IWormhole.VM\",\"name\":\"vm\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVM\",\"type\":\"bytes\"}],\"name\":\"parseVM\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"emitterChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"guardianSetIndex\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"guardianIndex\",\"type\":\"uint8\"}],\"internalType\":\"struct IWormhole.Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IWormhole.VM\",\"name\":\"vm\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"publishMessage\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"example-2/evm/src/interfaces/IWormhole.sol\":\"IWormhole\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"example-2/evm/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x8547d11f760ad248fe6620e146ed7756654f26b769f9deebdbb84d534144e216\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://5ac7aae1f4c9fbf06056856e854ba7ab14a5c7a487618f0a5a752e25d8d36563\",\"dweb:/ipfs/QmNf2aFrp4tgEGd1AvaSJTMHb72RVgw1TBfvNp5tQ2TZH8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:1",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:1",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3022:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3045:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3070:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3093:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3119:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 90,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3136:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3155:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:1"
									},
									"scope": 113,
									"src": "2997:183:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:1",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3501:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3539:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:1"
									},
									"scope": 113,
									"src": "3485:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:1",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3791:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:1"
									},
									"scope": 113,
									"src": "3740:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "2113:1689:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							403
						]
					},
					"id": 404,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 78,
							"src": "141:37:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 116,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 77,
										"src": "149:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 114,
							"src": "179:60:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 118,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 113,
										"src": "187:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 121,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 657,
							"src": "240:51:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 120,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 656,
										"src": "248:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 403,
							"linearizedBaseContracts": [
								403
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 125,
									"libraryName": {
										"id": 123,
										"name": "Address",
										"nameLocations": [
											"781:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 656,
										"src": "781:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:2",
									"typeName": {
										"id": 124,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:2",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 130,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "907:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:2"
									},
									"src": "876:46:2"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:2",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 139,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1043:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1060:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1086:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:2"
									},
									"src": "1004:109:2"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1375:88:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "1405:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 154,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "1427:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:2",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "1427:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 156,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 145,
																			"src": "1444:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 157,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "1448:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 158,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 152,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 150,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1385:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:2"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:2",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1325:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 142,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 141,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1325:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1325:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1339:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1351:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:2"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:2"
									},
									"scope": 403,
									"src": "1303:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1792:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 177,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1822:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 180,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "1844:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:2",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "1844:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 182,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 169,
																			"src": "1865:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 183,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "1871:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 184,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 173,
																			"src": "1875:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 185,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 178,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 176,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1802:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:2"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:2",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1728:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 165,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1728:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1728:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1742:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1756:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1768:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:2"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:2"
									},
									"scope": 403,
									"src": "1702:188:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2167:139:2",
										"statements": [
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "2177:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 201,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 211,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 207,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 205,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 209,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2231:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 203,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2200:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:2",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "2200:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2262:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 214,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2269:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 215,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "2278:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 216,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "2293:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "2249:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:2"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:2",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2112:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 193,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 192,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2112:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2112:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2126:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2143:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:2"
									},
									"scope": 403,
									"src": "2081:225:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "2607:370:2",
										"statements": [
											{
												"id": 262,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:2",
												"statements": [
													{
														"assignments": [
															233
														],
														"declarations": [
															{
																"constant": false,
																"id": 233,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:2",
																"nodeType": "VariableDeclaration",
																"scope": 262,
																"src": "2641:24:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 232,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 242,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 238,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 236,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 240,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2699:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 234,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2668:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:2",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "2668:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 243,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "2725:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 244,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2744:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 253,
														"nodeType": "IfStatement",
														"src": "2721:160:2",
														"trueBody": {
															"id": 252,
															"nodeType": "Block",
															"src": "2763:118:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 247,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 227,
																				"src": "2821:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 248,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 233,
																				"src": "2830:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 249,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 229,
																				"src": "2848:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 246,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 139,
																			"src": "2788:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 251,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:2"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 255,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2907:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 256,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2914:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 257,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "2923:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 258,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "2942:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 254,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2894:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 261,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:2",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2540:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 224,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 223,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2540:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2540:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2554:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2571:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:2"
									},
									"scope": 403,
									"src": "2509:468:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "3373:303:2",
										"statements": [
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "3383:25:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 275,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 285,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 279,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3426:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:2",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 64,
															"src": "3426:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 281,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "3442:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 282,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "3451:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 283,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 277,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:2",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:2"
											},
											{
												"condition": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:2",
													"subExpression": {
														"arguments": [
															{
																"id": 287,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3498:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 288,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "3505:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 286,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "3474:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "IfStatement",
												"src": "3469:201:2",
												"trueBody": {
													"id": 308,
													"nodeType": "Block",
													"src": "3520:150:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 292,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3554:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 295,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 268,
																					"src": "3576:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:2",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "3576:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 297,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 270,
																						"src": "3592:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 298,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 299,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 293,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:2",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 291,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3534:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 304,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3639:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 305,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "3646:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 303,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3619:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:2",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3318:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 267,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 266,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3318:6:2"
													},
													"referencedDeclaration": 77,
													"src": "3318:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3332:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3349:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:2"
									},
									"scope": 403,
									"src": "3296:380:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "4129:559:2",
										"statements": [
											{
												"assignments": [
													321
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 352,
														"src": "4478:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 320,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": {
													"arguments": [
														{
															"id": 327,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "4532:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 324,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "4512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 322,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:2",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 477,
														"src": "4504:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 330,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4551:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 336,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "4589:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 337,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:2",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 339,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 334,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:2",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 351,
												"nodeType": "IfStatement",
												"src": "4547:135:2",
												"trueBody": {
													"id": 350,
													"nodeType": "Block",
													"src": "4610:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 346,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 315,
																				"src": "4664:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 344,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 343,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "4631:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 349,
															"nodeType": "RevertStatement",
															"src": "4624:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4088:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "4088:6:2"
													},
													"referencedDeclaration": 77,
													"src": "4088:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4102:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:2"
									},
									"scope": 403,
									"src": "4059:629:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "5278:489:2",
										"statements": [
											{
												"assignments": [
													365,
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5574:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 364,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5588:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 366,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 375,
												"initialValue": {
													"arguments": [
														{
															"id": 373,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5635:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 370,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "5623:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 368,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:2",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 376,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "5657:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 377,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5669:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:2",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 383,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5706:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 385,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 384,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 386,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 381,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:2",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 389,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 393,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "5738:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 391,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:2",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 363,
												"id": 400,
												"nodeType": "Return",
												"src": "5650:110:2"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5222:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 356,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 355,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "5222:6:2"
													},
													"referencedDeclaration": 77,
													"src": "5222:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5236:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5272:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:2"
									},
									"scope": 403,
									"src": "5189:578:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 404,
							"src": "751:5018:2",
							"usedErrors": [
								130,
								139
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							656
						]
					},
					"id": 657,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 405,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 406,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 656,
							"linearizedBaseContracts": [
								656
							],
							"name": "Address",
							"nameLocation": "203:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:3",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 411,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "349:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:3"
									},
									"src": "316:50:3"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:3",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 416,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "475:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:3"
									},
									"src": "452:39:3"
								},
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:3",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 419,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:3"
									},
									"src": "591:24:3"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "1602:260:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 429,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 427,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 432,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "1640:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 442,
												"nodeType": "IfStatement",
												"src": "1612:109:3",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "1648:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 437,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 435,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 434,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "1669:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 440,
															"nodeType": "RevertStatement",
															"src": "1662:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													444,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "1732:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 443,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 451,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 445,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "1750:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 447,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "1772:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:3"
											},
											{
												"condition": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:3",
													"subExpression": {
														"id": 452,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "1798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 458,
												"nodeType": "IfStatement",
												"src": "1793:63:3",
												"trueBody": {
													"id": 457,
													"nodeType": "Block",
													"src": "1807:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 454,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "1828:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 456,
															"nodeType": "RevertStatement",
															"src": "1821:24:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1550:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1577:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:3"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:3"
									},
									"scope": 656,
									"src": "1531:331:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "2794:62:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 471,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "2833:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "2841:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 470,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "2811:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 469,
												"id": 475,
												"nodeType": "Return",
												"src": "2804:45:3"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2727:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2743:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2780:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:3"
									},
									"scope": 656,
									"src": "2705:151:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "3293:279:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 491,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 494,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "3331:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "3303:108:3",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "3338:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 499,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 497,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 496,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "3359:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 502,
															"nodeType": "RevertStatement",
															"src": "3352:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													506,
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3421:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 505,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3435:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 507,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"arguments": [
														{
															"id": 513,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3488:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 509,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "3462:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 511,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "3481:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3537:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3545:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 519,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3554:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 516,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3510:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 488,
												"id": 521,
												"nodeType": "Return",
												"src": "3503:62:3"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3211:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3227:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3246:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3279:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:3"
									},
									"scope": 656,
									"src": "3180:392:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "3811:154:3",
										"statements": [
											{
												"assignments": [
													534,
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 534,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3822:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 533,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3836:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 535,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"arguments": [
														{
															"id": 539,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3881:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 537,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3863:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3930:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "3938:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 545,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "3947:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3903:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 532,
												"id": 547,
												"nodeType": "Return",
												"src": "3896:62:3"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3739:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3755:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:3"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3797:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:3"
									},
									"scope": 656,
									"src": "3711:254:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "4203:156:3",
										"statements": [
											{
												"assignments": [
													560,
													562
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4214:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 559,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 562,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4228:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 561,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 567,
												"initialValue": {
													"arguments": [
														{
															"id": 565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4275:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 563,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4255:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4324:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4332:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 571,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4341:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 568,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4297:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 558,
												"id": 573,
												"nodeType": "Return",
												"src": "4290:62:3"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4136:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4152:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:3"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4189:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:3"
									},
									"scope": 656,
									"src": "4106:253:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "4783:424:3",
										"statements": [
											{
												"condition": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:3",
													"subExpression": {
														"id": 587,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "4798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 612,
													"nodeType": "Block",
													"src": "4857:344:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 594,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "5045:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 598,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 578,
																				"src": "5071:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:3",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 609,
															"nodeType": "IfStatement",
															"src": "5041:119:3",
															"trueBody": {
																"id": 608,
																"nodeType": "Block",
																"src": "5096:64:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 605,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 578,
																					"src": "5138:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 604,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 416,
																				"src": "5121:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 607,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 610,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "5180:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 586,
															"id": 611,
															"nodeType": "Return",
															"src": "5173:17:3"
														}
													]
												},
												"id": 613,
												"nodeType": "IfStatement",
												"src": "4793:408:3",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "4807:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 590,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "4829:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 589,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "4821:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 592,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4670:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4694:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4716:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:3"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4769:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:3"
									},
									"scope": 656,
									"src": "4625:582:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "5509:122:3",
										"statements": [
											{
												"condition": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:3",
													"subExpression": {
														"id": 625,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "5524:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 634,
													"nodeType": "Block",
													"src": "5583:42:3",
													"statements": [
														{
															"expression": {
																"id": 632,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "5604:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 624,
															"id": 633,
															"nodeType": "Return",
															"src": "5597:17:3"
														}
													]
												},
												"id": 635,
												"nodeType": "IfStatement",
												"src": "5519:106:3",
												"trueBody": {
													"id": 631,
													"nodeType": "Block",
													"src": "5533:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "5555:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 627,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "5547:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 630,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:3",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5433:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5447:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 619,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:3"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5495:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:3"
									},
									"scope": 656,
									"src": "5407:224:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "5798:461:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 643,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "5874:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "6204:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 649,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6225:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 651,
															"nodeType": "RevertStatement",
															"src": "6218:24:3"
														}
													]
												},
												"id": 653,
												"nodeType": "IfStatement",
												"src": "5870:383:3",
												"trueBody": {
													"id": 648,
													"nodeType": "Block",
													"src": "5897:301:3",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:3",
																"nodeType": "YulBlock",
																"src": "6055:133:3",
																"statements": [
																	{
																		"nativeSrc": "6073:40:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:3",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:3"
																			},
																			"nativeSrc": "6096:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:3",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:3",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:3",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:3"
																					},
																					"nativeSrc": "6137:19:3",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:3",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:3"
																			},
																			"nativeSrc": "6130:44:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:3"
																		},
																		"nativeSrc": "6130:44:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:3",
																	"valueSize": 1
																}
															],
															"id": 647,
															"nodeType": "InlineAssembly",
															"src": "6046:142:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:3",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "5760:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:3"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:3"
									},
									"scope": 656,
									"src": "5743:516:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 657,
							"src": "195:6066:3",
							"usedErrors": [
								411,
								416,
								419
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:3"
				},
				"id": 3
			},
			"example-2/evm/src/contracts/HubSpokeStructs.sol": {
				"ast": {
					"absolutePath": "example-2/evm/src/contracts/HubSpokeStructs.sol",
					"exportedSymbols": {
						"HubSpokeStructs": [
							736
						]
					},
					"id": 737,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 658,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "HubSpokeStructs",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 736,
							"linearizedBaseContracts": [
								736
							],
							"name": "HubSpokeStructs",
							"nameLocation": "73:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "HubSpokeStructs.VaultAmount",
									"id": 663,
									"members": [
										{
											"constant": false,
											"id": 660,
											"mutability": "mutable",
											"name": "deposited",
											"nameLocation": "132:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 663,
											"src": "124:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 659,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "124:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 662,
											"mutability": "mutable",
											"name": "borrowed",
											"nameLocation": "159:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 663,
											"src": "151:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 661,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "151:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "VaultAmount",
									"nameLocation": "102:11:4",
									"nodeType": "StructDefinition",
									"scope": 736,
									"src": "95:79:4",
									"visibility": "public"
								},
								{
									"canonicalName": "HubSpokeStructs.AccrualIndices",
									"id": 668,
									"members": [
										{
											"constant": false,
											"id": 665,
											"mutability": "mutable",
											"name": "deposited",
											"nameLocation": "220:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 668,
											"src": "212:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 664,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "212:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 667,
											"mutability": "mutable",
											"name": "borrowed",
											"nameLocation": "247:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 668,
											"src": "239:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 666,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "239:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AccrualIndices",
									"nameLocation": "187:14:4",
									"nodeType": "StructDefinition",
									"scope": 736,
									"src": "180:82:4",
									"visibility": "public"
								},
								{
									"canonicalName": "HubSpokeStructs.AssetInfo",
									"id": 682,
									"members": [
										{
											"constant": false,
											"id": 670,
											"mutability": "mutable",
											"name": "collateralizationRatioDeposit",
											"nameLocation": "303:29:4",
											"nodeType": "VariableDeclaration",
											"scope": 682,
											"src": "295:37:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 669,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "295:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 672,
											"mutability": "mutable",
											"name": "collateralizationRatioBorrow",
											"nameLocation": "350:28:4",
											"nodeType": "VariableDeclaration",
											"scope": 682,
											"src": "342:36:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 671,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "342:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 674,
											"mutability": "mutable",
											"name": "pythId",
											"nameLocation": "396:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 682,
											"src": "388:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 673,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "388:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 676,
											"mutability": "mutable",
											"name": "decimals",
											"nameLocation": "442:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 682,
											"src": "436:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 675,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "436:5:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 679,
											"mutability": "mutable",
											"name": "interestRateModel",
											"nameLocation": "487:17:4",
											"nodeType": "VariableDeclaration",
											"scope": 682,
											"src": "460:44:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PiecewiseInterestRateModel_$706_storage_ptr",
												"typeString": "struct HubSpokeStructs.PiecewiseInterestRateModel"
											},
											"typeName": {
												"id": 678,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 677,
													"name": "PiecewiseInterestRateModel",
													"nameLocations": [
														"460:26:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 706,
													"src": "460:26:4"
												},
												"referencedDeclaration": 706,
												"src": "460:26:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PiecewiseInterestRateModel_$706_storage_ptr",
													"typeString": "struct HubSpokeStructs.PiecewiseInterestRateModel"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 681,
											"mutability": "mutable",
											"name": "exists",
											"nameLocation": "519:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 682,
											"src": "514:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 680,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "514:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AssetInfo",
									"nameLocation": "275:9:4",
									"nodeType": "StructDefinition",
									"scope": 736,
									"src": "268:264:4",
									"visibility": "public"
								},
								{
									"canonicalName": "HubSpokeStructs.InterestRateModel",
									"id": 693,
									"members": [
										{
											"constant": false,
											"id": 684,
											"mutability": "mutable",
											"name": "ratePrecision",
											"nameLocation": "580:13:4",
											"nodeType": "VariableDeclaration",
											"scope": 693,
											"src": "573:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 683,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "573:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 686,
											"mutability": "mutable",
											"name": "rateIntercept",
											"nameLocation": "610:13:4",
											"nodeType": "VariableDeclaration",
											"scope": 693,
											"src": "603:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 685,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "603:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 688,
											"mutability": "mutable",
											"name": "rateCoefficientA",
											"nameLocation": "640:16:4",
											"nodeType": "VariableDeclaration",
											"scope": 693,
											"src": "633:23:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 687,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "633:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 690,
											"mutability": "mutable",
											"name": "reserveFactor",
											"nameLocation": "674:13:4",
											"nodeType": "VariableDeclaration",
											"scope": 693,
											"src": "666:21:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 689,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "666:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 692,
											"mutability": "mutable",
											"name": "reservePrecision",
											"nameLocation": "705:16:4",
											"nodeType": "VariableDeclaration",
											"scope": 693,
											"src": "697:24:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 691,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "697:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InterestRateModel",
									"nameLocation": "545:17:4",
									"nodeType": "StructDefinition",
									"scope": 736,
									"src": "538:190:4",
									"visibility": "public"
								},
								{
									"canonicalName": "HubSpokeStructs.PiecewiseInterestRateModel",
									"id": 706,
									"members": [
										{
											"constant": false,
											"id": 695,
											"mutability": "mutable",
											"name": "ratePrecision",
											"nameLocation": "785:13:4",
											"nodeType": "VariableDeclaration",
											"scope": 706,
											"src": "778:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 694,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "778:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 698,
											"mutability": "mutable",
											"name": "kinks",
											"nameLocation": "818:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 706,
											"src": "808:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "808:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 697,
												"nodeType": "ArrayTypeName",
												"src": "808:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 701,
											"mutability": "mutable",
											"name": "rates",
											"nameLocation": "843:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 706,
											"src": "833:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 700,
												"nodeType": "ArrayTypeName",
												"src": "833:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 703,
											"mutability": "mutable",
											"name": "reserveFactor",
											"nameLocation": "866:13:4",
											"nodeType": "VariableDeclaration",
											"scope": 706,
											"src": "858:21:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 702,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "858:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 705,
											"mutability": "mutable",
											"name": "reservePrecision",
											"nameLocation": "897:16:4",
											"nodeType": "VariableDeclaration",
											"scope": 706,
											"src": "889:24:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 704,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "889:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PiecewiseInterestRateModel",
									"nameLocation": "741:26:4",
									"nodeType": "StructDefinition",
									"scope": 736,
									"src": "734:186:4",
									"visibility": "public"
								},
								{
									"canonicalName": "HubSpokeStructs.Action",
									"id": 713,
									"members": [
										{
											"id": 707,
											"name": "Deposit",
											"nameLocation": "948:7:4",
											"nodeType": "EnumValue",
											"src": "948:7:4"
										},
										{
											"id": 708,
											"name": "Borrow",
											"nameLocation": "965:6:4",
											"nodeType": "EnumValue",
											"src": "965:6:4"
										},
										{
											"id": 709,
											"name": "Withdraw",
											"nameLocation": "981:8:4",
											"nodeType": "EnumValue",
											"src": "981:8:4"
										},
										{
											"id": 710,
											"name": "Repay",
											"nameLocation": "999:5:4",
											"nodeType": "EnumValue",
											"src": "999:5:4"
										},
										{
											"id": 711,
											"name": "DepositNative",
											"nameLocation": "1014:13:4",
											"nodeType": "EnumValue",
											"src": "1014:13:4"
										},
										{
											"id": 712,
											"name": "RepayNative",
											"nameLocation": "1037:11:4",
											"nodeType": "EnumValue",
											"src": "1037:11:4"
										}
									],
									"name": "Action",
									"nameLocation": "931:6:4",
									"nodeType": "EnumDefinition",
									"src": "926:128:4"
								},
								{
									"canonicalName": "HubSpokeStructs.Round",
									"id": 716,
									"members": [
										{
											"id": 714,
											"name": "UP",
											"nameLocation": "1081:2:4",
											"nodeType": "EnumValue",
											"src": "1081:2:4"
										},
										{
											"id": 715,
											"name": "DOWN",
											"nameLocation": "1093:4:4",
											"nodeType": "EnumValue",
											"src": "1093:4:4"
										}
									],
									"name": "Round",
									"nameLocation": "1065:5:4",
									"nodeType": "EnumDefinition",
									"src": "1060:43:4"
								},
								{
									"canonicalName": "HubSpokeStructs.ActionPayload",
									"id": 726,
									"members": [
										{
											"constant": false,
											"id": 719,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "1147:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 726,
											"src": "1140:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Action_$713",
												"typeString": "enum HubSpokeStructs.Action"
											},
											"typeName": {
												"id": 718,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 717,
													"name": "Action",
													"nameLocations": [
														"1140:6:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 713,
													"src": "1140:6:4"
												},
												"referencedDeclaration": 713,
												"src": "1140:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Action_$713",
													"typeString": "enum HubSpokeStructs.Action"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 721,
											"mutability": "mutable",
											"name": "sender",
											"nameLocation": "1171:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 726,
											"src": "1163:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 720,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 723,
											"mutability": "mutable",
											"name": "assetAddress",
											"nameLocation": "1195:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 726,
											"src": "1187:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 722,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1187:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 725,
											"mutability": "mutable",
											"name": "assetAmount",
											"nameLocation": "1225:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 726,
											"src": "1217:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 724,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1217:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ActionPayload",
									"nameLocation": "1116:13:4",
									"nodeType": "StructDefinition",
									"scope": 736,
									"src": "1109:134:4",
									"visibility": "public"
								},
								{
									"canonicalName": "HubSpokeStructs.Price",
									"id": 735,
									"members": [
										{
											"constant": false,
											"id": 728,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "1314:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 735,
											"src": "1308:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int64",
												"typeString": "int64"
											},
											"typeName": {
												"id": 727,
												"name": "int64",
												"nodeType": "ElementaryTypeName",
												"src": "1308:5:4",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 730,
											"mutability": "mutable",
											"name": "conf",
											"nameLocation": "1336:4:4",
											"nodeType": "VariableDeclaration",
											"scope": 735,
											"src": "1329:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 729,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1329:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 732,
											"mutability": "mutable",
											"name": "expo",
											"nameLocation": "1356:4:4",
											"nodeType": "VariableDeclaration",
											"scope": 735,
											"src": "1350:10:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int32",
												"typeString": "int32"
											},
											"typeName": {
												"id": 731,
												"name": "int32",
												"nodeType": "ElementaryTypeName",
												"src": "1350:5:4",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 734,
											"mutability": "mutable",
											"name": "publishTime",
											"nameLocation": "1378:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 735,
											"src": "1370:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 733,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1370:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Price",
									"nameLocation": "1292:5:4",
									"nodeType": "StructDefinition",
									"scope": 736,
									"src": "1285:111:4",
									"visibility": "public"
								}
							],
							"scope": 737,
							"src": "64:1334:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:1360:4"
				},
				"id": 4
			},
			"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol": {
				"ast": {
					"absolutePath": "example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol",
					"exportedSymbols": {
						"HubSpokeStructs": [
							736
						],
						"IERC20": [
							77
						],
						"ITokenBridge": [
							1559
						],
						"IWETH": [
							1573
						],
						"IWormhole": [
							1695
						],
						"SpokeGetters": [
							823
						],
						"SpokeState": [
							932
						],
						"SpokeStorage": [
							928
						]
					},
					"id": 824,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 738,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:5"
						},
						{
							"absolutePath": "example-2/evm/src/interfaces/IWormhole.sol",
							"file": "../../interfaces/IWormhole.sol",
							"id": 739,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 824,
							"sourceUnit": 1696,
							"src": "64:40:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "example-2/evm/src/interfaces/ITokenBridge.sol",
							"file": "../../interfaces/ITokenBridge.sol",
							"id": 740,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 824,
							"sourceUnit": 1560,
							"src": "105:43:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
							"file": "./SpokeState.sol",
							"id": 741,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 824,
							"sourceUnit": 933,
							"src": "149:26:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "example-2/evm/src/contracts/HubSpokeStructs.sol",
							"file": "../HubSpokeStructs.sol",
							"id": 742,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 824,
							"sourceUnit": 737,
							"src": "176:32:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 743,
										"name": "HubSpokeStructs",
										"nameLocations": [
											"235:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 736,
										"src": "235:15:5"
									},
									"id": 744,
									"nodeType": "InheritanceSpecifier",
									"src": "235:15:5"
								},
								{
									"baseName": {
										"id": 745,
										"name": "SpokeState",
										"nameLocations": [
											"252:10:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 932,
										"src": "252:10:5"
									},
									"id": 746,
									"nodeType": "InheritanceSpecifier",
									"src": "252:10:5"
								}
							],
							"canonicalName": "SpokeGetters",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 823,
							"linearizedBaseContracts": [
								823,
								932,
								736
							],
							"name": "SpokeGetters",
							"nameLocation": "219:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "317:47:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 751,
															"name": "_state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "334:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_State_$927_storage",
																"typeString": "struct SpokeStorage.State storage ref"
															}
														},
														"id": 752,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "341:8:5",
														"memberName": "provider",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 916,
														"src": "334:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Provider_$913_storage",
															"typeString": "struct SpokeStorage.Provider storage ref"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "350:7:5",
													"memberName": "chainId",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 908,
													"src": "334:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 750,
												"id": 754,
												"nodeType": "Return",
												"src": "327:30:5"
											}
										]
									},
									"functionSelector": "9a8a0592",
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "chainId",
									"nameLocation": "278:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "285:2:5"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "309:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 748,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "309:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:8:5"
									},
									"scope": 823,
									"src": "269:95:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "424:59:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 763,
																	"name": "_state",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 931,
																	"src": "451:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_State_$927_storage",
																		"typeString": "struct SpokeStorage.State storage ref"
																	}
																},
																"id": 764,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "458:8:5",
																"memberName": "provider",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 916,
																"src": "451:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Provider_$913_storage",
																	"typeString": "struct SpokeStorage.Provider storage ref"
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "467:8:5",
															"memberName": "wormhole",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 910,
															"src": "451:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 762,
														"name": "IWormhole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1695,
														"src": "441:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IWormhole_$1695_$",
															"typeString": "type(contract IWormhole)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "441:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWormhole_$1695",
														"typeString": "contract IWormhole"
													}
												},
												"functionReturnParameters": 761,
												"id": 767,
												"nodeType": "Return",
												"src": "434:42:5"
											}
										]
									},
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "wormhole",
									"nameLocation": "379:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "387:2:5"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "413:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IWormhole_$1695",
													"typeString": "contract IWormhole"
												},
												"typeName": {
													"id": 759,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 758,
														"name": "IWormhole",
														"nameLocations": [
															"413:9:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1695,
														"src": "413:9:5"
													},
													"referencedDeclaration": 1695,
													"src": "413:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWormhole_$1695",
														"typeString": "contract IWormhole"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "412:11:5"
									},
									"scope": 823,
									"src": "370:113:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "547:74:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 778,
																			"name": "_state",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 931,
																			"src": "585:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_State_$927_storage",
																				"typeString": "struct SpokeStorage.State storage ref"
																			}
																		},
																		"id": 779,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "592:8:5",
																		"memberName": "provider",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 916,
																		"src": "585:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Provider_$913_storage",
																			"typeString": "struct SpokeStorage.Provider storage ref"
																		}
																	},
																	"id": 780,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "601:11:5",
																	"memberName": "tokenBridge",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 912,
																	"src": "585:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "577:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 776,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "577:8:5",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "577:36:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 775,
														"name": "ITokenBridge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1559,
														"src": "564:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ITokenBridge_$1559_$",
															"typeString": "type(contract ITokenBridge)"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "564:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITokenBridge_$1559",
														"typeString": "contract ITokenBridge"
													}
												},
												"functionReturnParameters": 774,
												"id": 783,
												"nodeType": "Return",
												"src": "557:57:5"
											}
										]
									},
									"functionSelector": "c6328a46",
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenBridge",
									"nameLocation": "498:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "509:2:5"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "533:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ITokenBridge_$1559",
													"typeString": "contract ITokenBridge"
												},
												"typeName": {
													"id": 772,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 771,
														"name": "ITokenBridge",
														"nameLocations": [
															"533:12:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1559,
														"src": "533:12:5"
													},
													"referencedDeclaration": 1559,
													"src": "533:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITokenBridge_$1559",
														"typeString": "contract ITokenBridge"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:14:5"
									},
									"scope": 823,
									"src": "489:132:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "687:51:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 790,
															"name": "_state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "704:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_State_$927_storage",
																"typeString": "struct SpokeStorage.State storage ref"
															}
														},
														"id": 791,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "711:8:5",
														"memberName": "provider",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 916,
														"src": "704:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Provider_$913_storage",
															"typeString": "struct SpokeStorage.Provider storage ref"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "720:11:5",
													"memberName": "tokenBridge",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 912,
													"src": "704:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 789,
												"id": 793,
												"nodeType": "Return",
												"src": "697:34:5"
											}
										]
									},
									"functionSelector": "e1884919",
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenBridgeAddress",
									"nameLocation": "636:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "654:2:5"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "678:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "677:9:5"
									},
									"scope": 823,
									"src": "627:111:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "802:47:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 800,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "819:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_State_$927_storage",
															"typeString": "struct SpokeStorage.State storage ref"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "826:16:5",
													"memberName": "consistencyLevel",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 918,
													"src": "819:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 799,
												"id": 802,
												"nodeType": "Return",
												"src": "812:30:5"
											}
										]
									},
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "consistencyLevel",
									"nameLocation": "753:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "769:2:5"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "795:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 797,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "795:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "794:7:5"
									},
									"scope": 823,
									"src": "744:105:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "908:41:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 809,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "925:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_State_$927_storage",
															"typeString": "struct SpokeStorage.State storage ref"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "932:10:5",
													"memberName": "hubChainId",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 920,
													"src": "925:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 808,
												"id": 811,
												"nodeType": "Return",
												"src": "918:24:5"
											}
										]
									},
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hubChainId",
									"nameLocation": "864:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:2:5"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "900:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 806,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "900:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "899:8:5"
									},
									"scope": 823,
									"src": "855:94:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "1017:49:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 818,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "1034:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_State_$927_storage",
															"typeString": "struct SpokeStorage.State storage ref"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1041:18:5",
													"memberName": "hubContractAddress",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 922,
													"src": "1034:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 817,
												"id": 820,
												"nodeType": "Return",
												"src": "1027:32:5"
											}
										]
									},
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hubContractAddress",
									"nameLocation": "964:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "982:2:5"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "1008:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1007:9:5"
									},
									"scope": 823,
									"src": "955:111:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 824,
							"src": "210:858:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:1030:5"
				},
				"id": 5
			},
			"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol": {
				"ast": {
					"absolutePath": "example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol",
					"exportedSymbols": {
						"HubSpokeStructs": [
							736
						],
						"SpokeSetters": [
							901
						],
						"SpokeState": [
							932
						],
						"SpokeStorage": [
							928
						]
					},
					"id": 902,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 825,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:6"
						},
						{
							"absolutePath": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
							"file": "./SpokeState.sol",
							"id": 826,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 902,
							"sourceUnit": 933,
							"src": "64:26:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "example-2/evm/src/contracts/HubSpokeStructs.sol",
							"file": "../HubSpokeStructs.sol",
							"id": 827,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 902,
							"sourceUnit": 737,
							"src": "91:32:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 828,
										"name": "HubSpokeStructs",
										"nameLocations": [
											"150:15:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 736,
										"src": "150:15:6"
									},
									"id": 829,
									"nodeType": "InheritanceSpecifier",
									"src": "150:15:6"
								},
								{
									"baseName": {
										"id": 830,
										"name": "SpokeState",
										"nameLocations": [
											"167:10:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 932,
										"src": "167:10:6"
									},
									"id": 831,
									"nodeType": "InheritanceSpecifier",
									"src": "167:10:6"
								}
							],
							"canonicalName": "SpokeSetters",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 901,
							"linearizedBaseContracts": [
								901,
								932,
								736
							],
							"name": "SpokeSetters",
							"nameLocation": "134:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "229:50:6",
										"statements": [
											{
												"expression": {
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 836,
																"name": "_state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 931,
																"src": "239:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_State_$927_storage",
																	"typeString": "struct SpokeStorage.State storage ref"
																}
															},
															"id": 839,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "246:8:6",
															"memberName": "provider",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 916,
															"src": "239:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Provider_$913_storage",
																"typeString": "struct SpokeStorage.Provider storage ref"
															}
														},
														"id": 840,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "255:7:6",
														"memberName": "chainId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 908,
														"src": "239:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 841,
														"name": "chainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "265:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "239:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "239:33:6"
											}
										]
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setChainId",
									"nameLocation": "193:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "211:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "204:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 832,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "204:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:16:6"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "229:0:6"
									},
									"scope": 901,
									"src": "184:95:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "340:68:6",
										"statements": [
											{
												"expression": {
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 850,
																"name": "_state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 931,
																"src": "350:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_State_$927_storage",
																	"typeString": "struct SpokeStorage.State storage ref"
																}
															},
															"id": 853,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "357:8:6",
															"memberName": "provider",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 916,
															"src": "350:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Provider_$913_storage",
																"typeString": "struct SpokeStorage.Provider storage ref"
															}
														},
														"id": 854,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "366:8:6",
														"memberName": "wormhole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 910,
														"src": "350:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 857,
																"name": "wormholeAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 847,
																"src": "385:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "377:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 855,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "377:8:6",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "377:24:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "350:51:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "350:51:6"
											}
										]
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setWormhole",
									"nameLocation": "294:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "wormholeAddress",
												"nameLocation": "314:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "306:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "306:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "305:25:6"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "340:0:6"
									},
									"scope": 901,
									"src": "285:123:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "475:65:6",
										"statements": [
											{
												"expression": {
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 867,
																"name": "_state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 931,
																"src": "485:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_State_$927_storage",
																	"typeString": "struct SpokeStorage.State storage ref"
																}
															},
															"id": 870,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "492:8:6",
															"memberName": "provider",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 916,
															"src": "485:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Provider_$913_storage",
																"typeString": "struct SpokeStorage.Provider storage ref"
															}
														},
														"id": 871,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "501:11:6",
														"memberName": "tokenBridge",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 912,
														"src": "485:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 872,
														"name": "tokenBridgeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "515:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "485:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "485:48:6"
											}
										]
									},
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setTokenBridge",
									"nameLocation": "423:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "tokenBridgeAddress",
												"nameLocation": "446:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "438:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:28:6"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "475:0:6"
									},
									"scope": 901,
									"src": "414:126:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "597:47:6",
										"statements": [
											{
												"expression": {
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 881,
															"name": "_state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "607:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_State_$927_storage",
																"typeString": "struct SpokeStorage.State storage ref"
															}
														},
														"id": 883,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "614:10:6",
														"memberName": "hubChainId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 920,
														"src": "607:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 884,
														"name": "hubChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "627:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "607:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "607:30:6"
											}
										]
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setHubChainId",
									"nameLocation": "555:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "hubChainId",
												"nameLocation": "576:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "569:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 877,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:19:6"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "597:0:6"
									},
									"scope": 901,
									"src": "546:98:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "718:63:6",
										"statements": [
											{
												"expression": {
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 893,
															"name": "_state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "728:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_State_$927_storage",
																"typeString": "struct SpokeStorage.State storage ref"
															}
														},
														"id": 895,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "735:18:6",
														"memberName": "hubContractAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 922,
														"src": "728:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 896,
														"name": "hubContractAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "756:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "728:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "728:46:6"
											}
										]
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setHubContractAddress",
									"nameLocation": "659:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "hubContractAddress",
												"nameLocation": "689:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "681:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "680:28:6"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "718:0:6"
									},
									"scope": 901,
									"src": "650:131:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 902,
							"src": "125:658:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:745:6"
				},
				"id": 6
			},
			"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol": {
				"ast": {
					"absolutePath": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
					"exportedSymbols": {
						"HubSpokeStructs": [
							736
						],
						"SpokeState": [
							932
						],
						"SpokeStorage": [
							928
						]
					},
					"id": 933,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 903,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:7"
						},
						{
							"absolutePath": "example-2/evm/src/contracts/HubSpokeStructs.sol",
							"file": "../HubSpokeStructs.sol",
							"id": 904,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 933,
							"sourceUnit": 737,
							"src": "64:32:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 905,
										"name": "HubSpokeStructs",
										"nameLocations": [
											"123:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 736,
										"src": "123:15:7"
									},
									"id": 906,
									"nodeType": "InheritanceSpecifier",
									"src": "123:15:7"
								}
							],
							"canonicalName": "SpokeStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 928,
							"linearizedBaseContracts": [
								928,
								736
							],
							"name": "SpokeStorage",
							"nameLocation": "107:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "SpokeStorage.Provider",
									"id": 913,
									"members": [
										{
											"constant": false,
											"id": 908,
											"mutability": "mutable",
											"name": "chainId",
											"nameLocation": "178:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 913,
											"src": "171:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 907,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "171:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 910,
											"mutability": "mutable",
											"name": "wormhole",
											"nameLocation": "211:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 913,
											"src": "195:24:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 909,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "195:15:7",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 912,
											"mutability": "mutable",
											"name": "tokenBridge",
											"nameLocation": "237:11:7",
											"nodeType": "VariableDeclaration",
											"scope": 913,
											"src": "229:19:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 911,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "229:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Provider",
									"nameLocation": "152:8:7",
									"nodeType": "StructDefinition",
									"scope": 928,
									"src": "145:110:7",
									"visibility": "public"
								},
								{
									"canonicalName": "SpokeStorage.State",
									"id": 927,
									"members": [
										{
											"constant": false,
											"id": 916,
											"mutability": "mutable",
											"name": "provider",
											"nameLocation": "293:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 927,
											"src": "284:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Provider_$913_storage_ptr",
												"typeString": "struct SpokeStorage.Provider"
											},
											"typeName": {
												"id": 915,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 914,
													"name": "Provider",
													"nameLocations": [
														"284:8:7"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 913,
													"src": "284:8:7"
												},
												"referencedDeclaration": 913,
												"src": "284:8:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Provider_$913_storage_ptr",
													"typeString": "struct SpokeStorage.Provider"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 918,
											"mutability": "mutable",
											"name": "consistencyLevel",
											"nameLocation": "374:16:7",
											"nodeType": "VariableDeclaration",
											"scope": 927,
											"src": "368:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 917,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "368:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 920,
											"mutability": "mutable",
											"name": "hubChainId",
											"nameLocation": "407:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 927,
											"src": "400:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 919,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "400:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 922,
											"mutability": "mutable",
											"name": "hubContractAddress",
											"nameLocation": "435:18:7",
											"nodeType": "VariableDeclaration",
											"scope": 927,
											"src": "427:26:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 921,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "427:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 926,
											"mutability": "mutable",
											"name": "______gap",
											"nameLocation": "503:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 927,
											"src": "491:21:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
												"typeString": "uint256[50]"
											},
											"typeName": {
												"baseType": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "491:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 925,
												"length": {
													"hexValue": "3530",
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "499:2:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_50_by_1",
														"typeString": "int_const 50"
													},
													"value": "50"
												},
												"nodeType": "ArrayTypeName",
												"src": "491:11:7",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
													"typeString": "uint256[50]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "State",
									"nameLocation": "268:5:7",
									"nodeType": "StructDefinition",
									"scope": 928,
									"src": "261:258:7",
									"visibility": "public"
								}
							],
							"scope": 933,
							"src": "98:423:7",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SpokeState",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 932,
							"linearizedBaseContracts": [
								932
							],
							"name": "SpokeState",
							"nameLocation": "532:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 931,
									"mutability": "mutable",
									"name": "_state",
									"nameLocation": "568:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 932,
									"src": "549:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_State_$927_storage",
										"typeString": "struct SpokeStorage.State"
									},
									"typeName": {
										"id": 930,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 929,
											"name": "SpokeStorage.State",
											"nameLocations": [
												"549:12:7",
												"562:5:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 927,
											"src": "549:18:7"
										},
										"referencedDeclaration": 927,
										"src": "549:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_State_$927_storage_ptr",
											"typeString": "struct SpokeStorage.State"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 933,
							"src": "523:54:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:539:7"
				},
				"id": 7
			},
			"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol": {
				"ast": {
					"absolutePath": "example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol",
					"exportedSymbols": {
						"HubSpokeStructs": [
							736
						],
						"IERC20": [
							77
						],
						"ITokenBridge": [
							1559
						],
						"IWETH": [
							1573
						],
						"IWormhole": [
							1695
						],
						"SafeERC20": [
							403
						],
						"SpokeGetters": [
							823
						],
						"SpokeSetters": [
							901
						],
						"SpokeState": [
							932
						],
						"SpokeStorage": [
							928
						],
						"SpokeUtilities": [
							1159
						]
					},
					"id": 1160,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 934,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:8"
						},
						{
							"absolutePath": "example-2/evm/src/contracts/HubSpokeStructs.sol",
							"file": "../HubSpokeStructs.sol",
							"id": 935,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1160,
							"sourceUnit": 737,
							"src": "64:32:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
							"file": "./SpokeState.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1160,
							"sourceUnit": 933,
							"src": "97:26:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol",
							"file": "./SpokeGetters.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1160,
							"sourceUnit": 824,
							"src": "124:28:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol",
							"file": "./SpokeSetters.sol",
							"id": 938,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1160,
							"sourceUnit": 902,
							"src": "153:28:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 940,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1160,
							"sourceUnit": 404,
							"src": "183:82:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 939,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 403,
										"src": "191:9:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 942,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1160,
							"sourceUnit": 78,
							"src": "266:70:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 941,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 77,
										"src": "274:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 943,
										"name": "HubSpokeStructs",
										"nameLocations": [
											"365:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 736,
										"src": "365:15:8"
									},
									"id": 944,
									"nodeType": "InheritanceSpecifier",
									"src": "365:15:8"
								},
								{
									"baseName": {
										"id": 945,
										"name": "SpokeState",
										"nameLocations": [
											"382:10:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 932,
										"src": "382:10:8"
									},
									"id": 946,
									"nodeType": "InheritanceSpecifier",
									"src": "382:10:8"
								},
								{
									"baseName": {
										"id": 947,
										"name": "SpokeGetters",
										"nameLocations": [
											"394:12:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 823,
										"src": "394:12:8"
									},
									"id": 948,
									"nodeType": "InheritanceSpecifier",
									"src": "394:12:8"
								},
								{
									"baseName": {
										"id": 949,
										"name": "SpokeSetters",
										"nameLocations": [
											"408:12:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 901,
										"src": "408:12:8"
									},
									"id": 950,
									"nodeType": "InheritanceSpecifier",
									"src": "408:12:8"
								}
							],
							"canonicalName": "SpokeUtilities",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1159,
							"linearizedBaseContracts": [
								1159,
								901,
								823,
								932,
								736
							],
							"name": "SpokeUtilities",
							"nameLocation": "347:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "513:140:8",
										"statements": [
											{
												"expression": {
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 957,
														"name": "sequence",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "523:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "573:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 962,
																"name": "payload",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "597:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 963,
																	"name": "consistencyLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "618:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																		"typeString": "function () view returns (uint8)"
																	}
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "618:18:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 958,
																	"name": "wormhole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "534:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IWormhole_$1695_$",
																		"typeString": "function () view returns (contract IWormhole)"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "534:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWormhole_$1695",
																	"typeString": "contract IWormhole"
																}
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "545:14:8",
															"memberName": "publishMessage",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1645,
															"src": "534:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint32_$_t_bytes_memory_ptr_$_t_uint8_$returns$_t_uint64_$",
																"typeString": "function (uint32,bytes memory,uint8) payable external returns (uint64)"
															}
														},
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "534:112:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "523:123:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "523:123:8"
											}
										]
									},
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendWormholeMessage",
									"nameLocation": "436:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "469:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "456:20:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 951,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "456:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "455:22:8"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "503:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "496:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 954,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:17:8"
									},
									"scope": 1159,
									"src": "427:226:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "811:380:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 984,
																	"name": "assetAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "855:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 983,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "848:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "848:20:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"expression": {
																"id": 986,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "870:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "874:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "870:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 990,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "890:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SpokeUtilities_$1159",
																		"typeString": "contract SpokeUtilities"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SpokeUtilities_$1159",
																		"typeString": "contract SpokeUtilities"
																	}
																],
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "882:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 988,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "882:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "882:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 992,
															"name": "assetAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "897:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 980,
															"name": "SafeERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "821:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeERC20_$403_$",
																"typeString": "type(library SafeERC20)"
															}
														},
														"id": 982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "831:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "821:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "821:88:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "821:88:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 999,
																	"name": "assetAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "950:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 998,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "943:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "943:20:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1001,
																"name": "tokenBridgeAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "965:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "965:20:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "assetAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "987:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 995,
															"name": "SafeERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "920:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeERC20_$403_$",
																"typeString": "type(library SafeERC20)"
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "930:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 163,
														"src": "920:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "920:79:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "920:79:8"
											},
											{
												"expression": {
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1006,
														"name": "sequence",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "1010:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1010,
																"name": "assetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "1074:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1011,
																"name": "assetAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "1088:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1012,
																	"name": "hubChainId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "1101:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint16_$",
																		"typeString": "function () view returns (uint16)"
																	}
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1101:12:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 1020,
																							"name": "hubContractAddress",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 822,
																							"src": "1139:18:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																								"typeString": "function () view returns (address)"
																							}
																						},
																						"id": 1021,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1139:20:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1019,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1131:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint160_$",
																						"typeString": "type(uint160)"
																					},
																					"typeName": {
																						"id": 1018,
																						"name": "uint160",
																						"nodeType": "ElementaryTypeName",
																						"src": "1131:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1131:29:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			],
																			"id": 1017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1123:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1016,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1123:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1123:38:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1115:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 1014,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1115:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1115:47:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"hexValue": "30",
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1164:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 1026,
																"name": "payload",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "1167:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1007,
																	"name": "tokenBridge",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "1021:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ITokenBridge_$1559_$",
																		"typeString": "function () view returns (contract ITokenBridge)"
																	}
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1021:13:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ITokenBridge_$1559",
																	"typeString": "contract ITokenBridge"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1035:25:8",
															"memberName": "transferTokensWithPayload",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1320,
															"src": "1021:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint16_$_t_bytes32_$_t_uint32_$_t_bytes_memory_ptr_$returns$_t_uint64_$",
																"typeString": "function (address,uint256,uint16,bytes32,uint32,bytes memory) payable external returns (uint64)"
															}
														},
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1021:163:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "1010:174:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "1010:174:8"
											}
										]
									},
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendTokenBridgeMessage",
									"nameLocation": "668:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "assetAddress",
												"nameLocation": "699:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "691:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "assetAmount",
												"nameLocation": "721:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "713:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "713:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "747:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "734:20:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 974,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "734:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "690:65:8"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "797:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "790:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 977,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:17:8"
									},
									"scope": 1159,
									"src": "659:532:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "1308:183:8",
										"statements": [
											{
												"expression": {
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1040,
														"name": "sequence",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "1318:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1046,
																	"name": "hubChainId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "1401:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint16_$",
																		"typeString": "function () view returns (uint16)"
																	}
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1401:12:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 1054,
																							"name": "hubContractAddress",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 822,
																							"src": "1439:18:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																								"typeString": "function () view returns (address)"
																							}
																						},
																						"id": 1055,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1439:20:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1053,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1431:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint160_$",
																						"typeString": "type(uint160)"
																					},
																					"typeName": {
																						"id": 1052,
																						"name": "uint160",
																						"nodeType": "ElementaryTypeName",
																						"src": "1431:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1056,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1431:29:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			],
																			"id": 1051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1423:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1050,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1423:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1423:38:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1415:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 1048,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1415:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1415:47:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"hexValue": "30",
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1464:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 1060,
																"name": "payload",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "1467:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1041,
																		"name": "tokenBridge",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "1329:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ITokenBridge_$1559_$",
																			"typeString": "function () view returns (contract ITokenBridge)"
																		}
																	},
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1329:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ITokenBridge_$1559",
																		"typeString": "contract ITokenBridge"
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1343:29:8",
																"memberName": "wrapAndTransferETHWithPayload",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1286,
																"src": "1329:43:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_bytes32_$_t_uint32_$_t_bytes_memory_ptr_$returns$_t_uint64_$",
																	"typeString": "function (uint16,bytes32,uint32,bytes memory) payable external returns (uint64)"
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"names": [
																"value"
															],
															"nodeType": "FunctionCallOptions",
															"options": [
																{
																	"id": 1044,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1033,
																	"src": "1380:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"src": "1329:58:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_bytes32_$_t_uint32_$_t_bytes_memory_ptr_$returns$_t_uint64_$value",
																"typeString": "function (uint16,bytes32,uint32,bytes memory) payable external returns (uint64)"
															}
														},
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1329:155:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "1318:166:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "1318:166:8"
											}
										]
									},
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendTokenBridgeMessageNative",
									"nameLocation": "1206:28:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1243:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "1235:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "1264:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "1251:20:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1034,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1251:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:38:8"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1298:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "1291:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1037,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1291:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1290:17:8"
									},
									"scope": 1159,
									"src": "1197:294:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1105,
										"nodeType": "Block",
										"src": "1601:339:8",
										"statements": [
											{
												"assignments": [
													null,
													1073
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1073,
														"mutability": "mutable",
														"name": "queriedDecimals",
														"nameLocation": "1627:15:8",
														"nodeType": "VariableDeclaration",
														"scope": 1105,
														"src": "1614:28:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1072,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1614:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1081,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "646563696d616c732829",
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1694:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_313ce567add4d438edf58b94ff345d7d38c45b17dfc0f947988d7819dca364f9",
																		"typeString": "literal_string \"decimals()\""
																	},
																	"value": "decimals()"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_313ce567add4d438edf58b94ff345d7d38c45b17dfc0f947988d7819dca364f9",
																		"typeString": "literal_string \"decimals()\""
																	}
																],
																"expression": {
																	"id": 1076,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1670:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1674:19:8",
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "1670:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1670:37:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1074,
															"name": "assetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "1646:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1659:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "1646:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1646:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1611:97:8"
											},
											{
												"assignments": [
													1083
												],
												"declarations": [
													{
														"constant": false,
														"id": 1083,
														"mutability": "mutable",
														"name": "decimals",
														"nameLocation": "1724:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1105,
														"src": "1718:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1082,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1718:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1091,
												"initialValue": {
													"arguments": [
														{
															"id": 1086,
															"name": "queriedDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "1746:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1764:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 1087,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "1764:5:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 1089,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1763:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															}
														],
														"expression": {
															"id": 1084,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "1735:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1739:6:8",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "1735:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1735:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1718:53:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1095,
																				"name": "assetAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1069,
																				"src": "1836:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1096,
																				"name": "decimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1083,
																				"src": "1849:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"id": 1094,
																			"name": "normalizeAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1132,
																			"src": "1820:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint8) pure returns (uint256)"
																			}
																		},
																		"id": 1097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1820:38:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1098,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1083,
																		"src": "1860:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1093,
																	"name": "deNormalizeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1158,
																	"src": "1802:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint8) pure returns (uint256)"
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1802:67:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1100,
																"name": "assetAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "1873:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1802:82:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6f206d616e7920646563696d616c20706c61636573",
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1898:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f980939fccf74afb41aae851bf3fecac407639d4d59480a38f30e6ca14fe2c59",
																"typeString": "literal_string \"Too many decimal places\""
															},
															"value": "Too many decimal places"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f980939fccf74afb41aae851bf3fecac407639d4d59480a38f30e6ca14fe2c59",
																"typeString": "literal_string \"Too many decimal places\""
															}
														],
														"id": 1092,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1781:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1781:152:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "1781:152:8"
											}
										]
									},
									"id": 1106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requireAssetAmountValidForTokenBridge",
									"nameLocation": "1506:37:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "assetAddress",
												"nameLocation": "1552:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "1544:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "assetAmount",
												"nameLocation": "1574:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "1566:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:43:8"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1601:0:8"
									},
									"scope": 1159,
									"src": "1497:443:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1131,
										"nodeType": "Block",
										"src": "2035:112:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1115,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "2049:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "38",
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2060:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "2049:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1128,
												"nodeType": "IfStatement",
												"src": "2045:73:8",
												"trueBody": {
													"id": 1127,
													"nodeType": "Block",
													"src": "2063:55:8",
													"statements": [
														{
															"expression": {
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1118,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "2077:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2087:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 1122,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1120,
																					"name": "decimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1110,
																					"src": "2094:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "38",
																					"id": 1121,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2105:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_8_by_1",
																						"typeString": "int_const 8"
																					},
																					"value": "8"
																				},
																				"src": "2094:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 1123,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2093:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "2087:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2077:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1126,
															"nodeType": "ExpressionStatement",
															"src": "2077:30:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1129,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1108,
													"src": "2134:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1114,
												"id": 1130,
												"nodeType": "Return",
												"src": "2127:13:8"
											}
										]
									},
									"id": 1132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "normalizeAmount",
									"nameLocation": "1955:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1979:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "1971:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1971:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "1993:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "1987:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1109,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1987:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1970:32:8"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "2026:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:9:8"
									},
									"scope": 1159,
									"src": "1946:201:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "2244:112:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1141,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "2258:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "38",
														"id": 1142,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2269:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "2258:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1154,
												"nodeType": "IfStatement",
												"src": "2254:73:8",
												"trueBody": {
													"id": 1153,
													"nodeType": "Block",
													"src": "2272:55:8",
													"statements": [
														{
															"expression": {
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1144,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "2286:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "*=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2296:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 1148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1146,
																					"name": "decimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1136,
																					"src": "2303:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "38",
																					"id": 1147,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2314:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_8_by_1",
																						"typeString": "int_const 8"
																					},
																					"value": "8"
																				},
																				"src": "2303:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 1149,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2302:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "2296:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2286:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1152,
															"nodeType": "ExpressionStatement",
															"src": "2286:30:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1155,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1134,
													"src": "2343:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1140,
												"id": 1156,
												"nodeType": "Return",
												"src": "2336:13:8"
											}
										]
									},
									"id": 1158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deNormalizeAmount",
									"nameLocation": "2162:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2188:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "2180:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2180:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "2202:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "2196:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1135,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2196:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:32:8"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "2235:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2235:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2234:9:8"
									},
									"scope": 1159,
									"src": "2153:203:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1160,
							"src": "338:2020:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:2320:8"
				},
				"id": 8
			},
			"example-2/evm/src/interfaces/ITokenBridge.sol": {
				"ast": {
					"absolutePath": "example-2/evm/src/interfaces/ITokenBridge.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"ITokenBridge": [
							1559
						],
						"IWETH": [
							1573
						],
						"IWormhole": [
							1695
						]
					},
					"id": 1560,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1161,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "62:23:9"
						},
						{
							"absolutePath": "example-2/evm/src/interfaces/IWETH.sol",
							"file": "./IWETH.sol",
							"id": 1162,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1560,
							"sourceUnit": 1574,
							"src": "87:21:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "example-2/evm/src/interfaces/IWormhole.sol",
							"file": "./IWormhole.sol",
							"id": 1163,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1560,
							"sourceUnit": 1696,
							"src": "109:25:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITokenBridge",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1559,
							"linearizedBaseContracts": [
								1559
							],
							"name": "ITokenBridge",
							"nameLocation": "146:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ITokenBridge.Transfer",
									"id": 1178,
									"members": [
										{
											"constant": false,
											"id": 1165,
											"mutability": "mutable",
											"name": "payloadID",
											"nameLocation": "197:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1178,
											"src": "191:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1164,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "191:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1167,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "224:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1178,
											"src": "216:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1166,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "216:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1169,
											"mutability": "mutable",
											"name": "tokenAddress",
											"nameLocation": "248:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 1178,
											"src": "240:20:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1168,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "240:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1171,
											"mutability": "mutable",
											"name": "tokenChain",
											"nameLocation": "277:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1178,
											"src": "270:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1170,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "270:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1173,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "305:2:9",
											"nodeType": "VariableDeclaration",
											"scope": 1178,
											"src": "297:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1172,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "297:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1175,
											"mutability": "mutable",
											"name": "toChain",
											"nameLocation": "324:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1178,
											"src": "317:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1174,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "317:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1177,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "349:3:9",
											"nodeType": "VariableDeclaration",
											"scope": 1178,
											"src": "341:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1176,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "341:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Transfer",
									"nameLocation": "172:8:9",
									"nodeType": "StructDefinition",
									"scope": 1559,
									"src": "165:194:9",
									"visibility": "public"
								},
								{
									"canonicalName": "ITokenBridge.TransferWithPayload",
									"id": 1195,
									"members": [
										{
											"constant": false,
											"id": 1180,
											"mutability": "mutable",
											"name": "payloadID",
											"nameLocation": "408:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1195,
											"src": "402:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1179,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "402:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1182,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "435:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1195,
											"src": "427:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1181,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "427:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1184,
											"mutability": "mutable",
											"name": "tokenAddress",
											"nameLocation": "459:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 1195,
											"src": "451:20:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1183,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "451:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1186,
											"mutability": "mutable",
											"name": "tokenChain",
											"nameLocation": "488:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1195,
											"src": "481:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1185,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "481:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1188,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "516:2:9",
											"nodeType": "VariableDeclaration",
											"scope": 1195,
											"src": "508:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1187,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "508:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1190,
											"mutability": "mutable",
											"name": "toChain",
											"nameLocation": "535:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1195,
											"src": "528:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1189,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "528:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1192,
											"mutability": "mutable",
											"name": "fromAddress",
											"nameLocation": "560:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 1195,
											"src": "552:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1191,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "552:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1194,
											"mutability": "mutable",
											"name": "payload",
											"nameLocation": "587:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1195,
											"src": "581:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1193,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "581:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TransferWithPayload",
									"nameLocation": "372:19:9",
									"nodeType": "StructDefinition",
									"scope": 1559,
									"src": "365:236:9",
									"visibility": "public"
								},
								{
									"canonicalName": "ITokenBridge.AssetMeta",
									"id": 1208,
									"members": [
										{
											"constant": false,
											"id": 1197,
											"mutability": "mutable",
											"name": "payloadID",
											"nameLocation": "640:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1208,
											"src": "634:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1196,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "634:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1199,
											"mutability": "mutable",
											"name": "tokenAddress",
											"nameLocation": "667:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 1208,
											"src": "659:20:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1198,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "659:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1201,
											"mutability": "mutable",
											"name": "tokenChain",
											"nameLocation": "696:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1208,
											"src": "689:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1200,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "689:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1203,
											"mutability": "mutable",
											"name": "decimals",
											"nameLocation": "722:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 1208,
											"src": "716:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1202,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "716:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1205,
											"mutability": "mutable",
											"name": "symbol",
											"nameLocation": "748:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1208,
											"src": "740:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1204,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "740:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1207,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "772:4:9",
											"nodeType": "VariableDeclaration",
											"scope": 1208,
											"src": "764:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1206,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "764:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AssetMeta",
									"nameLocation": "614:9:9",
									"nodeType": "StructDefinition",
									"scope": 1559,
									"src": "607:176:9",
									"visibility": "public"
								},
								{
									"canonicalName": "ITokenBridge.RegisterChain",
									"id": 1219,
									"members": [
										{
											"constant": false,
											"id": 1210,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "828:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1219,
											"src": "820:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1209,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "820:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1212,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "850:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1219,
											"src": "844:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1211,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "844:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1214,
											"mutability": "mutable",
											"name": "chainId",
											"nameLocation": "873:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1219,
											"src": "866:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1213,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "866:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1216,
											"mutability": "mutable",
											"name": "emitterChainID",
											"nameLocation": "898:14:9",
											"nodeType": "VariableDeclaration",
											"scope": 1219,
											"src": "891:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1215,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "891:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1218,
											"mutability": "mutable",
											"name": "emitterAddress",
											"nameLocation": "930:14:9",
											"nodeType": "VariableDeclaration",
											"scope": 1219,
											"src": "922:22:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1217,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "922:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RegisterChain",
									"nameLocation": "796:13:9",
									"nodeType": "StructDefinition",
									"scope": 1559,
									"src": "789:162:9",
									"visibility": "public"
								},
								{
									"canonicalName": "ITokenBridge.UpgradeContract",
									"id": 1228,
									"members": [
										{
											"constant": false,
											"id": 1221,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "999:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1228,
											"src": "991:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1220,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "991:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1223,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "1021:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1228,
											"src": "1015:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1222,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1015:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1225,
											"mutability": "mutable",
											"name": "chainId",
											"nameLocation": "1044:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1228,
											"src": "1037:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1224,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "1037:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1227,
											"mutability": "mutable",
											"name": "newContract",
											"nameLocation": "1070:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 1228,
											"src": "1062:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1226,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1062:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UpgradeContract",
									"nameLocation": "965:15:9",
									"nodeType": "StructDefinition",
									"scope": 1559,
									"src": "958:130:9",
									"visibility": "public"
								},
								{
									"canonicalName": "ITokenBridge.RecoverChainId",
									"id": 1237,
									"members": [
										{
											"constant": false,
											"id": 1230,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "1134:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1237,
											"src": "1126:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1229,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1126:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1232,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "1156:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1237,
											"src": "1150:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1231,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1150:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1234,
											"mutability": "mutable",
											"name": "evmChainId",
											"nameLocation": "1181:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1237,
											"src": "1173:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1233,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1173:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1236,
											"mutability": "mutable",
											"name": "newChainId",
											"nameLocation": "1208:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1237,
											"src": "1201:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1235,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "1201:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RecoverChainId",
									"nameLocation": "1101:14:9",
									"nodeType": "StructDefinition",
									"scope": 1559,
									"src": "1094:131:9",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "2e4cc16c100f0b55e2df82ab0b1a7e294aa9cbd01b48fbaf622683fbc0507a49",
									"id": 1243,
									"name": "ContractUpgraded",
									"nameLocation": "1237:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldContract",
												"nameLocation": "1270:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "1254:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"indexed": true,
												"mutability": "mutable",
												"name": "newContract",
												"nameLocation": "1299:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "1283:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:58:9"
									},
									"src": "1231:81:9"
								},
								{
									"functionSelector": "e89bc401",
									"id": 1251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_parseTransferCommon",
									"nameLocation": "1327:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "1361:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "1348:20:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1244,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1348:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1347:22:9"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "transfer",
												"nameLocation": "1409:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "1393:24:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Transfer_$1178_memory_ptr",
													"typeString": "struct ITokenBridge.Transfer"
												},
												"typeName": {
													"id": 1248,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1247,
														"name": "Transfer",
														"nameLocations": [
															"1393:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1178,
														"src": "1393:8:9"
													},
													"referencedDeclaration": 1178,
													"src": "1393:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Transfer_$1178_storage_ptr",
														"typeString": "struct ITokenBridge.Transfer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:26:9"
									},
									"scope": 1559,
									"src": "1318:101:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c48fa115",
									"id": 1260,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "attestToken",
									"nameLocation": "1434:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "1454:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "1446:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1446:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1475:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "1468:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1254,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1468:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1445:36:9"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1515:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "1508:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1257,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1508:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1507:17:9"
									},
									"scope": 1559,
									"src": "1425:100:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9981509f",
									"id": 1273,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "wrapAndTransferETH",
									"nameLocation": "1540:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "recipientChain",
												"nameLocation": "1566:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "1559:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1261,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1559:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1590:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "1582:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1263,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "arbiterFee",
												"nameLocation": "1609:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "1601:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1601:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1628:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "1621:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1267,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1621:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1558:76:9"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1668:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "1661:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1270,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1661:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:17:9"
									},
									"scope": 1559,
									"src": "1531:147:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bee9cdfc",
									"id": 1286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "wrapAndTransferETHWithPayload",
									"nameLocation": "1693:29:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "recipientChain",
												"nameLocation": "1730:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1723:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1274,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1723:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1754:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1746:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1276,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1746:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1772:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1765:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1278,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1765:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "1792:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1779:20:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1779:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1722:78:9"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1834:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1827:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1283,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1827:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:17:9"
									},
									"scope": 1559,
									"src": "1684:160:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0f5287b0",
									"id": 1303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokens",
									"nameLocation": "1859:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1882:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1874:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1897:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1889:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1889:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "recipientChain",
												"nameLocation": "1912:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1905:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1291,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1905:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1936:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1928:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1293,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "arbiterFee",
												"nameLocation": "1955:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1947:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1947:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1974:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1967:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1297,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1967:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1873:107:9"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "2014:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2007:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1300,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2007:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2006:17:9"
									},
									"scope": 1559,
									"src": "1850:174:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c5a5ebda",
									"id": 1320,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokensWithPayload",
									"nameLocation": "2039:25:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2073:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "2065:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2065:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2088:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "2080:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2080:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "recipientChain",
												"nameLocation": "2103:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "2096:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1308,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2096:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2127:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "2119:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2119:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "2145:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "2138:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1312,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2138:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "2165:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "2152:20:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1314,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2152:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:109:9"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "2207:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "2200:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1317,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2200:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2199:17:9"
									},
									"scope": 1559,
									"src": "2030:187:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f768441f",
									"id": 1327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateWrapped",
									"nameLocation": "2232:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "encodedVm",
												"nameLocation": "2259:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "2246:22:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1321,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2246:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2245:24:9"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2296:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "2288:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2288:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2287:15:9"
									},
									"scope": 1559,
									"src": "2223:80:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8059810",
									"id": 1334,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createWrapped",
									"nameLocation": "2318:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "encodedVm",
												"nameLocation": "2345:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "2332:22:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1328,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2332:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:24:9"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2382:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "2374:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2374:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2373:15:9"
									},
									"scope": 1559,
									"src": "2309:80:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c3f511c1",
									"id": 1341,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "completeTransferWithPayload",
									"nameLocation": "2404:27:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "encodedVm",
												"nameLocation": "2445:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "2432:22:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1335,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2432:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2431:24:9"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "2474:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1338,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2474:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2473:14:9"
									},
									"scope": 1559,
									"src": "2395:93:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1c8475e4",
									"id": 1348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "completeTransferAndUnwrapETHWithPayload",
									"nameLocation": "2503:39:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "encodedVm",
												"nameLocation": "2556:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "2543:22:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1342,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2543:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2542:24:9"
									},
									"returnParameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "2585:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2585:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2584:14:9"
									},
									"scope": 1559,
									"src": "2494:105:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c6878519",
									"id": 1353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "completeTransfer",
									"nameLocation": "2614:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "encodedVm",
												"nameLocation": "2644:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "2631:22:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1349,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2631:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2630:24:9"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2663:0:9"
									},
									"scope": 1559,
									"src": "2605:59:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ff200cde",
									"id": 1358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "completeTransferAndUnwrapETH",
									"nameLocation": "2679:28:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "encodedVm",
												"nameLocation": "2721:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "2708:22:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1354,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2708:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2707:24:9"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2740:0:9"
									},
									"scope": 1559,
									"src": "2670:71:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b046223b",
									"id": 1366,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "encodeAssetMeta",
									"nameLocation": "2756:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "meta",
												"nameLocation": "2789:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "2772:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AssetMeta_$1208_memory_ptr",
													"typeString": "struct ITokenBridge.AssetMeta"
												},
												"typeName": {
													"id": 1360,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1359,
														"name": "AssetMeta",
														"nameLocations": [
															"2772:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1208,
														"src": "2772:9:9"
													},
													"referencedDeclaration": 1208,
													"src": "2772:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AssetMeta_$1208_storage_ptr",
														"typeString": "struct ITokenBridge.AssetMeta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:23:9"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "2831:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "2818:20:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1363,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2818:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2817:22:9"
									},
									"scope": 1559,
									"src": "2747:93:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5f854266",
									"id": 1374,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "encodeTransfer",
									"nameLocation": "2855:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "transfer",
												"nameLocation": "2886:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "2870:24:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Transfer_$1178_memory_ptr",
													"typeString": "struct ITokenBridge.Transfer"
												},
												"typeName": {
													"id": 1368,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1367,
														"name": "Transfer",
														"nameLocations": [
															"2870:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1178,
														"src": "2870:8:9"
													},
													"referencedDeclaration": 1178,
													"src": "2870:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Transfer_$1178_storage_ptr",
														"typeString": "struct ITokenBridge.Transfer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2869:26:9"
									},
									"returnParameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "2932:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "2919:20:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1371,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2919:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2918:22:9"
									},
									"scope": 1559,
									"src": "2846:95:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d56e2e24",
									"id": 1382,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "encodeTransferWithPayload",
									"nameLocation": "2956:25:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "transfer",
												"nameLocation": "3009:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "2982:35:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TransferWithPayload_$1195_memory_ptr",
													"typeString": "struct ITokenBridge.TransferWithPayload"
												},
												"typeName": {
													"id": 1376,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1375,
														"name": "TransferWithPayload",
														"nameLocations": [
															"2982:19:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1195,
														"src": "2982:19:9"
													},
													"referencedDeclaration": 1195,
													"src": "2982:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TransferWithPayload_$1195_storage_ptr",
														"typeString": "struct ITokenBridge.TransferWithPayload"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2981:37:9"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "3055:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "3042:20:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1379,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3042:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3041:22:9"
									},
									"scope": 1559,
									"src": "2947:117:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0f509008",
									"id": 1389,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parsePayloadID",
									"nameLocation": "3079:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "3107:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "3094:20:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3094:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3093:22:9"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "payloadID",
												"nameLocation": "3145:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "3139:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1386,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3139:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3138:17:9"
									},
									"scope": 1559,
									"src": "3070:86:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "07dfd8fb",
									"id": 1397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseAssetMeta",
									"nameLocation": "3171:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "3199:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "3186:20:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1390,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3186:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3185:22:9"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "meta",
												"nameLocation": "3248:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "3231:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AssetMeta_$1208_memory_ptr",
													"typeString": "struct ITokenBridge.AssetMeta"
												},
												"typeName": {
													"id": 1394,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1393,
														"name": "AssetMeta",
														"nameLocations": [
															"3231:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1208,
														"src": "3231:9:9"
													},
													"referencedDeclaration": 1208,
													"src": "3231:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AssetMeta_$1208_storage_ptr",
														"typeString": "struct ITokenBridge.AssetMeta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3230:23:9"
									},
									"scope": 1559,
									"src": "3162:92:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2b511375",
									"id": 1405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseTransfer",
									"nameLocation": "3269:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "3296:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "3283:20:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3283:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3282:22:9"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "transfer",
												"nameLocation": "3344:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "3328:24:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Transfer_$1178_memory_ptr",
													"typeString": "struct ITokenBridge.Transfer"
												},
												"typeName": {
													"id": 1402,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1401,
														"name": "Transfer",
														"nameLocations": [
															"3328:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1178,
														"src": "3328:8:9"
													},
													"referencedDeclaration": 1178,
													"src": "3328:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Transfer_$1178_storage_ptr",
														"typeString": "struct ITokenBridge.Transfer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3327:26:9"
									},
									"scope": 1559,
									"src": "3260:94:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ea63738d",
									"id": 1413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseTransferWithPayload",
									"nameLocation": "3369:24:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "3407:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "3394:20:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1406,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3394:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3393:22:9"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "transfer",
												"nameLocation": "3466:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "3439:35:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TransferWithPayload_$1195_memory_ptr",
													"typeString": "struct ITokenBridge.TransferWithPayload"
												},
												"typeName": {
													"id": 1410,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1409,
														"name": "TransferWithPayload",
														"nameLocations": [
															"3439:19:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1195,
														"src": "3439:19:9"
													},
													"referencedDeclaration": 1195,
													"src": "3439:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TransferWithPayload_$1195_storage_ptr",
														"typeString": "struct ITokenBridge.TransferWithPayload"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3438:37:9"
									},
									"scope": 1559,
									"src": "3360:116:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2c3c02a4",
									"id": 1420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governanceActionIsConsumed",
									"nameLocation": "3491:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3526:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "3518:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1414,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:14:9"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "3555:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1417,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3555:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3554:6:9"
									},
									"scope": 1559,
									"src": "3482:79:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d60b347f",
									"id": 1427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isInitialized",
									"nameLocation": "3576:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "impl",
												"nameLocation": "3598:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "3590:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3590:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3589:14:9"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "3627:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1424,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3627:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3626:6:9"
									},
									"scope": 1559,
									"src": "3567:66:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aa4efa5b",
									"id": 1434,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isTransferCompleted",
									"nameLocation": "3648:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3676:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "3668:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1428,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3668:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3667:14:9"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "3705:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3705:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3704:6:9"
									},
									"scope": 1559,
									"src": "3639:72:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "84acd1bb",
									"id": 1440,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "wormhole",
									"nameLocation": "3726:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3734:2:9"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "3760:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IWormhole_$1695",
													"typeString": "contract IWormhole"
												},
												"typeName": {
													"id": 1437,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1436,
														"name": "IWormhole",
														"nameLocations": [
															"3760:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1695,
														"src": "3760:9:9"
													},
													"referencedDeclaration": 1695,
													"src": "3760:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWormhole_$1695",
														"typeString": "contract IWormhole"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:11:9"
									},
									"scope": 1559,
									"src": "3717:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a8a0592",
									"id": 1445,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "chainId",
									"nameLocation": "3786:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:2:9"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "3819:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1442,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3819:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:8:9"
									},
									"scope": 1559,
									"src": "3777:50:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "64d42b17",
									"id": 1450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "evmChainId",
									"nameLocation": "3842:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3852:2:9"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "3878:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3878:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3877:9:9"
									},
									"scope": 1559,
									"src": "3833:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e039f224",
									"id": 1455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isFork",
									"nameLocation": "3902:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3908:2:9"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "3934:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3934:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3933:6:9"
									},
									"scope": 1559,
									"src": "3893:47:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fbe3c2cd",
									"id": 1460,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governanceChainId",
									"nameLocation": "3955:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3972:2:9"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "3998:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1457,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3998:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3997:8:9"
									},
									"scope": 1559,
									"src": "3946:60:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b172b222",
									"id": 1465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governanceContract",
									"nameLocation": "4021:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4039:2:9"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "4065:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1462,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4065:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4064:9:9"
									},
									"scope": 1559,
									"src": "4012:62:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1ff1e286",
									"id": 1474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "wrappedAsset",
									"nameLocation": "4089:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "tokenChainId",
												"nameLocation": "4109:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "4102:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1466,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4102:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "4131:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "4123:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1468,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4123:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4101:43:9"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "4168:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:9:9"
									},
									"scope": 1559,
									"src": "4080:97:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad66a5f1",
									"id": 1481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bridgeContracts",
									"nameLocation": "4192:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "chainId_",
												"nameLocation": "4215:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "4208:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1475,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4208:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4207:17:9"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "4248:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1478,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4248:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4247:9:9"
									},
									"scope": 1559,
									"src": "4183:74:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2f3a3d5d",
									"id": 1486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenImplementation",
									"nameLocation": "4272:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4291:2:9"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "4317:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4317:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4316:9:9"
									},
									"scope": 1559,
									"src": "4263:63:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "4341:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4345:2:9"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "4371:5:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IWETH_$1573",
													"typeString": "contract IWETH"
												},
												"typeName": {
													"id": 1489,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1488,
														"name": "IWETH",
														"nameLocations": [
															"4371:5:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1573,
														"src": "4371:5:9"
													},
													"referencedDeclaration": 1573,
													"src": "4371:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWETH_$1573",
														"typeString": "contract IWETH"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4370:7:9"
									},
									"scope": 1559,
									"src": "4332:46:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b96c7e4d",
									"id": 1499,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "outstandingBridged",
									"nameLocation": "4393:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4420:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "4412:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:15:9"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "4450:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:9:9"
									},
									"scope": 1559,
									"src": "4384:75:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1a2be4da",
									"id": 1506,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isWrappedAsset",
									"nameLocation": "4474:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4497:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "4489:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4489:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:15:9"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "4527:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1503,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4527:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4526:6:9"
									},
									"scope": 1559,
									"src": "4465:68:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "739fc8d1",
									"id": 1511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "finality",
									"nameLocation": "4548:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4556:2:9"
									},
									"returnParameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "4582:5:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1508,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4582:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4581:7:9"
									},
									"scope": 1559,
									"src": "4539:50:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c60da1b",
									"id": 1516,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "4604:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4618:2:9"
									},
									"returnParameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "4644:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4643:9:9"
									},
									"scope": 1559,
									"src": "4595:58:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8129fc1c",
									"id": 1519,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "4668:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4678:2:9"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4689:0:9"
									},
									"scope": 1559,
									"src": "4659:31:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a5799f93",
									"id": 1524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerChain",
									"nameLocation": "4705:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "encodedVM",
												"nameLocation": "4732:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "4719:22:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4719:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4718:24:9"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4751:0:9"
									},
									"scope": 1559,
									"src": "4696:56:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "25394645",
									"id": 1529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "upgrade",
									"nameLocation": "4767:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "encodedVM",
												"nameLocation": "4788:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "4775:22:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1525,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4775:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4774:24:9"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4807:0:9"
									},
									"scope": 1559,
									"src": "4758:50:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "178149e7",
									"id": 1534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitRecoverChainId",
									"nameLocation": "4823:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "encodedVM",
												"nameLocation": "4857:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "4844:22:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4844:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:24:9"
									},
									"returnParameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4876:0:9"
									},
									"scope": 1559,
									"src": "4814:63:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "01f53255",
									"id": 1542,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseRegisterChain",
									"nameLocation": "4892:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "4924:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "4911:20:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1535,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4911:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4910:22:9"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "chain",
												"nameLocation": "4977:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "4956:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RegisterChain_$1219_memory_ptr",
													"typeString": "struct ITokenBridge.RegisterChain"
												},
												"typeName": {
													"id": 1539,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1538,
														"name": "RegisterChain",
														"nameLocations": [
															"4956:13:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1219,
														"src": "4956:13:9"
													},
													"referencedDeclaration": 1219,
													"src": "4956:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RegisterChain_$1219_storage_ptr",
														"typeString": "struct ITokenBridge.RegisterChain"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4955:28:9"
									},
									"scope": 1559,
									"src": "4883:101:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fbeeacd9",
									"id": 1550,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseUpgrade",
									"nameLocation": "4999:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "5025:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "5012:20:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1543,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5011:22:9"
									},
									"returnParameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "chain",
												"nameLocation": "5080:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "5057:28:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UpgradeContract_$1228_memory_ptr",
													"typeString": "struct ITokenBridge.UpgradeContract"
												},
												"typeName": {
													"id": 1547,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1546,
														"name": "UpgradeContract",
														"nameLocations": [
															"5057:15:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1228,
														"src": "5057:15:9"
													},
													"referencedDeclaration": 1228,
													"src": "5057:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UpgradeContract_$1228_storage_ptr",
														"typeString": "struct ITokenBridge.UpgradeContract"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5056:30:9"
									},
									"scope": 1559,
									"src": "4990:97:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cb4cfea8",
									"id": 1558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseRecoverChainId",
									"nameLocation": "5102:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "encodedRecoverChainId",
												"nameLocation": "5135:21:9",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "5122:34:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1551,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5122:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5121:36:9"
									},
									"returnParameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "rci",
												"nameLocation": "5203:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "5181:25:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RecoverChainId_$1237_memory_ptr",
													"typeString": "struct ITokenBridge.RecoverChainId"
												},
												"typeName": {
													"id": 1555,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1554,
														"name": "RecoverChainId",
														"nameLocations": [
															"5181:14:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1237,
														"src": "5181:14:9"
													},
													"referencedDeclaration": 1237,
													"src": "5181:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RecoverChainId_$1237_storage_ptr",
														"typeString": "struct ITokenBridge.RecoverChainId"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5180:27:9"
									},
									"scope": 1559,
									"src": "5093:115:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1560,
							"src": "136:5074:9",
							"usedErrors": [],
							"usedEvents": [
								1243
							]
						}
					],
					"src": "62:5148:9"
				},
				"id": 9
			},
			"example-2/evm/src/interfaces/IWETH.sol": {
				"ast": {
					"absolutePath": "example-2/evm/src/interfaces/IWETH.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IWETH": [
							1573
						]
					},
					"id": 1574,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1561,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "62:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1562,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1574,
							"sourceUnit": 78,
							"src": "87:56:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1563,
										"name": "IERC20",
										"nameLocations": [
											"164:6:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "164:6:10"
									},
									"id": 1564,
									"nodeType": "InheritanceSpecifier",
									"src": "164:6:10"
								}
							],
							"canonicalName": "IWETH",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1573,
							"linearizedBaseContracts": [
								1573,
								77
							],
							"name": "IWETH",
							"nameLocation": "155:5:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 1567,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "186:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "193:2:10"
									},
									"returnParameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "212:0:10"
									},
									"scope": 1573,
									"src": "177:36:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 1572,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "227:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "241:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "236:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "236:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "235:13:10"
									},
									"returnParameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "257:0:10"
									},
									"scope": 1573,
									"src": "218:40:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1574,
							"src": "145:115:10",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "62:198:10"
				},
				"id": 10
			},
			"example-2/evm/src/interfaces/IWormhole.sol": {
				"ast": {
					"absolutePath": "example-2/evm/src/interfaces/IWormhole.sol",
					"exportedSymbols": {
						"IWormhole": [
							1695
						]
					},
					"id": 1696,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1575,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "64:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWormhole",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1695,
							"linearizedBaseContracts": [
								1695
							],
							"name": "IWormhole",
							"nameLocation": "99:9:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IWormhole.Signature",
									"id": 1584,
									"members": [
										{
											"constant": false,
											"id": 1577,
											"mutability": "mutable",
											"name": "r",
											"nameLocation": "150:1:11",
											"nodeType": "VariableDeclaration",
											"scope": 1584,
											"src": "142:9:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1576,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "142:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1579,
											"mutability": "mutable",
											"name": "s",
											"nameLocation": "169:1:11",
											"nodeType": "VariableDeclaration",
											"scope": 1584,
											"src": "161:9:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1578,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "161:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1581,
											"mutability": "mutable",
											"name": "v",
											"nameLocation": "186:1:11",
											"nodeType": "VariableDeclaration",
											"scope": 1584,
											"src": "180:7:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1580,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "180:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1583,
											"mutability": "mutable",
											"name": "guardianIndex",
											"nameLocation": "203:13:11",
											"nodeType": "VariableDeclaration",
											"scope": 1584,
											"src": "197:19:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1582,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "197:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Signature",
									"nameLocation": "122:9:11",
									"nodeType": "StructDefinition",
									"scope": 1695,
									"src": "115:108:11",
									"visibility": "public"
								},
								{
									"canonicalName": "IWormhole.VM",
									"id": 1609,
									"members": [
										{
											"constant": false,
											"id": 1586,
											"mutability": "mutable",
											"name": "version",
											"nameLocation": "255:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 1609,
											"src": "249:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1585,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "249:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1588,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "279:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 1609,
											"src": "272:16:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1587,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "272:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1590,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "305:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1609,
											"src": "298:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1589,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "298:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1592,
											"mutability": "mutable",
											"name": "emitterChainId",
											"nameLocation": "327:14:11",
											"nodeType": "VariableDeclaration",
											"scope": 1609,
											"src": "320:21:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1591,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "320:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1594,
											"mutability": "mutable",
											"name": "emitterAddress",
											"nameLocation": "359:14:11",
											"nodeType": "VariableDeclaration",
											"scope": 1609,
											"src": "351:22:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1593,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "351:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1596,
											"mutability": "mutable",
											"name": "sequence",
											"nameLocation": "390:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 1609,
											"src": "383:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1595,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "383:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1598,
											"mutability": "mutable",
											"name": "consistencyLevel",
											"nameLocation": "414:16:11",
											"nodeType": "VariableDeclaration",
											"scope": 1609,
											"src": "408:22:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1597,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "408:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1600,
											"mutability": "mutable",
											"name": "payload",
											"nameLocation": "446:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 1609,
											"src": "440:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1599,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "440:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1602,
											"mutability": "mutable",
											"name": "guardianSetIndex",
											"nameLocation": "470:16:11",
											"nodeType": "VariableDeclaration",
											"scope": 1609,
											"src": "463:23:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1601,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "463:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1606,
											"mutability": "mutable",
											"name": "signatures",
											"nameLocation": "508:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 1609,
											"src": "496:22:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Signature_$1584_storage_$dyn_storage_ptr",
												"typeString": "struct IWormhole.Signature[]"
											},
											"typeName": {
												"baseType": {
													"id": 1604,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1603,
														"name": "Signature",
														"nameLocations": [
															"496:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1584,
														"src": "496:9:11"
													},
													"referencedDeclaration": 1584,
													"src": "496:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Signature_$1584_storage_ptr",
														"typeString": "struct IWormhole.Signature"
													}
												},
												"id": 1605,
												"nodeType": "ArrayTypeName",
												"src": "496:11:11",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Signature_$1584_storage_$dyn_storage_ptr",
													"typeString": "struct IWormhole.Signature[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1608,
											"mutability": "mutable",
											"name": "hash",
											"nameLocation": "536:4:11",
											"nodeType": "VariableDeclaration",
											"scope": 1609,
											"src": "528:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1607,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "528:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "VM",
									"nameLocation": "236:2:11",
									"nodeType": "StructDefinition",
									"scope": 1695,
									"src": "229:318:11",
									"visibility": "public"
								},
								{
									"canonicalName": "IWormhole.WormholeBodyParams",
									"id": 1622,
									"members": [
										{
											"constant": false,
											"id": 1611,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "596:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 1622,
											"src": "589:16:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1610,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "589:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1613,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "622:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1622,
											"src": "615:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1612,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "615:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1615,
											"mutability": "mutable",
											"name": "emitterChainId",
											"nameLocation": "644:14:11",
											"nodeType": "VariableDeclaration",
											"scope": 1622,
											"src": "637:21:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1614,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "637:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1617,
											"mutability": "mutable",
											"name": "emitterAddress",
											"nameLocation": "676:14:11",
											"nodeType": "VariableDeclaration",
											"scope": 1622,
											"src": "668:22:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1616,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "668:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1619,
											"mutability": "mutable",
											"name": "sequence",
											"nameLocation": "707:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 1622,
											"src": "700:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1618,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "700:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1621,
											"mutability": "mutable",
											"name": "consistencyLevel",
											"nameLocation": "731:16:11",
											"nodeType": "VariableDeclaration",
											"scope": 1622,
											"src": "725:22:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1620,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "725:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "WormholeBodyParams",
									"nameLocation": "560:18:11",
									"nodeType": "StructDefinition",
									"scope": 1695,
									"src": "553:201:11",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "6eb224fb001ed210e379b335e35efe88672a8ce935d981a6896b27ffdf52a3b2",
									"id": 1634,
									"name": "LogMessagePublished",
									"nameLocation": "766:19:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "811:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "795:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"indexed": false,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "826:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "819:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1625,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"indexed": false,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "843:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "836:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1627,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "836:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"indexed": false,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "856:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "850:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1629,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "850:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"indexed": false,
												"mutability": "mutable",
												"name": "consistencyLevel",
												"nameLocation": "871:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "865:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1631,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "865:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "785:108:11"
									},
									"src": "760:134:11"
								},
								{
									"functionSelector": "b19a437e",
									"id": 1645,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "publishMessage",
									"nameLocation": "909:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "931:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "924:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1635,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "924:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "951:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "938:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "938:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "consistencyLevel",
												"nameLocation": "966:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "960:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1639,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "960:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:60:11"
									},
									"returnParameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1041:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "1034:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1642,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1034:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1033:17:11"
									},
									"scope": 1695,
									"src": "900:151:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c0fd8bde",
									"id": 1657,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseAndVerifyVM",
									"nameLocation": "1066:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "encodedVM",
												"nameLocation": "1098:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "1083:24:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1646,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1083:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1082:26:11"
									},
									"returnParameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "vm",
												"nameLocation": "1166:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "1156:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VM_$1609_memory_ptr",
													"typeString": "struct IWormhole.VM"
												},
												"typeName": {
													"id": 1650,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1649,
														"name": "VM",
														"nameLocations": [
															"1156:2:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1609,
														"src": "1156:2:11"
													},
													"referencedDeclaration": 1609,
													"src": "1156:2:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VM_$1609_storage_ptr",
														"typeString": "struct IWormhole.VM"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "valid",
												"nameLocation": "1175:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "1170:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1652,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "1196:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "1182:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1654,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1182:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1155:48:11"
									},
									"scope": 1695,
									"src": "1057:147:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a8a0592",
									"id": 1662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "chainId",
									"nameLocation": "1219:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:11"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "1252:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1659,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1252:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1251:8:11"
									},
									"scope": 1695,
									"src": "1210:50:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1a90a219",
									"id": 1667,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "messageFee",
									"nameLocation": "1275:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1285:2:11"
									},
									"returnParameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "1311:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1310:9:11"
									},
									"scope": 1695,
									"src": "1266:54:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1cfe7951",
									"id": 1672,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentGuardianSetIndex",
									"nameLocation": "1378:26:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:2:11"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "1430:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1669,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1430:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1429:8:11"
									},
									"scope": 1695,
									"src": "1369:69:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IWormhole.GuardianSet",
									"id": 1678,
									"members": [
										{
											"constant": false,
											"id": 1675,
											"mutability": "mutable",
											"name": "keys",
											"nameLocation": "1483:4:11",
											"nodeType": "VariableDeclaration",
											"scope": 1678,
											"src": "1473:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 1673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1473:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1674,
												"nodeType": "ArrayTypeName",
												"src": "1473:9:11",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1677,
											"mutability": "mutable",
											"name": "expirationTime",
											"nameLocation": "1504:14:11",
											"nodeType": "VariableDeclaration",
											"scope": 1678,
											"src": "1497:21:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1676,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "1497:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "GuardianSet",
									"nameLocation": "1451:11:11",
									"nodeType": "StructDefinition",
									"scope": 1695,
									"src": "1444:81:11",
									"visibility": "public"
								},
								{
									"functionSelector": "f951975a",
									"id": 1686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getGuardianSet",
									"nameLocation": "1540:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "guardianSetIndex",
												"nameLocation": "1562:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "1555:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1679,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1555:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1554:25:11"
									},
									"returnParameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "guardians",
												"nameLocation": "1622:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "1603:28:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_GuardianSet_$1678_memory_ptr",
													"typeString": "struct IWormhole.GuardianSet"
												},
												"typeName": {
													"id": 1683,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1682,
														"name": "GuardianSet",
														"nameLocations": [
															"1603:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1678,
														"src": "1603:11:11"
													},
													"referencedDeclaration": 1678,
													"src": "1603:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_GuardianSet_$1678_storage_ptr",
														"typeString": "struct IWormhole.GuardianSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1602:30:11"
									},
									"scope": 1695,
									"src": "1531:102:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9e11893",
									"id": 1694,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseVM",
									"nameLocation": "1648:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "encodedVM",
												"nameLocation": "1669:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "1656:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1687,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1656:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1655:24:11"
									},
									"returnParameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "vm",
												"nameLocation": "1713:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "1703:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VM_$1609_memory_ptr",
													"typeString": "struct IWormhole.VM"
												},
												"typeName": {
													"id": 1691,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1690,
														"name": "VM",
														"nameLocations": [
															"1703:2:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1609,
														"src": "1703:2:11"
													},
													"referencedDeclaration": 1609,
													"src": "1703:2:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VM_$1609_storage_ptr",
														"typeString": "struct IWormhole.VM"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1702:14:11"
									},
									"scope": 1695,
									"src": "1639:78:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1696,
							"src": "89:1630:11",
							"usedErrors": [],
							"usedEvents": [
								1634
							]
						}
					],
					"src": "64:1656:11"
				},
				"id": 11
			}
		}
	}
}