{
	"id": "11f3ea45e2994ccf98d0796e7d45dedf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"example-2/evm/src/contracts/lendingSpoke/Spoke.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/IWormhole.sol\";\n\nimport \"./SpokeSetters.sol\"; \nimport \"../HubSpokeStructs.sol\";\nimport \"../HubSpokeMessages.sol\";\nimport \"./SpokeGetters.sol\";\nimport \"./SpokeUtilities.sol\";\n\ncontract Spoke is HubSpokeStructs, HubSpokeMessages, SpokeGetters, SpokeSetters, SpokeUtilities {\n    /**\n     * @notice Spoke constructor - Initializes a new spoke with given parameters\n     * \n     * @param chainId: Chain ID of the chain that this Spoke is deployed on\n     * @param wormhole: Address of the Wormhole contract on this Spoke chain\n     * @param tokenBridge: Address of the TokenBridge contract on this Spoke chain\n     * @param hubChainId: Chain ID of the Hub\n     * @param hubContractAddress: Contract address of the Hub contract (on the Hub chain)\n     */\n    constructor(\n        uint16 chainId,\n        address wormhole,\n        address tokenBridge,\n        uint16 hubChainId,\n        address hubContractAddress\n    ) {\n        setChainId(chainId);\n        setWormhole(wormhole);\n        setTokenBridge(tokenBridge);\n        setHubChainId(hubChainId);\n        setHubContractAddress(hubContractAddress);\n    }\n\n    function depositCollateral(address assetAddress, uint256 assetAmount) public returns (uint64 sequence) {\n        sequence = doAction(Action.Deposit, assetAddress, assetAmount);\n    }\n\n    function withdrawCollateral(address assetAddress, uint256 assetAmount) public returns (uint64 sequence) {\n        sequence = doAction(Action.Withdraw, assetAddress, assetAmount);\n    }\n\n    function borrow(address assetAddress, uint256 assetAmount) public returns (uint64 sequence) {\n        sequence = doAction(Action.Borrow, assetAddress, assetAmount);\n    }\n\n    function repay(address assetAddress, uint256 assetAmount) public returns (uint64 sequence) {\n        sequence = doAction(Action.Repay, assetAddress, assetAmount);\n    }\n\n    function depositCollateralNative() public payable returns (uint64 sequence) {\n        sequence = doAction(Action.DepositNative, address(tokenBridge().WETH()), msg.value - wormhole().messageFee());\n    }\n\n    function repayNative() public payable returns (uint64 sequence) {\n        sequence = doAction(Action.RepayNative, address(tokenBridge().WETH()), msg.value - wormhole().messageFee());\n    }\n\n    /**\n     * @notice Initiates an action (deposit, borrow, withdraw, or repay) on the spoke by sending a Wormhole message (potentially a TokenBridge message with tokens) to the Hub\n     * \n     * @param action - the action (either Deposit, Borrow, Withdraw, or Repay)\n     * @param assetAddress - the address of the relevant asset\n     * @param assetAmount - the amount of the asset assetAddress\n     */\n    function doAction(Action action, address assetAddress, uint256 assetAmount) internal returns (uint64 sequence) {\n        requireAssetAmountValidForTokenBridge(assetAddress, assetAmount);\n        Action hubAction = action;\n        if (action == Action.DepositNative) {\n            hubAction = Action.Deposit;\n        }\n        if (action == Action.RepayNative) {\n            hubAction = Action.Repay;\n        }\n\n        ActionPayload memory payload =\n            ActionPayload({action: hubAction, sender: msg.sender, assetAddress: assetAddress, assetAmount: assetAmount});\n\n        bytes memory serialized = encodeActionPayload(payload);\n\n        if (action == Action.Deposit || action == Action.Repay) {\n            sequence = sendTokenBridgeMessage(assetAddress, assetAmount, serialized);\n        } else if (action == Action.Withdraw || action == Action.Borrow) {\n            sequence = sendWormholeMessage(serialized);\n        } else if (action == Action.DepositNative || action == Action.RepayNative) {\n            sequence = sendTokenBridgeMessageNative(assetAmount + wormhole().messageFee(), serialized);\n        }\n    }\n}\n"
			},
			"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\nimport \"../HubSpokeStructs.sol\";\nimport \"./SpokeState.sol\";\nimport \"./SpokeGetters.sol\";\nimport \"./SpokeSetters.sol\";\n\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract SpokeUtilities is HubSpokeStructs, SpokeState, SpokeGetters, SpokeSetters {\n    function sendWormholeMessage(bytes memory payload) internal returns (uint64 sequence) {\n        sequence = wormhole().publishMessage(\n            0, // nonce\n            payload,\n            consistencyLevel()\n        );\n    }\n\n    function sendTokenBridgeMessage(address assetAddress, uint256 assetAmount, bytes memory payload)\n        internal\n        returns (uint64 sequence)\n    {\n        SafeERC20.safeTransferFrom(IERC20(assetAddress), msg.sender, address(this), assetAmount);\n\n        SafeERC20.safeTransfer(IERC20(assetAddress), tokenBridgeAddress(), assetAmount);\n\n        sequence = tokenBridge().transferTokensWithPayload(\n            assetAddress, assetAmount, hubChainId(), bytes32(uint256(uint160(hubContractAddress()))), 0, payload\n        );\n    }\n\n    function sendTokenBridgeMessageNative(uint256 amount, bytes memory payload) internal returns (uint64 sequence) {\n        sequence = tokenBridge().wrapAndTransferETHWithPayload{value: amount}(\n            hubChainId(), bytes32(uint256(uint160(hubContractAddress()))), 0, payload\n        );\n    }\n\n    function requireAssetAmountValidForTokenBridge(address assetAddress, uint256 assetAmount) internal view {\n        (, bytes memory queriedDecimals) = assetAddress.staticcall(abi.encodeWithSignature(\"decimals()\"));\n        uint8 decimals = abi.decode(queriedDecimals, (uint8));\n        require(\n            deNormalizeAmount(normalizeAmount(assetAmount, decimals), decimals) == assetAmount,\n            \"Too many decimal places\"\n        );\n    }\n\n    function normalizeAmount(uint256 amount, uint8 decimals) internal pure returns (uint256) {\n        if (decimals > 8) {\n            amount /= 10 ** (decimals - 8);\n        }\n        return amount;\n    }\n\n    function deNormalizeAmount(uint256 amount, uint8 decimals) internal pure returns (uint256) {\n        if (decimals > 8) {\n            amount *= 10 ** (decimals - 8);\n        }\n        return amount;\n    }\n}\n"
			},
			"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/IWormhole.sol\";\nimport \"../../interfaces/ITokenBridge.sol\";\nimport \"./SpokeState.sol\";\nimport \"../HubSpokeStructs.sol\";\n\ncontract SpokeGetters is HubSpokeStructs, SpokeState {\n    function chainId() public view returns (uint16) {\n        return _state.provider.chainId;\n    }\n\n    function wormhole() internal view returns (IWormhole) {\n        return IWormhole(_state.provider.wormhole);\n    }\n\n    function tokenBridge() public view returns (ITokenBridge) {\n        return ITokenBridge(payable(_state.provider.tokenBridge));\n    }\n\n    function tokenBridgeAddress() public view returns (address) {\n        return _state.provider.tokenBridge;\n    }\n\n    function consistencyLevel() internal view returns (uint8) {\n        return _state.consistencyLevel;\n    }\n\n    function hubChainId() internal view returns (uint16) {\n        return _state.hubChainId;\n    }\n\n    function hubContractAddress() internal view returns (address) {\n        return _state.hubContractAddress;\n    }\n}\n"
			},
			"example-2/evm/src/contracts/HubSpokeMessages.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\nimport \"../libraries/external/BytesLib.sol\";\n\nimport \"./HubSpokeStructs.sol\";\n\ncontract HubSpokeMessages is HubSpokeStructs {\n    using BytesLib for bytes;\n\n    function encodeActionPayload(ActionPayload memory payload) internal pure returns (bytes memory) {\n        return abi.encodePacked(uint8(payload.action), payload.sender, payload.assetAddress, payload.assetAmount);\n    }\n\n    function decodeActionPayload(bytes memory serialized) internal pure returns (ActionPayload memory params) {\n        uint256 index = 0;\n\n        params.action = Action(serialized.toUint8(index));\n        index += 1;\n\n        params.sender = serialized.toAddress(index);\n        index += 20;\n\n        params.assetAddress = serialized.toAddress(index);\n        index += 20;\n\n        params.assetAmount = serialized.toUint256(index);\n    }\n}\n"
			},
			"example-2/evm/src/contracts/HubSpokeStructs.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\ncontract HubSpokeStructs {\n    struct VaultAmount {\n        uint256 deposited;\n        uint256 borrowed;\n    }\n\n    struct AccrualIndices {\n        uint256 deposited;\n        uint256 borrowed;\n    }\n\n    struct AssetInfo {\n        uint256 collateralizationRatioDeposit;\n        uint256 collateralizationRatioBorrow;\n        bytes32 pythId;\n        // pyth id info\n        uint8 decimals;\n        PiecewiseInterestRateModel interestRateModel;\n        bool exists;\n    }\n\n    struct InterestRateModel {\n        uint64 ratePrecision;\n        uint64 rateIntercept;\n        uint64 rateCoefficientA;\n        uint256 reserveFactor;\n        uint256 reservePrecision;\n    }\n\n    struct PiecewiseInterestRateModel {\n        uint64 ratePrecision;\n        uint256[] kinks;\n        uint256[] rates;\n        uint256 reserveFactor;\n        uint256 reservePrecision;\n    }\n\n    enum Action {\n        Deposit,\n        Borrow,\n        Withdraw,\n        Repay,\n        DepositNative,\n        RepayNative\n    }\n\n    enum Round {\n        UP,\n        DOWN\n    }\n\n    struct ActionPayload {\n        Action action;\n        address sender;\n        address assetAddress;\n        uint256 assetAmount;\n    }\n\n    // struct for mock oracle price\n    struct Price {\n        int64 price;\n        uint64 conf;\n        int32 expo;\n        uint256 publishTime;\n    }\n}\n"
			},
			"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\nimport \"./SpokeState.sol\";\nimport \"../HubSpokeStructs.sol\";\n\ncontract SpokeSetters is HubSpokeStructs, SpokeState {\n    function setChainId(uint16 chainId) internal {\n        _state.provider.chainId = chainId;\n    }\n\n    function setWormhole(address wormholeAddress) internal {\n        _state.provider.wormhole = payable(wormholeAddress);\n    }\n\n    function setTokenBridge(address tokenBridgeAddress) internal {\n        _state.provider.tokenBridge = tokenBridgeAddress;\n    }\n\n    function setHubChainId(uint16 hubChainId) internal {\n        _state.hubChainId = hubChainId;\n    }\n\n    function setHubContractAddress(address hubContractAddress) internal {\n        _state.hubContractAddress = hubContractAddress;\n    }\n}\n"
			},
			"example-2/evm/src/interfaces/IWormhole.sol": {
				"content": "// contracts/Messages.sol\n// SPDX-License-Identifier: Apache 2\n\npragma solidity ^0.8.0;\n\ninterface IWormhole {\n    struct Signature {\n        bytes32 r;\n        bytes32 s;\n        uint8 v;\n        uint8 guardianIndex;\n    }\n\n    struct VM {\n        uint8 version;\n        uint32 timestamp;\n        uint32 nonce;\n        uint16 emitterChainId;\n        bytes32 emitterAddress;\n        uint64 sequence;\n        uint8 consistencyLevel;\n        bytes payload;\n        uint32 guardianSetIndex;\n        Signature[] signatures;\n        bytes32 hash;\n    }\n\n    struct WormholeBodyParams {\n        uint32 timestamp;\n        uint32 nonce;\n        uint16 emitterChainId;\n        bytes32 emitterAddress;\n        uint64 sequence;\n        uint8 consistencyLevel;\n    }\n\n    event LogMessagePublished(\n        address indexed sender, uint64 sequence, uint32 nonce, bytes payload, uint8 consistencyLevel\n    );\n\n    function publishMessage(uint32 nonce, bytes memory payload, uint8 consistencyLevel)\n        external\n        payable\n        returns (uint64 sequence);\n\n    function parseAndVerifyVM(bytes calldata encodedVM)\n        external\n        view\n        returns (VM memory vm, bool valid, string memory reason);\n\n    function chainId() external view returns (uint16);\n\n    function messageFee() external view returns (uint256);\n\n    // added due to WormholeSimulator need\n    function getCurrentGuardianSetIndex() external view returns (uint32);\n\n    struct GuardianSet {\n        address[] keys;\n        uint32 expirationTime;\n    }\n\n    function getGuardianSet(uint32 guardianSetIndex) external view returns (GuardianSet memory guardians);\n\n    function parseVM(bytes memory encodedVM) external pure returns (VM memory vm);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\nimport \"../HubSpokeStructs.sol\";\n\ncontract SpokeStorage is HubSpokeStructs {\n    struct Provider {\n        uint16 chainId;\n        address payable wormhole;\n        address tokenBridge;\n    }\n\n    struct State {\n        Provider provider;\n        // number of confirmations for wormhole messages\n        uint8 consistencyLevel;\n        uint16 hubChainId;\n        address hubContractAddress;\n        // @dev storage gap\n        uint256[50] ______gap;\n    }\n}\n\ncontract SpokeState {\n    SpokeStorage.State _state;\n}\n"
			},
			"example-2/evm/src/interfaces/ITokenBridge.sol": {
				"content": "// contracts/Bridge.sol\n// SPDX-License-Identifier: Apache 2\n\npragma solidity ^0.8.0;\n\nimport \"./IWETH.sol\";\nimport \"./IWormhole.sol\";\n\ninterface ITokenBridge {\n    struct Transfer {\n        uint8 payloadID;\n        uint256 amount;\n        bytes32 tokenAddress;\n        uint16 tokenChain;\n        bytes32 to;\n        uint16 toChain;\n        uint256 fee;\n    }\n\n    struct TransferWithPayload {\n        uint8 payloadID;\n        uint256 amount;\n        bytes32 tokenAddress;\n        uint16 tokenChain;\n        bytes32 to;\n        uint16 toChain;\n        bytes32 fromAddress;\n        bytes payload;\n    }\n\n    struct AssetMeta {\n        uint8 payloadID;\n        bytes32 tokenAddress;\n        uint16 tokenChain;\n        uint8 decimals;\n        bytes32 symbol;\n        bytes32 name;\n    }\n\n    struct RegisterChain {\n        bytes32 module;\n        uint8 action;\n        uint16 chainId;\n\n        uint16 emitterChainID;\n        bytes32 emitterAddress;\n    }\n\n     struct UpgradeContract {\n        bytes32 module;\n        uint8 action;\n        uint16 chainId;\n\n        bytes32 newContract;\n    }\n\n    struct RecoverChainId {\n        bytes32 module;\n        uint8 action;\n\n        uint256 evmChainId;\n        uint16 newChainId;\n    }\n\n    event ContractUpgraded(address indexed oldContract, address indexed newContract);\n\n    function _parseTransferCommon(bytes memory encoded) external pure returns (Transfer memory transfer);\n\n    function attestToken(address tokenAddress, uint32 nonce) external payable returns (uint64 sequence);\n\n    function wrapAndTransferETH(uint16 recipientChain, bytes32 recipient, uint256 arbiterFee, uint32 nonce) external payable returns (uint64 sequence);\n\n    function wrapAndTransferETHWithPayload(uint16 recipientChain, bytes32 recipient, uint32 nonce, bytes memory payload) external payable returns (uint64 sequence);\n\n    function transferTokens(address token, uint256 amount, uint16 recipientChain, bytes32 recipient, uint256 arbiterFee, uint32 nonce) external payable returns (uint64 sequence);\n\n    function transferTokensWithPayload(address token, uint256 amount, uint16 recipientChain, bytes32 recipient, uint32 nonce, bytes memory payload) external payable returns (uint64 sequence);\n\n    function updateWrapped(bytes memory encodedVm) external returns (address token);\n\n    function createWrapped(bytes memory encodedVm) external returns (address token);\n\n    function completeTransferWithPayload(bytes memory encodedVm) external returns (bytes memory);\n\n    function completeTransferAndUnwrapETHWithPayload(bytes memory encodedVm) external returns (bytes memory);\n\n    function completeTransfer(bytes memory encodedVm) external;\n\n    function completeTransferAndUnwrapETH(bytes memory encodedVm) external;\n\n    function encodeAssetMeta(AssetMeta memory meta) external pure returns (bytes memory encoded);\n\n    function encodeTransfer(Transfer memory transfer) external pure returns (bytes memory encoded);\n\n    function encodeTransferWithPayload(TransferWithPayload memory transfer) external pure returns (bytes memory encoded);\n\n    function parsePayloadID(bytes memory encoded) external pure returns (uint8 payloadID);\n\n    function parseAssetMeta(bytes memory encoded) external pure returns (AssetMeta memory meta);\n\n    function parseTransfer(bytes memory encoded) external pure returns (Transfer memory transfer);\n\n    function parseTransferWithPayload(bytes memory encoded) external pure returns (TransferWithPayload memory transfer);\n\n    function governanceActionIsConsumed(bytes32 hash) external view returns (bool);\n\n    function isInitialized(address impl) external view returns (bool);\n\n    function isTransferCompleted(bytes32 hash) external view returns (bool);\n\n    function wormhole() external view returns (IWormhole);\n\n    function chainId() external view returns (uint16);\n\n    function evmChainId() external view returns (uint256);\n\n    function isFork() external view returns (bool);\n\n    function governanceChainId() external view returns (uint16);\n\n    function governanceContract() external view returns (bytes32);\n\n    function wrappedAsset(uint16 tokenChainId, bytes32 tokenAddress) external view returns (address);\n\n    function bridgeContracts(uint16 chainId_) external view returns (bytes32);\n\n    function tokenImplementation() external view returns (address);\n\n    function WETH() external view returns (IWETH);\n\n    function outstandingBridged(address token) external view returns (uint256);\n\n    function isWrappedAsset(address token) external view returns (bool);\n\n    function finality() external view returns (uint8);\n\n    function implementation() external view returns (address);\n\n    function initialize() external;\n\n    function registerChain(bytes memory encodedVM) external;\n\n    function upgrade(bytes memory encodedVM) external;\n\n    function submitRecoverChainId(bytes memory encodedVM) external;\n\n    function parseRegisterChain(bytes memory encoded) external pure returns (RegisterChain memory chain);\n\n    function parseUpgrade(bytes memory encoded) external pure returns (UpgradeContract memory chain);\n\n    function parseRecoverChainId(bytes memory encodedRecoverChainId) external pure returns (RecoverChainId memory rci);\n}"
			},
			"example-2/evm/src/libraries/external/BytesLib.sol": {
				"content": "// SPDX-License-Identifier: Unlicense\n/*\n * @title Solidity Bytes Arrays Utils\n * @author Gonçalo Sá <goncalo.sa@consensys.net>\n *\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\n */\npragma solidity >=0.8.0 <0.9.0;\n\n\nlibrary BytesLib {\n    function concat(\n        bytes memory _preBytes,\n        bytes memory _postBytes\n    )\n        internal\n        pure\n        returns (bytes memory)\n    {\n        bytes memory tempBytes;\n\n        assembly {\n            // Get a location of some free memory and store it in tempBytes as\n            // Solidity does for memory variables.\n            tempBytes := mload(0x40)\n\n            // Store the length of the first bytes array at the beginning of\n            // the memory for tempBytes.\n            let length := mload(_preBytes)\n            mstore(tempBytes, length)\n\n            // Maintain a memory counter for the current write location in the\n            // temp bytes array by adding the 32 bytes for the array length to\n            // the starting location.\n            let mc := add(tempBytes, 0x20)\n            // Stop copying when the memory counter reaches the length of the\n            // first bytes array.\n            let end := add(mc, length)\n\n            for {\n                // Initialize a copy counter to the start of the _preBytes data,\n                // 32 bytes into its memory.\n                let cc := add(_preBytes, 0x20)\n            } lt(mc, end) {\n                // Increase both counters by 32 bytes each iteration.\n                mc := add(mc, 0x20)\n                cc := add(cc, 0x20)\n            } {\n                // Write the _preBytes data into the tempBytes memory 32 bytes\n                // at a time.\n                mstore(mc, mload(cc))\n            }\n\n            // Add the length of _postBytes to the current length of tempBytes\n            // and store it as the new length in the first 32 bytes of the\n            // tempBytes memory.\n            length := mload(_postBytes)\n            mstore(tempBytes, add(length, mload(tempBytes)))\n\n            // Move the memory counter back from a multiple of 0x20 to the\n            // actual end of the _preBytes data.\n            mc := end\n            // Stop copying when the memory counter reaches the new combined\n            // length of the arrays.\n            end := add(mc, length)\n\n            for {\n                let cc := add(_postBytes, 0x20)\n            } lt(mc, end) {\n                mc := add(mc, 0x20)\n                cc := add(cc, 0x20)\n            } {\n                mstore(mc, mload(cc))\n            }\n\n            // Update the free-memory pointer by padding our last write location\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\n            // next 32 byte block, then round down to the nearest multiple of\n            // 32. If the sum of the length of the two arrays is zero then add\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\n            mstore(0x40, and(\n              add(add(end, iszero(add(length, mload(_preBytes)))), 31),\n              not(31) // Round down to the nearest 32 bytes.\n            ))\n        }\n\n        return tempBytes;\n    }\n\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\n        assembly {\n            // Read the first 32 bytes of _preBytes storage, which is the length\n            // of the array. (We don't need to use the offset into the slot\n            // because arrays use the entire slot.)\n            let fslot := sload(_preBytes.slot)\n            // Arrays of 31 bytes or less have an even value in their slot,\n            // while longer arrays have an odd value. The actual length is\n            // the slot divided by two for odd values, and the lowest order\n            // byte divided by two for even values.\n            // If the slot is even, bitwise and the slot with 255 and divide by\n            // two to get the length. If the slot is odd, bitwise and the slot\n            // with -1 and divide by two.\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\n            let mlength := mload(_postBytes)\n            let newlength := add(slength, mlength)\n            // slength can contain both the length and contents of the array\n            // if length < 32 bytes so let's prepare for that\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\n            switch add(lt(slength, 32), lt(newlength, 32))\n            case 2 {\n                // Since the new array still fits in the slot, we just need to\n                // update the contents of the slot.\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\n                sstore(\n                    _preBytes.slot,\n                    // all the modifications to the slot are inside this\n                    // next block\n                    add(\n                        // we can just add to the slot contents because the\n                        // bytes we want to change are the LSBs\n                        fslot,\n                        add(\n                            mul(\n                                div(\n                                    // load the bytes from memory\n                                    mload(add(_postBytes, 0x20)),\n                                    // zero all bytes to the right\n                                    exp(0x100, sub(32, mlength))\n                                ),\n                                // and now shift left the number of bytes to\n                                // leave space for the length in the slot\n                                exp(0x100, sub(32, newlength))\n                            ),\n                            // increase length by the double of the memory\n                            // bytes length\n                            mul(mlength, 2)\n                        )\n                    )\n                )\n            }\n            case 1 {\n                // The stored value fits in the slot, but the combined value\n                // will exceed it.\n                // get the keccak hash to get the contents of the array\n                mstore(0x0, _preBytes.slot)\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\n\n                // save new length\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\n\n                // The contents of the _postBytes array start 32 bytes into\n                // the structure. Our first read should obtain the `submod`\n                // bytes that can fit into the unused space in the last word\n                // of the stored array. To get this, we read 32 bytes starting\n                // from `submod`, so the data we read overlaps with the array\n                // contents by `submod` bytes. Masking the lowest-order\n                // `submod` bytes allows us to add that value directly to the\n                // stored value.\n\n                let submod := sub(32, slength)\n                let mc := add(_postBytes, submod)\n                let end := add(_postBytes, mlength)\n                let mask := sub(exp(0x100, submod), 1)\n\n                sstore(\n                    sc,\n                    add(\n                        and(\n                            fslot,\n                            0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n                        ),\n                        and(mload(mc), mask)\n                    )\n                )\n\n                for {\n                    mc := add(mc, 0x20)\n                    sc := add(sc, 1)\n                } lt(mc, end) {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } {\n                    sstore(sc, mload(mc))\n                }\n\n                mask := exp(0x100, sub(mc, end))\n\n                sstore(sc, mul(div(mload(mc), mask), mask))\n            }\n            default {\n                // get the keccak hash to get the contents of the array\n                mstore(0x0, _preBytes.slot)\n                // Start copying to the last used word of the stored array.\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\n\n                // save new length\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\n\n                // Copy over the first `submod` bytes of the new data as in\n                // case 1 above.\n                let slengthmod := mod(slength, 32)\n                let mlengthmod := mod(mlength, 32)\n                let submod := sub(32, slengthmod)\n                let mc := add(_postBytes, submod)\n                let end := add(_postBytes, mlength)\n                let mask := sub(exp(0x100, submod), 1)\n\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\n\n                for {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } lt(mc, end) {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } {\n                    sstore(sc, mload(mc))\n                }\n\n                mask := exp(0x100, sub(mc, end))\n\n                sstore(sc, mul(div(mload(mc), mask), mask))\n            }\n        }\n    }\n\n    function slice(\n        bytes memory _bytes,\n        uint256 _start,\n        uint256 _length\n    )\n        internal\n        pure\n        returns (bytes memory)\n    {\n        require(_length + 31 >= _length, \"slice_overflow\");\n        require(_bytes.length >= _start + _length, \"slice_outOfBounds\");\n\n        bytes memory tempBytes;\n\n        assembly {\n            switch iszero(_length)\n            case 0 {\n                // Get a location of some free memory and store it in tempBytes as\n                // Solidity does for memory variables.\n                tempBytes := mload(0x40)\n\n                // The first word of the slice result is potentially a partial\n                // word read from the original array. To read it, we calculate\n                // the length of that partial word and start copying that many\n                // bytes into the array. The first word we copy will start with\n                // data we don't care about, but the last `lengthmod` bytes will\n                // land at the beginning of the contents of the new array. When\n                // we're done copying, we overwrite the full first word with\n                // the actual length of the slice.\n                let lengthmod := and(_length, 31)\n\n                // The multiplication in the next line is necessary\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\n                // the following copy loop was copying the origin's length\n                // and then ending prematurely not copying everything it should.\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\n                let end := add(mc, _length)\n\n                for {\n                    // The multiplication in the next line has the same exact purpose\n                    // as the one above.\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\n                } lt(mc, end) {\n                    mc := add(mc, 0x20)\n                    cc := add(cc, 0x20)\n                } {\n                    mstore(mc, mload(cc))\n                }\n\n                mstore(tempBytes, _length)\n\n                //update free-memory pointer\n                //allocating the array padded to 32 bytes like the compiler does now\n                mstore(0x40, and(add(mc, 31), not(31)))\n            }\n            //if we want a zero-length slice let's just return a zero-length array\n            default {\n                tempBytes := mload(0x40)\n                //zero out the 32 bytes slice we are about to return\n                //we need to do it because Solidity does not garbage collect\n                mstore(tempBytes, 0)\n\n                mstore(0x40, add(tempBytes, 0x20))\n            }\n        }\n\n        return tempBytes;\n    }\n\n    function toAddress(bytes memory _bytes, uint256 _start) internal pure returns (address) {\n        require(_bytes.length >= _start + 20, \"toAddress_outOfBounds\");\n        address tempAddress;\n\n        assembly {\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\n        }\n\n        return tempAddress;\n    }\n\n    function toUint8(bytes memory _bytes, uint256 _start) internal pure returns (uint8) {\n        require(_bytes.length >= _start + 1 , \"toUint8_outOfBounds\");\n        uint8 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x1), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint16(bytes memory _bytes, uint256 _start) internal pure returns (uint16) {\n        require(_bytes.length >= _start + 2, \"toUint16_outOfBounds\");\n        uint16 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x2), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint32(bytes memory _bytes, uint256 _start) internal pure returns (uint32) {\n        require(_bytes.length >= _start + 4, \"toUint32_outOfBounds\");\n        uint32 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x4), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint64(bytes memory _bytes, uint256 _start) internal pure returns (uint64) {\n        require(_bytes.length >= _start + 8, \"toUint64_outOfBounds\");\n        uint64 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x8), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint96(bytes memory _bytes, uint256 _start) internal pure returns (uint96) {\n        require(_bytes.length >= _start + 12, \"toUint96_outOfBounds\");\n        uint96 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0xc), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint128(bytes memory _bytes, uint256 _start) internal pure returns (uint128) {\n        require(_bytes.length >= _start + 16, \"toUint128_outOfBounds\");\n        uint128 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x10), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint256(bytes memory _bytes, uint256 _start) internal pure returns (uint256) {\n        require(_bytes.length >= _start + 32, \"toUint256_outOfBounds\");\n        uint256 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x20), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toBytes32(bytes memory _bytes, uint256 _start) internal pure returns (bytes32) {\n        require(_bytes.length >= _start + 32, \"toBytes32_outOfBounds\");\n        bytes32 tempBytes32;\n\n        assembly {\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\n        }\n\n        return tempBytes32;\n    }\n\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\n        bool success = true;\n\n        assembly {\n            let length := mload(_preBytes)\n\n            // if lengths don't match the arrays are not equal\n            switch eq(length, mload(_postBytes))\n            case 1 {\n                // cb is a circuit breaker in the for loop since there's\n                //  no said feature for inline assembly loops\n                // cb = 1 - don't breaker\n                // cb = 0 - break\n                let cb := 1\n\n                let mc := add(_preBytes, 0x20)\n                let end := add(mc, length)\n\n                for {\n                    let cc := add(_postBytes, 0x20)\n                // the next line is the loop condition:\n                // while(uint256(mc < end) + cb == 2)\n                } eq(add(lt(mc, end), cb), 2) {\n                    mc := add(mc, 0x20)\n                    cc := add(cc, 0x20)\n                } {\n                    // if any of these checks fails then arrays are not equal\n                    if iszero(eq(mload(mc), mload(cc))) {\n                        // unsuccess:\n                        success := 0\n                        cb := 0\n                    }\n                }\n            }\n            default {\n                // unsuccess:\n                success := 0\n            }\n        }\n\n        return success;\n    }\n\n    function equalStorage(\n        bytes storage _preBytes,\n        bytes memory _postBytes\n    )\n        internal\n        view\n        returns (bool)\n    {\n        bool success = true;\n\n        assembly {\n            // we know _preBytes_offset is 0\n            let fslot := sload(_preBytes.slot)\n            // Decode the length of the stored array like in concatStorage().\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\n            let mlength := mload(_postBytes)\n\n            // if lengths don't match the arrays are not equal\n            switch eq(slength, mlength)\n            case 1 {\n                // slength can contain both the length and contents of the array\n                // if length < 32 bytes so let's prepare for that\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\n                if iszero(iszero(slength)) {\n                    switch lt(slength, 32)\n                    case 1 {\n                        // blank the last byte which is the length\n                        fslot := mul(div(fslot, 0x100), 0x100)\n\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\n                            // unsuccess:\n                            success := 0\n                        }\n                    }\n                    default {\n                        // cb is a circuit breaker in the for loop since there's\n                        //  no said feature for inline assembly loops\n                        // cb = 1 - don't breaker\n                        // cb = 0 - break\n                        let cb := 1\n\n                        // get the keccak hash to get the contents of the array\n                        mstore(0x0, _preBytes.slot)\n                        let sc := keccak256(0x0, 0x20)\n\n                        let mc := add(_postBytes, 0x20)\n                        let end := add(mc, mlength)\n\n                        // the next line is the loop condition:\n                        // while(uint256(mc < end) + cb == 2)\n                        for {} eq(add(lt(mc, end), cb), 2) {\n                            sc := add(sc, 1)\n                            mc := add(mc, 0x20)\n                        } {\n                            if iszero(eq(sload(sc), mload(mc))) {\n                                // unsuccess:\n                                success := 0\n                                cb := 0\n                            }\n                        }\n                    }\n                }\n            }\n            default {\n                // unsuccess:\n                success := 0\n            }\n        }\n\n        return success;\n    }\n}\n"
			},
			"example-2/evm/src/interfaces/IWETH.sol": {
				"content": "// contracts/Bridge.sol\n// SPDX-License-Identifier: Apache 2\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ninterface IWETH is IERC20 {\n    function deposit() external payable;\n    function withdraw(uint amount) external;\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207ea5f4dd61afe3c8d18b07fd4ebb791a2469a48c5558f0aefb60c6be8ea9b6d564736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207ea5f4dd61afe3c8d18b07fd4ebb791a2469a48c5558f0aefb60c6be8ea9b6d564736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xA5F4DD61AFE3C8D18B07FD4EBB791A2469A48C5558F0AEFB60C6BE8EA9B6D5 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;751:5018:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207ea5f4dd61afe3c8d18b07fd4ebb791a2469a48c5558f0aefb60c6be8ea9b6d564736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xA5F4DD61AFE3C8D18B07FD4EBB791A2469A48C5558F0AEFB60C6BE8EA9B6D5 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207ea5f4dd61afe3c8d18b07fd4ebb791a2469a48c5558f0aefb60c6be8ea9b6d564736f6c63430008170033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"example-2/evm/src/contracts/HubSpokeMessages.sol",
								"example-2/evm/src/contracts/HubSpokeStructs.sol",
								"example-2/evm/src/contracts/lendingSpoke/Spoke.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol",
								"example-2/evm/src/interfaces/ITokenBridge.sol",
								"example-2/evm/src/interfaces/IWETH.sol",
								"example-2/evm/src/interfaces/IWormhole.sol",
								"example-2/evm/src/libraries/external/BytesLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d40f7da7427f199b12dab00fa558e2574bfe0b201b9744e1e8aec8bba915619564736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d40f7da7427f199b12dab00fa558e2574bfe0b201b9744e1e8aec8bba915619564736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xF PUSH30 0xA7427F199B12DAB00FA558E2574BFE0B201B9744E1E8AEC8BBA915619564 PUSH20 0x6F6C634300081700330000000000000000000000 ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d40f7da7427f199b12dab00fa558e2574bfe0b201b9744e1e8aec8bba915619564736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xF PUSH30 0xA7427F199B12DAB00FA558E2574BFE0B201B9744E1E8AEC8BBA915619564 PUSH20 0x6F6C634300081700330000000000000000000000 ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d40f7da7427f199b12dab00fa558e2574bfe0b201b9744e1e8aec8bba915619564736f6c63430008170033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"example-2/evm/src/contracts/HubSpokeMessages.sol",
								"example-2/evm/src/contracts/HubSpokeStructs.sol",
								"example-2/evm/src/contracts/lendingSpoke/Spoke.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol",
								"example-2/evm/src/interfaces/ITokenBridge.sol",
								"example-2/evm/src/interfaces/IWETH.sol",
								"example-2/evm/src/interfaces/IWormhole.sol",
								"example-2/evm/src/libraries/external/BytesLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"example-2/evm/src/contracts/HubSpokeMessages.sol": {
				"HubSpokeMessages": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"example-2/evm/src/contracts/HubSpokeMessages.sol\":143:886  contract HubSpokeMessages is HubSpokeStructs {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"example-2/evm/src/contracts/HubSpokeMessages.sol\":143:886  contract HubSpokeMessages is HubSpokeStructs {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c13a7aa313f5e34bbfd9bbda5ad1d41b821bd74c766394966c98614d7aa369a164736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea2646970667358221220c13a7aa313f5e34bbfd9bbda5ad1d41b821bd74c766394966c98614d7aa369a164736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 GASPRICE PUSH27 0xA313F5E34BBFD9BBDA5AD1D41B821BD74C766394966C98614D7AA3 PUSH10 0xA164736F6C6343000817 STOP CALLER ",
							"sourceMap": "143:743:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea2646970667358221220c13a7aa313f5e34bbfd9bbda5ad1d41b821bd74c766394966c98614d7aa369a164736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 GASPRICE PUSH27 0xA313F5E34BBFD9BBDA5AD1D41B821BD74C766394966C98614D7AA3 PUSH10 0xA164736F6C6343000817 STOP CALLER ",
							"sourceMap": "143:743:4:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							},
							"internal": {
								"decodeActionPayload(bytes memory)": "infinite",
								"encodeActionPayload(struct HubSpokeStructs.ActionPayload memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 143,
									"end": 886,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 143,
									"end": 886,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 143,
									"end": 886,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 143,
									"end": 886,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 143,
									"end": 886,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 143,
									"end": 886,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 143,
									"end": 886,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 143,
									"end": 886,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 143,
									"end": 886,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 886,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 143,
									"end": 886,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 143,
									"end": 886,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 143,
									"end": 886,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 143,
									"end": 886,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 143,
									"end": 886,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 143,
									"end": 886,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 143,
									"end": 886,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 143,
									"end": 886,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 886,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 143,
									"end": 886,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 886,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c13a7aa313f5e34bbfd9bbda5ad1d41b821bd74c766394966c98614d7aa369a164736f6c63430008170033",
									".code": [
										{
											"begin": 143,
											"end": 886,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 143,
											"end": 886,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 143,
											"end": 886,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 143,
											"end": 886,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 886,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 143,
											"end": 886,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"example-2/evm/src/contracts/HubSpokeMessages.sol",
								"example-2/evm/src/contracts/HubSpokeStructs.sol",
								"example-2/evm/src/contracts/lendingSpoke/Spoke.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol",
								"example-2/evm/src/interfaces/ITokenBridge.sol",
								"example-2/evm/src/interfaces/IWETH.sol",
								"example-2/evm/src/interfaces/IWormhole.sol",
								"example-2/evm/src/libraries/external/BytesLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"example-2/evm/src/contracts/HubSpokeMessages.sol\":\"HubSpokeMessages\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"example-2/evm/src/contracts/HubSpokeMessages.sol\":{\"keccak256\":\"0xbd7eddd402e84ececac48891645f176cd5c7c1e900ea6c10535d79f5df711dfd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b9f854584331c92ceedab8a9164a2d57ebde3aabbf081fd82c2862bddb978bf2\",\"dweb:/ipfs/QmTnJyxqnSq7n9o2FgGfV1RecQ2HTW8vJfPcCS9Qwig1No\"]},\"example-2/evm/src/contracts/HubSpokeStructs.sol\":{\"keccak256\":\"0x24302b1f2d165f5b53d3bedd11aa1c367d30458bb93e0a34a79a939e753fd7dc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://11d40dd261195ea6fe19f0aa56d2aad5040cabd000041b250d3419985e9d6a9e\",\"dweb:/ipfs/Qmd59wjnwsyt2ave7vYQZQdPxk2AGHAvWVhQAUGAgxPMJ6\"]},\"example-2/evm/src/libraries/external/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"example-2/evm/src/contracts/HubSpokeStructs.sol": {
				"HubSpokeStructs": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"example-2/evm/src/contracts/HubSpokeStructs.sol\":64:1398  contract HubSpokeStructs {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"example-2/evm/src/contracts/HubSpokeStructs.sol\":64:1398  contract HubSpokeStructs {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a1ed8605713bc2e223f34684d8c07e4fbf71e3eea08791984babb469035b859164736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea2646970667358221220a1ed8605713bc2e223f34684d8c07e4fbf71e3eea08791984babb469035b859164736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xED DUP7 SDIV PUSH18 0x3BC2E223F34684D8C07E4FBF71E3EEA08791 SWAP9 0x4B 0xAB 0xB4 PUSH10 0x35B859164736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "64:1334:5:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea2646970667358221220a1ed8605713bc2e223f34684d8c07e4fbf71e3eea08791984babb469035b859164736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xED DUP7 SDIV PUSH18 0x3BC2E223F34684D8C07E4FBF71E3EEA08791 SWAP9 0x4B 0xAB 0xB4 PUSH10 0x35B859164736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "64:1334:5:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 64,
									"end": 1398,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 1398,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a1ed8605713bc2e223f34684d8c07e4fbf71e3eea08791984babb469035b859164736f6c63430008170033",
									".code": [
										{
											"begin": 64,
											"end": 1398,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 64,
											"end": 1398,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 64,
											"end": 1398,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 64,
											"end": 1398,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 1398,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 64,
											"end": 1398,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"example-2/evm/src/contracts/HubSpokeMessages.sol",
								"example-2/evm/src/contracts/HubSpokeStructs.sol",
								"example-2/evm/src/contracts/lendingSpoke/Spoke.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol",
								"example-2/evm/src/interfaces/ITokenBridge.sol",
								"example-2/evm/src/interfaces/IWETH.sol",
								"example-2/evm/src/interfaces/IWormhole.sol",
								"example-2/evm/src/libraries/external/BytesLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"example-2/evm/src/contracts/HubSpokeStructs.sol\":\"HubSpokeStructs\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"example-2/evm/src/contracts/HubSpokeStructs.sol\":{\"keccak256\":\"0x24302b1f2d165f5b53d3bedd11aa1c367d30458bb93e0a34a79a939e753fd7dc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://11d40dd261195ea6fe19f0aa56d2aad5040cabd000041b250d3419985e9d6a9e\",\"dweb:/ipfs/Qmd59wjnwsyt2ave7vYQZQdPxk2AGHAvWVhQAUGAgxPMJ6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"example-2/evm/src/contracts/lendingSpoke/Spoke.sol": {
				"Spoke": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "chainId",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "wormhole",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenBridge",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "hubChainId",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "hubContractAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "assetAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "assetAmount",
									"type": "uint256"
								}
							],
							"name": "borrow",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "chainId",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "assetAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "assetAmount",
									"type": "uint256"
								}
							],
							"name": "depositCollateral",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositCollateralNative",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "assetAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "assetAmount",
									"type": "uint256"
								}
							],
							"name": "repay",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "repayNative",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenBridge",
							"outputs": [
								{
									"internalType": "contract ITokenBridge",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenBridgeAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "assetAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "assetAmount",
									"type": "uint256"
								}
							],
							"name": "withdrawCollateral",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"chainId": ": Chain ID of the chain that this Spoke is deployed on",
									"hubChainId": ": Chain ID of the Hub",
									"hubContractAddress": ": Contract address of the Hub contract (on the Hub chain)",
									"tokenBridge": ": Address of the TokenBridge contract on this Spoke chain",
									"wormhole": ": Address of the Wormhole contract on this Spoke chain"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":264:3862  contract Spoke is HubSpokeStructs, HubSpokeMessages, SpokeGetters, SpokeSetters, SpokeUtilities {... */\n  mstore(0x40, 0x80)\n    /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":843:1193  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol\":239:245  _state */\n  0x00\n    /* \"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol\":239:272  _state.provider.chainId = chainId */\n  dup1\n  sload\n  not(0xffff)\n  and\n  0xffff\n  dup8\n  and\n  or\n  swap1\n  sstore\n    /* \"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol\":350:356  _state */\n  0x00\n    /* \"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol\":350:401  _state.provider.wormhole = payable(wormholeAddress) */\n  dup1\n  sload\n  not(sub(shl(0xb0, 0x01), 0x010000))\n  and\n  0x010000\n  sub(shl(0xa0, 0x01), 0x01)\n  dup8\n  and\n  mul\n  or\n  swap1\n  sstore\n    /* \"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol\":485:512  _state.provider.tokenBridge */\n  0x01\n    /* \"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol\":485:533  _state.provider.tokenBridge = tokenBridgeAddress */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup6\n  and\n  or\n  swap1\n  sstore\n    /* \"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol\":607:624  _state.hubChainId */\n  0x02\n    /* \"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol\":607:637  _state.hubChainId = hubChainId */\n  dup1\n  sload\n  not(0xffff00)\n  and\n  0x0100\n  0xffff\n  dup6\n  and\n  mul\n  or\n  swap1\n  sstore\n    /* \"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol\":728:753  _state.hubContractAddress */\n  0x02\n    /* \"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol\":728:774  _state.hubContractAddress = hubContractAddress */\n  dup1\n  sload\n  not(sub(shl(0xb8, 0x01), 0x01000000))\n  and\n  0x01000000\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  and\n  mul\n  or\n  swap1\n  sstore\n    /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":843:1193  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":264:3862  contract Spoke is HubSpokeStructs, HubSpokeMessages, SpokeGetters, SpokeSetters, SpokeUtilities {... */\n  jump(tag_24)\n    /* \"#utility.yul\":14:177   */\ntag_22:\n    /* \"#utility.yul\":92:105   */\n  dup1\n  mload\n    /* \"#utility.yul\":145:151   */\n  0xffff\n    /* \"#utility.yul\":134:152   */\n  dup2\n  and\n    /* \"#utility.yul\":124:153   */\n  dup2\n  eq\n    /* \"#utility.yul\":114:171   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":167:168   */\n  0x00\n    /* \"#utility.yul\":164:165   */\n  dup1\n    /* \"#utility.yul\":157:169   */\n  revert\n    /* \"#utility.yul\":114:171   */\ntag_26:\n    /* \"#utility.yul\":14:177   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":182:359   */\ntag_23:\n    /* \"#utility.yul\":261:274   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":303:334   */\n  dup2\n  and\n    /* \"#utility.yul\":293:335   */\n  dup2\n  eq\n    /* \"#utility.yul\":283:353   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":349:350   */\n  0x00\n    /* \"#utility.yul\":346:347   */\n  dup1\n    /* \"#utility.yul\":339:351   */\n  revert\n    /* \"#utility.yul\":364:910   */\ntag_3:\n    /* \"#utility.yul\":468:474   */\n  0x00\n    /* \"#utility.yul\":476:482   */\n  dup1\n    /* \"#utility.yul\":484:490   */\n  0x00\n    /* \"#utility.yul\":492:498   */\n  dup1\n    /* \"#utility.yul\":500:506   */\n  0x00\n    /* \"#utility.yul\":553:556   */\n  0xa0\n    /* \"#utility.yul\":541:550   */\n  dup7\n    /* \"#utility.yul\":532:539   */\n  dup9\n    /* \"#utility.yul\":528:551   */\n  sub\n    /* \"#utility.yul\":524:557   */\n  slt\n    /* \"#utility.yul\":521:574   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":570:571   */\n  0x00\n    /* \"#utility.yul\":567:568   */\n  dup1\n    /* \"#utility.yul\":560:572   */\n  revert\n    /* \"#utility.yul\":521:574   */\ntag_30:\n    /* \"#utility.yul\":593:632   */\n  tag_31\n    /* \"#utility.yul\":622:631   */\n  dup7\n    /* \"#utility.yul\":593:632   */\n  tag_22\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":583:632   */\n  swap5\n  pop\n    /* \"#utility.yul\":651:700   */\n  tag_32\n    /* \"#utility.yul\":696:698   */\n  0x20\n    /* \"#utility.yul\":685:694   */\n  dup8\n    /* \"#utility.yul\":681:699   */\n  add\n    /* \"#utility.yul\":651:700   */\n  tag_23\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":641:700   */\n  swap4\n  pop\n    /* \"#utility.yul\":719:768   */\n  tag_33\n    /* \"#utility.yul\":764:766   */\n  0x40\n    /* \"#utility.yul\":753:762   */\n  dup8\n    /* \"#utility.yul\":749:767   */\n  add\n    /* \"#utility.yul\":719:768   */\n  tag_23\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":709:768   */\n  swap3\n  pop\n    /* \"#utility.yul\":787:835   */\n  tag_34\n    /* \"#utility.yul\":831:833   */\n  0x60\n    /* \"#utility.yul\":820:829   */\n  dup8\n    /* \"#utility.yul\":816:834   */\n  add\n    /* \"#utility.yul\":787:835   */\n  tag_22\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":777:835   */\n  swap2\n  pop\n    /* \"#utility.yul\":854:904   */\n  tag_35\n    /* \"#utility.yul\":899:902   */\n  0x80\n    /* \"#utility.yul\":888:897   */\n  dup8\n    /* \"#utility.yul\":884:903   */\n  add\n    /* \"#utility.yul\":854:904   */\n  tag_23\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":844:904   */\n  swap1\n  pop\n    /* \"#utility.yul\":364:910   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\ntag_24:\n    /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":264:3862  contract Spoke is HubSpokeStructs, HubSpokeMessages, SpokeGetters, SpokeSetters, SpokeUtilities {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":264:3862  contract Spoke is HubSpokeStructs, HubSpokeMessages, SpokeGetters, SpokeSetters, SpokeUtilities {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9a8a0592\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x9a8a0592\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa5d5db0c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xc6328a46\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe1884919\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xedba8209\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x470257\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x22867d78\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x350c35e9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4b8a3529\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1927:2129  function depositCollateralNative() public payable returns (uint64 sequence) {... */\n    tag_2:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":188:206   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":176:207   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":158:208   */\n      dup2\n      mstore\n        /* \"#utility.yul\":146:148   */\n      0x20\n        /* \"#utility.yul\":131:149   */\n      add\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1927:2129  function depositCollateralNative() public payable returns (uint64 sequence) {... */\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1753:1921  function repay(address assetAddress, uint256 assetAmount) public returns (uint64 sequence) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_12\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1387:1571  function withdrawCollateral(address assetAddress, uint256 assetAmount) public returns (uint64 sequence) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_12\n      tag_24\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_24:\n      tag_25\n      jump\t// in\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1577:1747  function borrow(address assetAddress, uint256 assetAmount) public returns (uint64 sequence) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_12\n      tag_29\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":269:364  function chainId() public view returns (uint16) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":309:315  uint16 */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":334:357  _state.provider.chainId */\n      sload\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":269:364  function chainId() public view returns (uint16) {... */\n      mload(0x40)\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":334:357  _state.provider.chainId */\n      0xffff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":819:857   */\n      dup2\n      mstore\n        /* \"#utility.yul\":807:809   */\n      0x20\n        /* \"#utility.yul\":792:810   */\n      add\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":269:364  function chainId() public view returns (uint16) {... */\n      tag_14\n        /* \"#utility.yul\":675:863   */\n      jump\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1199:1381  function depositCollateral(address assetAddress, uint256 assetAmount) public returns (uint64 sequence) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_12\n      tag_39\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":489:621  function tokenBridge() public view returns (ITokenBridge) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":585:612  _state.provider.tokenBridge */\n      sload(0x01)\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":489:621  function tokenBridge() public view returns (ITokenBridge) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":585:612  _state.provider.tokenBridge */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1035:1086   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1023:1025   */\n      0x20\n        /* \"#utility.yul\":1008:1026   */\n      add\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":489:621  function tokenBridge() public view returns (ITokenBridge) {... */\n      tag_14\n        /* \"#utility.yul\":868:1092   */\n      jump\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2135:2323  function repayNative() public payable returns (uint64 sequence) {... */\n    tag_10:\n      tag_12\n      tag_53\n      jump\t// in\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1927:2129  function depositCollateralNative() public payable returns (uint64 sequence) {... */\n    tag_13:\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1986:2001  uint64 sequence */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2024:2122  doAction(Action.DepositNative, address(tokenBridge().WETH()), msg.value - wormhole().messageFee()) */\n      tag_56\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2033:2053  Action.DepositNative */\n      0x04\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2063:2076  tokenBridge() */\n      tag_57\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":585:612  _state.provider.tokenBridge */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      swap1\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":489:621  function tokenBridge() public view returns (ITokenBridge) {... */\n      jump\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2063:2076  tokenBridge() */\n    tag_57:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2063:2081  tokenBridge().WETH */\n      and\n      0xad5c4648\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2063:2083  tokenBridge().WETH() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":413:422  IWormhole */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":451:475  _state.provider.wormhole */\n      sload\n      0x010000\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2098:2119  wormhole().messageFee */\n      and\n      0x1a90a219\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2098:2121  wormhole().messageFee() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2086:2121  msg.value - wormhole().messageFee() */\n      tag_68\n      swap1\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2086:2095  msg.value */\n      callvalue\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2086:2121  msg.value - wormhole().messageFee() */\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2024:2032  doAction */\n      tag_70\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2024:2122  doAction(Action.DepositNative, address(tokenBridge().WETH()), msg.value - wormhole().messageFee()) */\n      jump\t// in\n    tag_56:\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2013:2122  sequence = doAction(Action.DepositNative, address(tokenBridge().WETH()), msg.value - wormhole().messageFee()) */\n      swap1\n      pop\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1927:2129  function depositCollateralNative() public payable returns (uint64 sequence) {... */\n      swap1\n      jump\t// out\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1753:1921  function repay(address assetAddress, uint256 assetAmount) public returns (uint64 sequence) {... */\n    tag_20:\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1827:1842  uint64 sequence */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1865:1914  doAction(Action.Repay, assetAddress, assetAmount) */\n      tag_72\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1874:1886  Action.Repay */\n      0x03\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1888:1900  assetAddress */\n      dup5\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1902:1913  assetAmount */\n      dup5\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1865:1873  doAction */\n      tag_70\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1865:1914  doAction(Action.Repay, assetAddress, assetAmount) */\n      jump\t// in\n    tag_72:\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1854:1914  sequence = doAction(Action.Repay, assetAddress, assetAmount) */\n      swap4\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1753:1921  function repay(address assetAddress, uint256 assetAmount) public returns (uint64 sequence) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1387:1571  function withdrawCollateral(address assetAddress, uint256 assetAmount) public returns (uint64 sequence) {... */\n    tag_25:\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1474:1489  uint64 sequence */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1512:1564  doAction(Action.Withdraw, assetAddress, assetAmount) */\n      tag_72\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1521:1536  Action.Withdraw */\n      0x02\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1538:1550  assetAddress */\n      dup5\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1552:1563  assetAmount */\n      dup5\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1512:1520  doAction */\n      tag_70\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1512:1564  doAction(Action.Withdraw, assetAddress, assetAmount) */\n      jump\t// in\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1577:1747  function borrow(address assetAddress, uint256 assetAmount) public returns (uint64 sequence) {... */\n    tag_30:\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1652:1667  uint64 sequence */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1690:1740  doAction(Action.Borrow, assetAddress, assetAmount) */\n      tag_72\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1699:1712  Action.Borrow */\n      0x01\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1714:1726  assetAddress */\n      dup5\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1728:1739  assetAmount */\n      dup5\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1690:1698  doAction */\n      tag_70\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1690:1740  doAction(Action.Borrow, assetAddress, assetAmount) */\n      jump\t// in\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1199:1381  function depositCollateral(address assetAddress, uint256 assetAmount) public returns (uint64 sequence) {... */\n    tag_40:\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1285:1300  uint64 sequence */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1323:1374  doAction(Action.Deposit, assetAddress, assetAmount) */\n      tag_72\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1332:1346  Action.Deposit */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1348:1360  assetAddress */\n      dup5\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1362:1373  assetAmount */\n      dup5\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1323:1331  doAction */\n      tag_70\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":1323:1374  doAction(Action.Deposit, assetAddress, assetAmount) */\n      jump\t// in\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2135:2323  function repayNative() public payable returns (uint64 sequence) {... */\n    tag_53:\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2182:2197  uint64 sequence */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2220:2316  doAction(Action.RepayNative, address(tokenBridge().WETH()), msg.value - wormhole().messageFee()) */\n      tag_56\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2229:2247  Action.RepayNative */\n      0x05\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2257:2270  tokenBridge() */\n      tag_57\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":585:612  _state.provider.tokenBridge */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      swap1\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":489:621  function tokenBridge() public view returns (ITokenBridge) {... */\n      jump\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2735:3860  function doAction(Action action, address assetAddress, uint256 assetAmount) internal returns (uint64 sequence) {... */\n    tag_70:\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2829:2844  uint64 sequence */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2856:2920  requireAssetAmountValidForTokenBridge(assetAddress, assetAmount) */\n      tag_95\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2894:2906  assetAddress */\n      dup4\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2908:2919  assetAmount */\n      dup4\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2856:2893  requireAssetAmountValidForTokenBridge */\n      tag_96\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2856:2920  requireAssetAmountValidForTokenBridge(assetAddress, assetAmount) */\n      jump\t// in\n    tag_95:\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2949:2955  action */\n      dup4\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2979:2999  Action.DepositNative */\n      0x04\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2969:2975  action */\n      dup6\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2969:2999  action == Action.DepositNative */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_101\n      jumpi\n      tag_101\n      tag_99\n      jump\t// in\n    tag_101:\n      sub\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2965:3052  if (action == Action.DepositNative) {... */\n      tag_102\n      jumpi\n      pop\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3027:3041  Action.Deposit */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2965:3052  if (action == Action.DepositNative) {... */\n    tag_102:\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3075:3093  Action.RepayNative */\n      0x05\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3065:3071  action */\n      dup6\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3065:3093  action == Action.RepayNative */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_106\n      jumpi\n      tag_106\n      tag_99\n      jump\t// in\n    tag_106:\n      sub\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3061:3144  if (action == Action.RepayNative) {... */\n      tag_107\n      jumpi\n      pop\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3121:3133  Action.Repay */\n      0x03\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3061:3144  if (action == Action.RepayNative) {... */\n    tag_107:\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3154:3182  ActionPayload memory payload */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3197:3305  ActionPayload({action: hubAction, sender: msg.sender, assetAddress: assetAddress, assetAmount: assetAmount}) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3220:3229  hubAction */\n      dup4\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3197:3305  ActionPayload({action: hubAction, sender: msg.sender, assetAddress: assetAddress, assetAmount: assetAmount}) */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_109\n      jumpi\n      tag_109\n      tag_99\n      jump\t// in\n    tag_109:\n      dup2\n      mstore\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3239:3249  msg.sender */\n      caller\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3197:3305  ActionPayload({action: hubAction, sender: msg.sender, assetAddress: assetAddress, assetAmount: assetAmount}) */\n      0x20\n      dup3\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      and\n      0x40\n      dup3\n      add\n      mstore\n      0x60\n      add\n      dup6\n      swap1\n      mstore\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3154:3305  ActionPayload memory payload =... */\n      swap1\n      pop\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3342:3370  encodeActionPayload(payload) */\n      tag_110\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3154:3305  ActionPayload memory payload =... */\n      dup3\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3342:3361  encodeActionPayload */\n      tag_111\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3342:3370  encodeActionPayload(payload) */\n      jump\t// in\n    tag_110:\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3316:3370  bytes memory serialized = encodeActionPayload(payload) */\n      swap1\n      pop\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3395:3409  Action.Deposit */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3385:3391  action */\n      dup8\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3385:3409  action == Action.Deposit */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_115\n      jumpi\n      tag_115\n      tag_99\n      jump\t// in\n    tag_115:\n      eq\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3385:3435  action == Action.Deposit || action == Action.Repay */\n      dup1\n      tag_116\n      jumpi\n      pop\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3423:3435  Action.Repay */\n      0x03\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3413:3419  action */\n      dup8\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3413:3435  action == Action.Repay */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_120\n      jumpi\n      tag_120\n      tag_99\n      jump\t// in\n    tag_120:\n      eq\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3385:3435  action == Action.Deposit || action == Action.Repay */\n    tag_116:\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3381:3854  if (action == Action.Deposit || action == Action.Repay) {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3462:3523  sendTokenBridgeMessage(assetAddress, assetAmount, serialized) */\n      tag_122\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3485:3497  assetAddress */\n      dup7\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3499:3510  assetAmount */\n      dup7\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3512:3522  serialized */\n      dup4\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3462:3484  sendTokenBridgeMessage */\n      tag_123\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3462:3523  sendTokenBridgeMessage(assetAddress, assetAmount, serialized) */\n      jump\t// in\n    tag_122:\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3451:3523  sequence = sendTokenBridgeMessage(assetAddress, assetAmount, serialized) */\n      swap4\n      pop\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3381:3854  if (action == Action.Deposit || action == Action.Repay) {... */\n      jump(tag_147)\n    tag_121:\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3554:3569  Action.Withdraw */\n      0x02\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3544:3550  action */\n      dup8\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3544:3569  action == Action.Withdraw */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_128\n      jumpi\n      tag_128\n      tag_99\n      jump\t// in\n    tag_128:\n      eq\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3544:3596  action == Action.Withdraw || action == Action.Borrow */\n      dup1\n      tag_129\n      jumpi\n      pop\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3583:3596  Action.Borrow */\n      0x01\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3573:3579  action */\n      dup8\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3573:3596  action == Action.Borrow */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_133\n      jumpi\n      tag_133\n      tag_99\n      jump\t// in\n    tag_133:\n      eq\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3544:3596  action == Action.Withdraw || action == Action.Borrow */\n    tag_129:\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3540:3854  if (action == Action.Withdraw || action == Action.Borrow) {... */\n      iszero\n      tag_134\n      jumpi\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3623:3654  sendWormholeMessage(serialized) */\n      tag_122\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3643:3653  serialized */\n      dup2\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3623:3642  sendWormholeMessage */\n      tag_136\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3623:3654  sendWormholeMessage(serialized) */\n      jump\t// in\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3540:3854  if (action == Action.Withdraw || action == Action.Borrow) {... */\n    tag_134:\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3685:3705  Action.DepositNative */\n      0x04\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3675:3681  action */\n      dup8\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3675:3705  action == Action.DepositNative */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_141\n      jumpi\n      tag_141\n      tag_99\n      jump\t// in\n    tag_141:\n      eq\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3675:3737  action == Action.DepositNative || action == Action.RepayNative */\n      dup1\n      tag_142\n      jumpi\n      pop\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3719:3737  Action.RepayNative */\n      0x05\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3709:3715  action */\n      dup8\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3709:3737  action == Action.RepayNative */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_146\n      jumpi\n      tag_146\n      tag_99\n      jump\t// in\n    tag_146:\n      eq\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3675:3737  action == Action.DepositNative || action == Action.RepayNative */\n    tag_142:\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3671:3854  if (action == Action.DepositNative || action == Action.RepayNative) {... */\n      iszero\n      tag_147\n      jumpi\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":413:422  IWormhole */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":451:475  _state.provider.wormhole */\n      sload\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3764:3843  sendTokenBridgeMessageNative(assetAmount + wormhole().messageFee(), serialized) */\n      tag_148\n      swap1\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":451:475  _state.provider.wormhole */\n      0x010000\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3807:3828  wormhole().messageFee */\n      and\n      0x1a90a219\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3807:3830  wormhole().messageFee() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_151\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_152\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_152:\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3793:3830  assetAmount + wormhole().messageFee() */\n      tag_153\n      swap1\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3793:3804  assetAmount */\n      dup8\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3793:3830  assetAmount + wormhole().messageFee() */\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3832:3842  serialized */\n      dup3\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3764:3792  sendTokenBridgeMessageNative */\n      tag_155\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3764:3843  sendTokenBridgeMessageNative(assetAmount + wormhole().messageFee(), serialized) */\n      jump\t// in\n    tag_148:\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3753:3843  sequence = sendTokenBridgeMessageNative(assetAmount + wormhole().messageFee(), serialized) */\n      swap4\n      pop\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":3671:3854  if (action == Action.DepositNative || action == Action.RepayNative) {... */\n    tag_147:\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2846:3860  {... */\n      pop\n      pop\n      pop\n        /* \"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":2735:3860  function doAction(Action action, address assetAddress, uint256 assetAmount) internal returns (uint64 sequence) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1497:1940  function requireAssetAmountValidForTokenBridge(address assetAddress, uint256 assetAmount) internal view {... */\n    tag_96:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1670:1707  abi.encodeWithSignature(\"decimals()\") */\n      0x40\n      dup1\n      mload\n      0x04\n      dup2\n      mstore\n      0x24\n      dup2\n      add\n      dup3\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x313ce567)\n      or\n      swap1\n      mstore\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1646:1708  assetAddress.staticcall(abi.encodeWithSignature(\"decimals()\")) */\n      swap1\n      mload\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1614:1642  bytes memory queriedDecimals */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1646:1669  assetAddress.staticcall */\n      dup6\n      and\n      swap2\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1646:1708  assetAddress.staticcall(abi.encodeWithSignature(\"decimals()\")) */\n      tag_157\n      swap2\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1670:1707  abi.encodeWithSignature(\"decimals()\") */\n      swap1\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1646:1708  assetAddress.staticcall(abi.encodeWithSignature(\"decimals()\")) */\n      tag_158\n      jump\t// in\n    tag_157:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      staticcall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_161\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_160)\n    tag_161:\n      0x60\n      swap2\n      pop\n    tag_160:\n      pop\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1611:1708  (, bytes memory queriedDecimals) = assetAddress.staticcall(abi.encodeWithSignature(\"decimals()\")) */\n      swap2\n      pop\n      pop\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1718:1732  uint8 decimals */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1746:1761  queriedDecimals */\n      dup2\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1735:1771  abi.decode(queriedDecimals, (uint8)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1718:1771  uint8 decimals = abi.decode(queriedDecimals, (uint8)) */\n      swap1\n      pop\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1873:1884  assetAmount */\n      dup3\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1802:1869  deNormalizeAmount(normalizeAmount(assetAmount, decimals), decimals) */\n      tag_164\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1820:1858  normalizeAmount(assetAmount, decimals) */\n      tag_165\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1836:1847  assetAmount */\n      dup6\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1849:1857  decimals */\n      dup5\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1820:1835  normalizeAmount */\n      tag_166\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1820:1858  normalizeAmount(assetAmount, decimals) */\n      jump\t// in\n    tag_165:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1860:1868  decimals */\n      dup4\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1802:1819  deNormalizeAmount */\n      tag_167\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1802:1869  deNormalizeAmount(normalizeAmount(assetAmount, decimals), decimals) */\n      jump\t// in\n    tag_164:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1802:1884  deNormalizeAmount(normalizeAmount(assetAmount, decimals), decimals) == assetAmount */\n      eq\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1781:1933  require(... */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3318:3320   */\n      0x20\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1781:1933  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3300:3321   */\n      mstore\n        /* \"#utility.yul\":3357:3359   */\n      0x17\n        /* \"#utility.yul\":3337:3355   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3330:3360   */\n      mstore\n        /* \"#utility.yul\":3396:3421   */\n      0x546f6f206d616e7920646563696d616c20706c61636573000000000000000000\n        /* \"#utility.yul\":3376:3394   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3369:3422   */\n      mstore\n        /* \"#utility.yul\":3439:3457   */\n      0x64\n      add\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1781:1933  require(... */\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1601:1940  {... */\n      pop\n      pop\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1497:1940  function requireAssetAmountValidForTokenBridge(address assetAddress, uint256 assetAmount) internal view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"example-2/evm/src/contracts/HubSpokeMessages.sol\":225:443  function encodeActionPayload(ActionPayload memory payload) internal pure returns (bytes memory) {... */\n    tag_111:\n        /* \"example-2/evm/src/contracts/HubSpokeMessages.sol\":361:375  payload.action */\n      dup1\n      mload\n        /* \"example-2/evm/src/contracts/HubSpokeMessages.sol\":307:319  bytes memory */\n      0x60\n      swap1\n        /* \"example-2/evm/src/contracts/HubSpokeMessages.sol\":355:376  uint8(payload.action) */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_173\n      jumpi\n      tag_173\n      tag_99\n      jump\t// in\n    tag_173:\n        /* \"example-2/evm/src/contracts/HubSpokeMessages.sol\":378:385  payload */\n      dup3\n        /* \"example-2/evm/src/contracts/HubSpokeMessages.sol\":378:392  payload.sender */\n      0x20\n      add\n      mload\n        /* \"example-2/evm/src/contracts/HubSpokeMessages.sol\":394:401  payload */\n      dup4\n        /* \"example-2/evm/src/contracts/HubSpokeMessages.sol\":394:414  payload.assetAddress */\n      0x40\n      add\n      mload\n        /* \"example-2/evm/src/contracts/HubSpokeMessages.sol\":416:423  payload */\n      dup5\n        /* \"example-2/evm/src/contracts/HubSpokeMessages.sol\":416:435  payload.assetAmount */\n      0x60\n      add\n      mload\n        /* \"example-2/evm/src/contracts/HubSpokeMessages.sol\":338:436  abi.encodePacked(uint8(payload.action), payload.sender, payload.assetAddress, payload.assetAmount) */\n      add(0x20, mload(0x40))\n      tag_174\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":3715:3718   */\n      0xf8\n        /* \"#utility.yul\":3693:3709   */\n      swap5\n      swap1\n      swap5\n      shl\n      not(sub(shl(0xf8, 0x01), 0x01))\n        /* \"#utility.yul\":3689:3725   */\n      and\n        /* \"#utility.yul\":3677:3726   */\n      dup5\n      mstore\n        /* \"#utility.yul\":3813:3815   */\n      0x60\n        /* \"#utility.yul\":3809:3824   */\n      swap3\n      dup4\n      shl\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":3805:3829   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3801:3802   */\n      0x01\n        /* \"#utility.yul\":3792:3803   */\n      dup7\n      add\n        /* \"#utility.yul\":3785:3830   */\n      mstore\n        /* \"#utility.yul\":3864:3879   */\n      swap2\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":3860:3884   */\n      and\n        /* \"#utility.yul\":3855:3857   */\n      0x15\n        /* \"#utility.yul\":3846:3858   */\n      dup4\n      add\n        /* \"#utility.yul\":3839:3885   */\n      mstore\n        /* \"#utility.yul\":3910:3912   */\n      0x29\n        /* \"#utility.yul\":3901:3913   */\n      dup3\n      add\n        /* \"#utility.yul\":3894:3922   */\n      mstore\n        /* \"#utility.yul\":3947:3949   */\n      0x49\n        /* \"#utility.yul\":3938:3950   */\n      add\n      swap1\n        /* \"#utility.yul\":3468:3956   */\n      jump\n        /* \"example-2/evm/src/contracts/HubSpokeMessages.sol\":338:436  abi.encodePacked(uint8(payload.action), payload.sender, payload.assetAddress, payload.assetAmount) */\n    tag_174:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"example-2/evm/src/contracts/HubSpokeMessages.sol\":331:436  return abi.encodePacked(uint8(payload.action), payload.sender, payload.assetAddress, payload.assetAmount) */\n      swap1\n      pop\n        /* \"example-2/evm/src/contracts/HubSpokeMessages.sol\":225:443  function encodeActionPayload(ActionPayload memory payload) internal pure returns (bytes memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":659:1191  function sendTokenBridgeMessage(address assetAddress, uint256 assetAmount, bytes memory payload)... */\n    tag_123:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":790:805  uint64 sequence */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":821:909  SafeERC20.safeTransferFrom(IERC20(assetAddress), msg.sender, address(this), assetAmount) */\n      tag_177\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":855:867  assetAddress */\n      dup5\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":870:880  msg.sender */\n      caller\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":890:894  this */\n      address\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":897:908  assetAmount */\n      dup7\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":821:847  SafeERC20.safeTransferFrom */\n      tag_178\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":821:909  SafeERC20.safeTransferFrom(IERC20(assetAddress), msg.sender, address(this), assetAmount) */\n      jump\t// in\n    tag_177:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":920:999  SafeERC20.safeTransfer(IERC20(assetAddress), tokenBridgeAddress(), assetAmount) */\n      tag_179\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":950:962  assetAddress */\n      dup5\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":965:985  tokenBridgeAddress() */\n      tag_180\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":585:612  _state.provider.tokenBridge */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      swap1\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":489:621  function tokenBridge() public view returns (ITokenBridge) {... */\n      jump\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":965:985  tokenBridgeAddress() */\n    tag_180:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":987:998  assetAmount */\n      dup6\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":920:942  SafeERC20.safeTransfer */\n      tag_181\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":920:999  SafeERC20.safeTransfer(IERC20(assetAddress), tokenBridgeAddress(), assetAmount) */\n      jump\t// in\n    tag_179:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":585:612  _state.provider.tokenBridge */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1021:1060  tokenBridge().transferTokensWithPayload */\n      and\n      0xc5a5ebda\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1074:1086  assetAddress */\n      dup6\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1088:1099  assetAmount */\n      dup6\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1101:1113  hubChainId() */\n      tag_183\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":925:942  _state.hubChainId */\n      sload(0x02)\n      0xffff\n      0x0100\n      swap1\n      swap2\n      div\n      and\n      swap1\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":855:949  function hubChainId() internal view returns (uint16) {... */\n      jump\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1101:1113  hubChainId() */\n    tag_183:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":1034:1059  _state.hubContractAddress */\n      sload(0x02)\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1021:1184  tokenBridge().transferTokensWithPayload(... */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup8\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      tag_187\n      swap5\n      swap4\n      swap3\n      swap2\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":1034:1059  _state.hubContractAddress */\n      0x01000000\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1115:1162  bytes32(uint256(uint160(hubContractAddress()))) */\n      0x00\n      swap1\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1167:1174  payload */\n      dup11\n      swap1\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1021:1184  tokenBridge().transferTokensWithPayload(... */\n      0x04\n      add\n      tag_188\n      jump\t// in\n    tag_187:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_190\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_191\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1010:1184  sequence = tokenBridge().transferTokensWithPayload(... */\n      swap5\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":659:1191  function sendTokenBridgeMessage(address assetAddress, uint256 assetAmount, bytes memory payload)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":427:653  function sendWormholeMessage(bytes memory payload) internal returns (uint64 sequence) {... */\n    tag_136:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":496:511  uint64 sequence */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":451:475  _state.provider.wormhole */\n      dup1\n      sload\n      0x010000\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":534:559  wormhole().publishMessage */\n      and\n      0xb19a437e\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":573:574  0 */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":597:604  payload */\n      dup5\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":618:636  consistencyLevel() */\n      tag_195\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":819:842  _state.consistencyLevel */\n      and(0xff, sload(0x02))\n      swap1\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":744:849  function consistencyLevel() internal view returns (uint8) {... */\n      jump\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":618:636  consistencyLevel() */\n    tag_195:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":534:646  wormhole().publishMessage(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_200\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_200:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_201\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_201:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":523:646  sequence = wormhole().publishMessage(... */\n      swap3\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":427:653  function sendWormholeMessage(bytes memory payload) internal returns (uint64 sequence) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1197:1491  function sendTokenBridgeMessageNative(uint256 amount, bytes memory payload) internal returns (uint64 sequence) {... */\n    tag_155:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1291:1306  uint64 sequence */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1329:1342  tokenBridge() */\n      tag_203\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":585:612  _state.provider.tokenBridge */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      swap1\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":489:621  function tokenBridge() public view returns (ITokenBridge) {... */\n      jump\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1329:1342  tokenBridge() */\n    tag_203:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1329:1372  tokenBridge().wrapAndTransferETHWithPayload */\n      and\n      0xbee9cdfc\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1380:1386  amount */\n      dup5\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1401:1413  hubChainId() */\n      tag_204\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":925:942  _state.hubChainId */\n      sload(0x02)\n      0xffff\n      0x0100\n      swap1\n      swap2\n      div\n      and\n      swap1\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":855:949  function hubChainId() internal view returns (uint16) {... */\n      jump\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1401:1413  hubChainId() */\n    tag_204:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":1034:1059  _state.hubContractAddress */\n      sload(0x02)\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1329:1484  tokenBridge().wrapAndTransferETHWithPayload{value: amount}(... */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup7\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      tag_206\n      swap3\n      swap2\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":1034:1059  _state.hubContractAddress */\n      0x01000000\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1415:1462  bytes32(uint256(uint160(hubContractAddress()))) */\n      0x00\n      swap1\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1467:1474  payload */\n      dup10\n      swap1\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1329:1484  tokenBridge().wrapAndTransferETHWithPayload{value: amount}(... */\n      0x04\n      add\n      tag_207\n      jump\t// in\n    tag_206:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_209\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_209:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1946:2147  function normalizeAmount(uint256 amount, uint8 decimals) internal pure returns (uint256) {... */\n    tag_166:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2026:2033  uint256 */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2060:2061  8 */\n      0x08\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2049:2057  decimals */\n      dup3\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2049:2061  decimals > 8 */\n      0xff\n      and\n      gt\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2045:2118  if (decimals > 8) {... */\n      iszero\n      tag_212\n      jumpi\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2094:2106  decimals - 8 */\n      tag_213\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2105:2106  8 */\n      0x08\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2094:2102  decimals */\n      dup4\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2094:2106  decimals - 8 */\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2087:2107  10 ** (decimals - 8) */\n      tag_215\n      swap1\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2087:2089  10 */\n      0x0a\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2087:2107  10 ** (decimals - 8) */\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2077:2107  amount /= 10 ** (decimals - 8) */\n      tag_217\n      swap1\n      dup5\n      tag_218\n      jump\t// in\n    tag_217:\n      swap3\n      pop\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2045:2118  if (decimals > 8) {... */\n    tag_212:\n      pop\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2134:2140  amount */\n      swap1\n      swap2\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":1946:2147  function normalizeAmount(uint256 amount, uint8 decimals) internal pure returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2153:2356  function deNormalizeAmount(uint256 amount, uint8 decimals) internal pure returns (uint256) {... */\n    tag_167:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2235:2242  uint256 */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2269:2270  8 */\n      0x08\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2258:2266  decimals */\n      dup3\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2258:2270  decimals > 8 */\n      0xff\n      and\n      gt\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2254:2327  if (decimals > 8) {... */\n      iszero\n      tag_212\n      jumpi\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2303:2315  decimals - 8 */\n      tag_221\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2314:2315  8 */\n      0x08\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2303:2311  decimals */\n      dup4\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2303:2315  decimals - 8 */\n      tag_214\n      jump\t// in\n    tag_221:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2296:2316  10 ** (decimals - 8) */\n      tag_222\n      swap1\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2296:2298  10 */\n      0x0a\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2296:2316  10 ** (decimals - 8) */\n      tag_216\n      jump\t// in\n    tag_222:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":2286:2316  amount *= 10 ** (decimals - 8) */\n      tag_217\n      swap1\n      dup5\n      tag_224\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8224:8239   */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":8206:8240   */\n      mstore\n        /* \"#utility.yul\":8276:8291   */\n      dup4\n      dup2\n      and\n        /* \"#utility.yul\":8256:8274   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":8249:8292   */\n      mstore\n        /* \"#utility.yul\":8308:8326   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8301:8335   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_168\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      dup3\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":8141:8159   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n    tag_227:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8538:8570   */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":8520:8571   */\n      mstore\n        /* \"#utility.yul\":8587:8605   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8580:8614   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_231\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      dup3\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":8493:8511   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      tag_227\n        /* \"#utility.yul\":8346:8620   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_238\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_240\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_241\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1053:1085   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1035:1086   */\n      mstore\n        /* \"#utility.yul\":1008:1026   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      tag_169\n        /* \"#utility.yul\":868:1092   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_72\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_251\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_251:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_254\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_253)\n    tag_254:\n      0x60\n      swap2\n      pop\n    tag_253:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_255\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_256\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_256:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_258\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_259\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_260\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_72)\n    tag_258:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_262\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_262:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1053:1085   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1035:1086   */\n      mstore\n        /* \"#utility.yul\":1008:1026   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      tag_169\n        /* \"#utility.yul\":868:1092   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_263:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      jump(tag_72)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":219:350   */\n    tag_268:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":294:325   */\n      dup2\n      and\n        /* \"#utility.yul\":284:326   */\n      dup2\n      eq\n        /* \"#utility.yul\":274:344   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":340:341   */\n      0x00\n        /* \"#utility.yul\":337:338   */\n      dup1\n        /* \"#utility.yul\":330:342   */\n      revert\n        /* \"#utility.yul\":355:670   */\n    tag_19:\n        /* \"#utility.yul\":423:429   */\n      0x00\n        /* \"#utility.yul\":431:437   */\n      dup1\n        /* \"#utility.yul\":484:486   */\n      0x40\n        /* \"#utility.yul\":472:481   */\n      dup4\n        /* \"#utility.yul\":463:470   */\n      dup6\n        /* \"#utility.yul\":459:482   */\n      sub\n        /* \"#utility.yul\":455:487   */\n      slt\n        /* \"#utility.yul\":452:504   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":500:501   */\n      0x00\n        /* \"#utility.yul\":497:498   */\n      dup1\n        /* \"#utility.yul\":490:502   */\n      revert\n        /* \"#utility.yul\":452:504   */\n    tag_279:\n        /* \"#utility.yul\":539:548   */\n      dup3\n        /* \"#utility.yul\":526:549   */\n      calldataload\n        /* \"#utility.yul\":558:589   */\n      tag_280\n        /* \"#utility.yul\":583:588   */\n      dup2\n        /* \"#utility.yul\":558:589   */\n      tag_268\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":608:613   */\n      swap5\n        /* \"#utility.yul\":660:662   */\n      0x20\n        /* \"#utility.yul\":645:663   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":632:664   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":355:670   */\n      jump\t// out\n        /* \"#utility.yul\":1305:1570   */\n    tag_61:\n        /* \"#utility.yul\":1389:1395   */\n      0x00\n        /* \"#utility.yul\":1442:1444   */\n      0x20\n        /* \"#utility.yul\":1430:1439   */\n      dup3\n        /* \"#utility.yul\":1421:1428   */\n      dup5\n        /* \"#utility.yul\":1417:1440   */\n      sub\n        /* \"#utility.yul\":1413:1445   */\n      slt\n        /* \"#utility.yul\":1410:1462   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":1458:1459   */\n      0x00\n        /* \"#utility.yul\":1455:1456   */\n      dup1\n        /* \"#utility.yul\":1448:1460   */\n      revert\n        /* \"#utility.yul\":1410:1462   */\n    tag_285:\n        /* \"#utility.yul\":1490:1499   */\n      dup2\n        /* \"#utility.yul\":1484:1500   */\n      mload\n        /* \"#utility.yul\":1509:1540   */\n      tag_72\n        /* \"#utility.yul\":1534:1539   */\n      dup2\n        /* \"#utility.yul\":1509:1540   */\n      tag_268\n      jump\t// in\n        /* \"#utility.yul\":1575:1759   */\n    tag_67:\n        /* \"#utility.yul\":1645:1651   */\n      0x00\n        /* \"#utility.yul\":1698:1700   */\n      0x20\n        /* \"#utility.yul\":1686:1695   */\n      dup3\n        /* \"#utility.yul\":1677:1684   */\n      dup5\n        /* \"#utility.yul\":1673:1696   */\n      sub\n        /* \"#utility.yul\":1669:1701   */\n      slt\n        /* \"#utility.yul\":1666:1718   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":1714:1715   */\n      0x00\n        /* \"#utility.yul\":1711:1712   */\n      dup1\n        /* \"#utility.yul\":1704:1716   */\n      revert\n        /* \"#utility.yul\":1666:1718   */\n    tag_288:\n      pop\n        /* \"#utility.yul\":1737:1753   */\n      mload\n      swap2\n        /* \"#utility.yul\":1575:1759   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1764:1891   */\n    tag_269:\n        /* \"#utility.yul\":1825:1835   */\n      0x4e487b71\n        /* \"#utility.yul\":1820:1823   */\n      0xe0\n        /* \"#utility.yul\":1816:1836   */\n      shl\n        /* \"#utility.yul\":1813:1814   */\n      0x00\n        /* \"#utility.yul\":1806:1837   */\n      mstore\n        /* \"#utility.yul\":1856:1860   */\n      0x11\n        /* \"#utility.yul\":1853:1854   */\n      0x04\n        /* \"#utility.yul\":1846:1861   */\n      mstore\n        /* \"#utility.yul\":1880:1884   */\n      0x24\n        /* \"#utility.yul\":1877:1878   */\n      0x00\n        /* \"#utility.yul\":1870:1885   */\n      revert\n        /* \"#utility.yul\":1896:2024   */\n    tag_69:\n        /* \"#utility.yul\":1963:1972   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":1984:1995   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":1981:2018   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":1998:2016   */\n      tag_201\n      tag_269\n      jump\t// in\n        /* \"#utility.yul\":2029:2156   */\n    tag_99:\n        /* \"#utility.yul\":2090:2100   */\n      0x4e487b71\n        /* \"#utility.yul\":2085:2088   */\n      0xe0\n        /* \"#utility.yul\":2081:2101   */\n      shl\n        /* \"#utility.yul\":2078:2079   */\n      0x00\n        /* \"#utility.yul\":2071:2102   */\n      mstore\n        /* \"#utility.yul\":2121:2125   */\n      0x21\n        /* \"#utility.yul\":2118:2119   */\n      0x04\n        /* \"#utility.yul\":2111:2126   */\n      mstore\n        /* \"#utility.yul\":2145:2149   */\n      0x24\n        /* \"#utility.yul\":2142:2143   */\n      0x00\n        /* \"#utility.yul\":2135:2150   */\n      revert\n        /* \"#utility.yul\":2161:2286   */\n    tag_154:\n        /* \"#utility.yul\":2226:2235   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2247:2257   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2244:2280   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":2260:2278   */\n      tag_201\n      tag_269\n      jump\t// in\n        /* \"#utility.yul\":2291:2541   */\n    tag_270:\n        /* \"#utility.yul\":2376:2377   */\n      0x00\n        /* \"#utility.yul\":2386:2499   */\n    tag_298:\n        /* \"#utility.yul\":2400:2406   */\n      dup4\n        /* \"#utility.yul\":2397:2398   */\n      dup2\n        /* \"#utility.yul\":2394:2407   */\n      lt\n        /* \"#utility.yul\":2386:2499   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":2476:2487   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":2470:2488   */\n      mload\n        /* \"#utility.yul\":2457:2468   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":2450:2489   */\n      mstore\n        /* \"#utility.yul\":2422:2424   */\n      0x20\n        /* \"#utility.yul\":2415:2425   */\n      add\n        /* \"#utility.yul\":2386:2499   */\n      jump(tag_298)\n    tag_300:\n      pop\n      pop\n        /* \"#utility.yul\":2533:2534   */\n      0x00\n        /* \"#utility.yul\":2515:2531   */\n      swap2\n      add\n        /* \"#utility.yul\":2508:2535   */\n      mstore\n        /* \"#utility.yul\":2291:2541   */\n      jump\t// out\n        /* \"#utility.yul\":2546:2833   */\n    tag_158:\n        /* \"#utility.yul\":2675:2678   */\n      0x00\n        /* \"#utility.yul\":2713:2719   */\n      dup3\n        /* \"#utility.yul\":2707:2720   */\n      mload\n        /* \"#utility.yul\":2729:2795   */\n      tag_302\n        /* \"#utility.yul\":2788:2794   */\n      dup2\n        /* \"#utility.yul\":2783:2786   */\n      dup5\n        /* \"#utility.yul\":2776:2780   */\n      0x20\n        /* \"#utility.yul\":2768:2774   */\n      dup8\n        /* \"#utility.yul\":2764:2781   */\n      add\n        /* \"#utility.yul\":2729:2795   */\n      tag_270\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":2811:2827   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":2546:2833   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2838:3111   */\n    tag_163:\n        /* \"#utility.yul\":2906:2912   */\n      0x00\n        /* \"#utility.yul\":2959:2961   */\n      0x20\n        /* \"#utility.yul\":2947:2956   */\n      dup3\n        /* \"#utility.yul\":2938:2945   */\n      dup5\n        /* \"#utility.yul\":2934:2957   */\n      sub\n        /* \"#utility.yul\":2930:2962   */\n      slt\n        /* \"#utility.yul\":2927:2979   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":2975:2976   */\n      0x00\n        /* \"#utility.yul\":2972:2973   */\n      dup1\n        /* \"#utility.yul\":2965:2977   */\n      revert\n        /* \"#utility.yul\":2927:2979   */\n    tag_304:\n        /* \"#utility.yul\":3007:3016   */\n      dup2\n        /* \"#utility.yul\":3001:3017   */\n      mload\n        /* \"#utility.yul\":3057:3061   */\n      0xff\n        /* \"#utility.yul\":3050:3055   */\n      dup2\n        /* \"#utility.yul\":3046:3062   */\n      and\n        /* \"#utility.yul\":3039:3044   */\n      dup2\n        /* \"#utility.yul\":3036:3063   */\n      eq\n        /* \"#utility.yul\":3026:3081   */\n      tag_72\n      jumpi\n        /* \"#utility.yul\":3077:3078   */\n      0x00\n        /* \"#utility.yul\":3074:3075   */\n      dup1\n        /* \"#utility.yul\":3067:3079   */\n      revert\n        /* \"#utility.yul\":3961:4231   */\n    tag_271:\n        /* \"#utility.yul\":4002:4005   */\n      0x00\n        /* \"#utility.yul\":4040:4045   */\n      dup2\n        /* \"#utility.yul\":4034:4046   */\n      mload\n        /* \"#utility.yul\":4067:4073   */\n      dup1\n        /* \"#utility.yul\":4062:4065   */\n      dup5\n        /* \"#utility.yul\":4055:4074   */\n      mstore\n        /* \"#utility.yul\":4083:4159   */\n      tag_309\n        /* \"#utility.yul\":4152:4158   */\n      dup2\n        /* \"#utility.yul\":4145:4149   */\n      0x20\n        /* \"#utility.yul\":4140:4143   */\n      dup7\n        /* \"#utility.yul\":4136:4150   */\n      add\n        /* \"#utility.yul\":4129:4133   */\n      0x20\n        /* \"#utility.yul\":4122:4127   */\n      dup7\n        /* \"#utility.yul\":4118:4134   */\n      add\n        /* \"#utility.yul\":4083:4159   */\n      tag_270\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4213:4215   */\n      0x1f\n        /* \"#utility.yul\":4192:4207   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4188:4217   */\n      and\n        /* \"#utility.yul\":4179:4218   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":4220:4224   */\n      0x20\n        /* \"#utility.yul\":4175:4225   */\n      add\n      swap3\n        /* \"#utility.yul\":3961:4231   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4236:4873   */\n    tag_188:\n        /* \"#utility.yul\":4557:4558   */\n      0x01\n        /* \"#utility.yul\":4553:4554   */\n      dup1\n        /* \"#utility.yul\":4548:4551   */\n      0xa0\n        /* \"#utility.yul\":4544:4555   */\n      shl\n        /* \"#utility.yul\":4540:4559   */\n      sub\n        /* \"#utility.yul\":4532:4538   */\n      dup8\n        /* \"#utility.yul\":4528:4560   */\n      and\n        /* \"#utility.yul\":4517:4526   */\n      dup2\n        /* \"#utility.yul\":4510:4561   */\n      mstore\n        /* \"#utility.yul\":4597:4603   */\n      dup6\n        /* \"#utility.yul\":4592:4594   */\n      0x20\n        /* \"#utility.yul\":4581:4590   */\n      dup3\n        /* \"#utility.yul\":4577:4595   */\n      add\n        /* \"#utility.yul\":4570:4604   */\n      mstore\n        /* \"#utility.yul\":4652:4658   */\n      0xffff\n        /* \"#utility.yul\":4644:4650   */\n      dup6\n        /* \"#utility.yul\":4640:4659   */\n      and\n        /* \"#utility.yul\":4635:4637   */\n      0x40\n        /* \"#utility.yul\":4624:4633   */\n      dup3\n        /* \"#utility.yul\":4620:4638   */\n      add\n        /* \"#utility.yul\":4613:4660   */\n      mstore\n        /* \"#utility.yul\":4696:4702   */\n      dup4\n        /* \"#utility.yul\":4691:4693   */\n      0x60\n        /* \"#utility.yul\":4680:4689   */\n      dup3\n        /* \"#utility.yul\":4676:4694   */\n      add\n        /* \"#utility.yul\":4669:4703   */\n      mstore\n        /* \"#utility.yul\":4752:4762   */\n      0xffffffff\n        /* \"#utility.yul\":4744:4750   */\n      dup4\n        /* \"#utility.yul\":4740:4763   */\n      and\n        /* \"#utility.yul\":4734:4737   */\n      0x80\n        /* \"#utility.yul\":4723:4732   */\n      dup3\n        /* \"#utility.yul\":4719:4738   */\n      add\n        /* \"#utility.yul\":4712:4764   */\n      mstore\n        /* \"#utility.yul\":4801:4804   */\n      0xc0\n        /* \"#utility.yul\":4795:4798   */\n      0xa0\n        /* \"#utility.yul\":4784:4793   */\n      dup3\n        /* \"#utility.yul\":4780:4799   */\n      add\n        /* \"#utility.yul\":4773:4805   */\n      mstore\n        /* \"#utility.yul\":4491:4495   */\n      0x00\n        /* \"#utility.yul\":4822:4867   */\n      tag_311\n        /* \"#utility.yul\":4862:4865   */\n      0xc0\n        /* \"#utility.yul\":4851:4860   */\n      dup4\n        /* \"#utility.yul\":4847:4866   */\n      add\n        /* \"#utility.yul\":4839:4845   */\n      dup5\n        /* \"#utility.yul\":4822:4867   */\n      tag_271\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":4814:4867   */\n      swap9\n        /* \"#utility.yul\":4236:4873   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4878:5166   */\n    tag_192:\n        /* \"#utility.yul\":4947:4953   */\n      0x00\n        /* \"#utility.yul\":5000:5002   */\n      0x20\n        /* \"#utility.yul\":4988:4997   */\n      dup3\n        /* \"#utility.yul\":4979:4986   */\n      dup5\n        /* \"#utility.yul\":4975:4998   */\n      sub\n        /* \"#utility.yul\":4971:5003   */\n      slt\n        /* \"#utility.yul\":4968:5020   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":5016:5017   */\n      0x00\n        /* \"#utility.yul\":5013:5014   */\n      dup1\n        /* \"#utility.yul\":5006:5018   */\n      revert\n        /* \"#utility.yul\":4968:5020   */\n    tag_313:\n        /* \"#utility.yul\":5048:5057   */\n      dup2\n        /* \"#utility.yul\":5042:5058   */\n      mload\n        /* \"#utility.yul\":5098:5116   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5091:5096   */\n      dup2\n        /* \"#utility.yul\":5087:5117   */\n      and\n        /* \"#utility.yul\":5080:5085   */\n      dup2\n        /* \"#utility.yul\":5077:5118   */\n      eq\n        /* \"#utility.yul\":5067:5136   */\n      tag_72\n      jumpi\n        /* \"#utility.yul\":5132:5133   */\n      0x00\n        /* \"#utility.yul\":5129:5130   */\n      dup1\n        /* \"#utility.yul\":5122:5134   */\n      revert\n        /* \"#utility.yul\":5171:5561   */\n    tag_198:\n        /* \"#utility.yul\":5389:5399   */\n      0xffffffff\n        /* \"#utility.yul\":5381:5387   */\n      dup5\n        /* \"#utility.yul\":5377:5400   */\n      and\n        /* \"#utility.yul\":5366:5375   */\n      dup2\n        /* \"#utility.yul\":5359:5401   */\n      mstore\n        /* \"#utility.yul\":5437:5439   */\n      0x60\n        /* \"#utility.yul\":5432:5434   */\n      0x20\n        /* \"#utility.yul\":5421:5430   */\n      dup3\n        /* \"#utility.yul\":5417:5435   */\n      add\n        /* \"#utility.yul\":5410:5440   */\n      mstore\n        /* \"#utility.yul\":5340:5344   */\n      0x00\n        /* \"#utility.yul\":5457:5501   */\n      tag_316\n        /* \"#utility.yul\":5497:5499   */\n      0x60\n        /* \"#utility.yul\":5486:5495   */\n      dup4\n        /* \"#utility.yul\":5482:5500   */\n      add\n        /* \"#utility.yul\":5474:5480   */\n      dup6\n        /* \"#utility.yul\":5457:5501   */\n      tag_271\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":5449:5501   */\n      swap1\n      pop\n        /* \"#utility.yul\":5549:5553   */\n      0xff\n        /* \"#utility.yul\":5541:5547   */\n      dup4\n        /* \"#utility.yul\":5537:5554   */\n      and\n        /* \"#utility.yul\":5532:5534   */\n      0x40\n        /* \"#utility.yul\":5521:5530   */\n      dup4\n        /* \"#utility.yul\":5517:5535   */\n      add\n        /* \"#utility.yul\":5510:5555   */\n      mstore\n        /* \"#utility.yul\":5171:5561   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5566:6033   */\n    tag_207:\n        /* \"#utility.yul\":5814:5820   */\n      0xffff\n        /* \"#utility.yul\":5806:5812   */\n      dup6\n        /* \"#utility.yul\":5802:5821   */\n      and\n        /* \"#utility.yul\":5791:5800   */\n      dup2\n        /* \"#utility.yul\":5784:5822   */\n      mstore\n        /* \"#utility.yul\":5858:5864   */\n      dup4\n        /* \"#utility.yul\":5853:5855   */\n      0x20\n        /* \"#utility.yul\":5842:5851   */\n      dup3\n        /* \"#utility.yul\":5838:5856   */\n      add\n        /* \"#utility.yul\":5831:5865   */\n      mstore\n        /* \"#utility.yul\":5913:5923   */\n      0xffffffff\n        /* \"#utility.yul\":5905:5911   */\n      dup4\n        /* \"#utility.yul\":5901:5924   */\n      and\n        /* \"#utility.yul\":5896:5898   */\n      0x40\n        /* \"#utility.yul\":5885:5894   */\n      dup3\n        /* \"#utility.yul\":5881:5899   */\n      add\n        /* \"#utility.yul\":5874:5925   */\n      mstore\n        /* \"#utility.yul\":5961:5964   */\n      0x80\n        /* \"#utility.yul\":5956:5958   */\n      0x60\n        /* \"#utility.yul\":5945:5954   */\n      dup3\n        /* \"#utility.yul\":5941:5959   */\n      add\n        /* \"#utility.yul\":5934:5965   */\n      mstore\n        /* \"#utility.yul\":5765:5769   */\n      0x00\n        /* \"#utility.yul\":5982:6027   */\n      tag_255\n        /* \"#utility.yul\":6022:6025   */\n      0x80\n        /* \"#utility.yul\":6011:6020   */\n      dup4\n        /* \"#utility.yul\":6007:6026   */\n      add\n        /* \"#utility.yul\":5999:6005   */\n      dup5\n        /* \"#utility.yul\":5982:6027   */\n      tag_271\n      jump\t// in\n        /* \"#utility.yul\":6038:6189   */\n    tag_214:\n        /* \"#utility.yul\":6128:6132   */\n      0xff\n        /* \"#utility.yul\":6121:6133   */\n      dup3\n      dup2\n      and\n        /* \"#utility.yul\":6107:6119   */\n      dup3\n      dup3\n      and\n        /* \"#utility.yul\":6103:6134   */\n      sub\n      swap1\n        /* \"#utility.yul\":6146:6160   */\n      dup2\n      gt\n        /* \"#utility.yul\":6143:6183   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":6163:6181   */\n      tag_201\n      tag_269\n      jump\t// in\n        /* \"#utility.yul\":6194:6610   */\n    tag_272:\n        /* \"#utility.yul\":6283:6284   */\n      0x01\n        /* \"#utility.yul\":6320:6325   */\n      dup2\n        /* \"#utility.yul\":6283:6284   */\n      dup2\n        /* \"#utility.yul\":6334:6604   */\n    tag_323:\n        /* \"#utility.yul\":6355:6362   */\n      dup1\n        /* \"#utility.yul\":6345:6353   */\n      dup6\n        /* \"#utility.yul\":6342:6363   */\n      gt\n        /* \"#utility.yul\":6334:6604   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":6414:6418   */\n      dup2\n        /* \"#utility.yul\":6410:6411   */\n      0x00\n        /* \"#utility.yul\":6406:6412   */\n      not\n        /* \"#utility.yul\":6402:6419   */\n      div\n        /* \"#utility.yul\":6396:6400   */\n      dup3\n        /* \"#utility.yul\":6393:6420   */\n      gt\n        /* \"#utility.yul\":6390:6443   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":6423:6441   */\n      tag_327\n      tag_269\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":6473:6480   */\n      dup1\n        /* \"#utility.yul\":6463:6471   */\n      dup6\n        /* \"#utility.yul\":6459:6481   */\n      and\n        /* \"#utility.yul\":6456:6511   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":6493:6509   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":6456:6511   */\n    tag_328:\n        /* \"#utility.yul\":6572:6594   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":6532:6547   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":6334:6604   */\n      jump(tag_323)\n    tag_325:\n        /* \"#utility.yul\":6338:6341   */\n      pop\n        /* \"#utility.yul\":6194:6610   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6615:7421   */\n    tag_273:\n        /* \"#utility.yul\":6664:6669   */\n      0x00\n        /* \"#utility.yul\":6694:6702   */\n      dup3\n        /* \"#utility.yul\":6684:6764   */\n      tag_330\n      jumpi\n      pop\n        /* \"#utility.yul\":6735:6736   */\n      0x01\n        /* \"#utility.yul\":6749:6754   */\n      jump(tag_201)\n        /* \"#utility.yul\":6684:6764   */\n    tag_330:\n        /* \"#utility.yul\":6783:6787   */\n      dup2\n        /* \"#utility.yul\":6773:6849   */\n      tag_331\n      jumpi\n      pop\n        /* \"#utility.yul\":6820:6821   */\n      0x00\n        /* \"#utility.yul\":6834:6839   */\n      jump(tag_201)\n        /* \"#utility.yul\":6773:6849   */\n    tag_331:\n        /* \"#utility.yul\":6865:6869   */\n      dup2\n        /* \"#utility.yul\":6883:6884   */\n      0x01\n        /* \"#utility.yul\":6878:6937   */\n      dup2\n      eq\n      tag_333\n      jumpi\n        /* \"#utility.yul\":6951:6952   */\n      0x02\n        /* \"#utility.yul\":6946:7076   */\n      dup2\n      eq\n      tag_334\n      jumpi\n        /* \"#utility.yul\":6858:7076   */\n      jump(tag_332)\n        /* \"#utility.yul\":6878:6937   */\n    tag_333:\n        /* \"#utility.yul\":6908:6909   */\n      0x01\n        /* \"#utility.yul\":6899:6909   */\n      swap2\n      pop\n        /* \"#utility.yul\":6922:6927   */\n      pop\n      jump(tag_201)\n        /* \"#utility.yul\":6946:7076   */\n    tag_334:\n        /* \"#utility.yul\":6983:6986   */\n      0xff\n        /* \"#utility.yul\":6973:6981   */\n      dup5\n        /* \"#utility.yul\":6970:6987   */\n      gt\n        /* \"#utility.yul\":6967:7010   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":6990:7008   */\n      tag_336\n      tag_269\n      jump\t// in\n    tag_336:\n      pop\n      pop\n        /* \"#utility.yul\":7046:7047   */\n      0x01\n        /* \"#utility.yul\":7032:7048   */\n      dup3\n      shl\n        /* \"#utility.yul\":7061:7066   */\n      jump(tag_201)\n        /* \"#utility.yul\":6858:7076   */\n    tag_332:\n      pop\n        /* \"#utility.yul\":7160:7162   */\n      0x20\n        /* \"#utility.yul\":7150:7158   */\n      dup4\n        /* \"#utility.yul\":7147:7163   */\n      lt\n        /* \"#utility.yul\":7141:7144   */\n      0x0133\n        /* \"#utility.yul\":7135:7139   */\n      dup4\n        /* \"#utility.yul\":7132:7145   */\n      lt\n        /* \"#utility.yul\":7128:7164   */\n      and\n        /* \"#utility.yul\":7122:7124   */\n      0x4e\n        /* \"#utility.yul\":7112:7120   */\n      dup5\n        /* \"#utility.yul\":7109:7125   */\n      lt\n        /* \"#utility.yul\":7104:7106   */\n      0x0b\n        /* \"#utility.yul\":7098:7102   */\n      dup5\n        /* \"#utility.yul\":7095:7107   */\n      lt\n        /* \"#utility.yul\":7091:7126   */\n      and\n        /* \"#utility.yul\":7088:7165   */\n      or\n        /* \"#utility.yul\":7085:7244   */\n      iszero\n      tag_337\n      jumpi\n      pop\n        /* \"#utility.yul\":7197:7216   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":7229:7234   */\n      jump(tag_201)\n        /* \"#utility.yul\":7085:7244   */\n    tag_337:\n        /* \"#utility.yul\":7276:7310   */\n      tag_338\n        /* \"#utility.yul\":7301:7309   */\n      dup4\n        /* \"#utility.yul\":7295:7299   */\n      dup4\n        /* \"#utility.yul\":7276:7310   */\n      tag_272\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":7346:7352   */\n      dup1\n        /* \"#utility.yul\":7342:7343   */\n      0x00\n        /* \"#utility.yul\":7338:7344   */\n      not\n        /* \"#utility.yul\":7334:7353   */\n      div\n        /* \"#utility.yul\":7325:7332   */\n      dup3\n        /* \"#utility.yul\":7322:7354   */\n      gt\n        /* \"#utility.yul\":7319:7377   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":7357:7375   */\n      tag_340\n      tag_269\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":7395:7415   */\n      mul\n      swap4\n        /* \"#utility.yul\":6615:7421   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7426:7566   */\n    tag_216:\n        /* \"#utility.yul\":7484:7489   */\n      0x00\n        /* \"#utility.yul\":7513:7560   */\n      tag_72\n        /* \"#utility.yul\":7554:7558   */\n      0xff\n        /* \"#utility.yul\":7544:7552   */\n      dup5\n        /* \"#utility.yul\":7540:7559   */\n      and\n        /* \"#utility.yul\":7534:7538   */\n      dup4\n        /* \"#utility.yul\":7513:7560   */\n      tag_273\n      jump\t// in\n        /* \"#utility.yul\":7571:7788   */\n    tag_218:\n        /* \"#utility.yul\":7611:7612   */\n      0x00\n        /* \"#utility.yul\":7637:7638   */\n      dup3\n        /* \"#utility.yul\":7627:7759   */\n      tag_344\n      jumpi\n        /* \"#utility.yul\":7681:7691   */\n      0x4e487b71\n        /* \"#utility.yul\":7676:7679   */\n      0xe0\n        /* \"#utility.yul\":7672:7692   */\n      shl\n        /* \"#utility.yul\":7669:7670   */\n      0x00\n        /* \"#utility.yul\":7662:7693   */\n      mstore\n        /* \"#utility.yul\":7716:7720   */\n      0x12\n        /* \"#utility.yul\":7713:7714   */\n      0x04\n        /* \"#utility.yul\":7706:7721   */\n      mstore\n        /* \"#utility.yul\":7744:7748   */\n      0x24\n        /* \"#utility.yul\":7741:7742   */\n      0x00\n        /* \"#utility.yul\":7734:7749   */\n      revert\n        /* \"#utility.yul\":7627:7759   */\n    tag_344:\n      pop\n        /* \"#utility.yul\":7773:7782   */\n      div\n      swap1\n        /* \"#utility.yul\":7571:7788   */\n      jump\t// out\n        /* \"#utility.yul\":7793:7961   */\n    tag_224:\n        /* \"#utility.yul\":7866:7875   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":7897:7906   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7914:7929   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":7908:7930   */\n      dup5\n      eq\n        /* \"#utility.yul\":7894:7931   */\n      or\n        /* \"#utility.yul\":7884:7955   */\n      tag_201\n      jumpi\n        /* \"#utility.yul\":7935:7953   */\n      tag_201\n      tag_269\n      jump\t// in\n        /* \"#utility.yul\":8625:8902   */\n    tag_242:\n        /* \"#utility.yul\":8692:8698   */\n      0x00\n        /* \"#utility.yul\":8745:8747   */\n      0x20\n        /* \"#utility.yul\":8733:8742   */\n      dup3\n        /* \"#utility.yul\":8724:8731   */\n      dup5\n        /* \"#utility.yul\":8720:8743   */\n      sub\n        /* \"#utility.yul\":8716:8748   */\n      slt\n        /* \"#utility.yul\":8713:8765   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":8761:8762   */\n      0x00\n        /* \"#utility.yul\":8758:8759   */\n      dup1\n        /* \"#utility.yul\":8751:8763   */\n      revert\n        /* \"#utility.yul\":8713:8765   */\n    tag_351:\n        /* \"#utility.yul\":8793:8802   */\n      dup2\n        /* \"#utility.yul\":8787:8803   */\n      mload\n        /* \"#utility.yul\":8846:8851   */\n      dup1\n        /* \"#utility.yul\":8839:8852   */\n      iszero\n        /* \"#utility.yul\":8832:8853   */\n      iszero\n        /* \"#utility.yul\":8825:8830   */\n      dup2\n        /* \"#utility.yul\":8822:8854   */\n      eq\n        /* \"#utility.yul\":8812:8872   */\n      tag_72\n      jumpi\n        /* \"#utility.yul\":8868:8869   */\n      0x00\n        /* \"#utility.yul\":8865:8866   */\n      dup1\n        /* \"#utility.yul\":8858:8870   */\n      revert\n\n    auxdata: 0xa2646970667358221220bdcedf95167010ae6ad5e97d6d3cf80c6054cdc5aa9b6add6af0e653f5dab7aa64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_886": {
									"entryPoint": null,
									"id": 886,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setChainId_1248": {
									"entryPoint": null,
									"id": 1248,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setHubChainId_1291": {
									"entryPoint": null,
									"id": 1291,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setHubContractAddress_1303": {
									"entryPoint": null,
									"id": 1303,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTokenBridge_1279": {
									"entryPoint": null,
									"id": 1279,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setWormhole_1265": {
									"entryPoint": null,
									"id": 1265,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint16t_addresst_addresst_uint16t_address_fromMemory": {
									"entryPoint": 236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_uint16_fromMemory": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:912:15",
										"nodeType": "YulBlock",
										"src": "0:912:15",
										"statements": [
											{
												"nativeSrc": "6:3:15",
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "73:104:15",
													"nodeType": "YulBlock",
													"src": "73:104:15",
													"statements": [
														{
															"nativeSrc": "83:22:15",
															"nodeType": "YulAssignment",
															"src": "83:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "98:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "98:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "92:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "92:5:15"
																},
																"nativeSrc": "92:13:15",
																"nodeType": "YulFunctionCall",
																"src": "92:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "83:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "83:5:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "155:16:15",
																"nodeType": "YulBlock",
																"src": "155:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "164:1:15",
																					"nodeType": "YulLiteral",
																					"src": "164:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "167:1:15",
																					"nodeType": "YulLiteral",
																					"src": "167:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "157:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "157:6:15"
																			},
																			"nativeSrc": "157:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "157:12:15"
																		},
																		"nativeSrc": "157:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "157:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "127:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "127:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "138:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "138:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "145:6:15",
																						"nodeType": "YulLiteral",
																						"src": "145:6:15",
																						"type": "",
																						"value": "0xffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "134:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "134:3:15"
																				},
																				"nativeSrc": "134:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "134:18:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "124:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "124:2:15"
																		},
																		"nativeSrc": "124:29:15",
																		"nodeType": "YulFunctionCall",
																		"src": "124:29:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "117:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "117:6:15"
																},
																"nativeSrc": "117:37:15",
																"nodeType": "YulFunctionCall",
																"src": "117:37:15"
															},
															"nativeSrc": "114:57:15",
															"nodeType": "YulIf",
															"src": "114:57:15"
														}
													]
												},
												"name": "abi_decode_uint16_fromMemory",
												"nativeSrc": "14:163:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "52:6:15",
														"nodeType": "YulTypedName",
														"src": "52:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "63:5:15",
														"nodeType": "YulTypedName",
														"src": "63:5:15",
														"type": ""
													}
												],
												"src": "14:163:15"
											},
											{
												"body": {
													"nativeSrc": "242:117:15",
													"nodeType": "YulBlock",
													"src": "242:117:15",
													"statements": [
														{
															"nativeSrc": "252:22:15",
															"nodeType": "YulAssignment",
															"src": "252:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "267:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "267:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "261:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "261:5:15"
																},
																"nativeSrc": "261:13:15",
																"nodeType": "YulFunctionCall",
																"src": "261:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "252:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "252:5:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "337:16:15",
																"nodeType": "YulBlock",
																"src": "337:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "346:1:15",
																					"nodeType": "YulLiteral",
																					"src": "346:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "349:1:15",
																					"nodeType": "YulLiteral",
																					"src": "349:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "339:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "339:6:15"
																			},
																			"nativeSrc": "339:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "339:12:15"
																		},
																		"nativeSrc": "339:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "339:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "296:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "296:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "307:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "307:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "322:3:15",
																										"nodeType": "YulLiteral",
																										"src": "322:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "327:1:15",
																										"nodeType": "YulLiteral",
																										"src": "327:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "318:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "318:3:15"
																								},
																								"nativeSrc": "318:11:15",
																								"nodeType": "YulFunctionCall",
																								"src": "318:11:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "331:1:15",
																								"nodeType": "YulLiteral",
																								"src": "331:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "314:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "314:3:15"
																						},
																						"nativeSrc": "314:19:15",
																						"nodeType": "YulFunctionCall",
																						"src": "314:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "303:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "303:3:15"
																				},
																				"nativeSrc": "303:31:15",
																				"nodeType": "YulFunctionCall",
																				"src": "303:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "293:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "293:2:15"
																		},
																		"nativeSrc": "293:42:15",
																		"nodeType": "YulFunctionCall",
																		"src": "293:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "286:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "286:6:15"
																},
																"nativeSrc": "286:50:15",
																"nodeType": "YulFunctionCall",
																"src": "286:50:15"
															},
															"nativeSrc": "283:70:15",
															"nodeType": "YulIf",
															"src": "283:70:15"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "182:177:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "221:6:15",
														"nodeType": "YulTypedName",
														"src": "221:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "232:5:15",
														"nodeType": "YulTypedName",
														"src": "232:5:15",
														"type": ""
													}
												],
												"src": "182:177:15"
											},
											{
												"body": {
													"nativeSrc": "511:399:15",
													"nodeType": "YulBlock",
													"src": "511:399:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "558:16:15",
																"nodeType": "YulBlock",
																"src": "558:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "567:1:15",
																					"nodeType": "YulLiteral",
																					"src": "567:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "570:1:15",
																					"nodeType": "YulLiteral",
																					"src": "570:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "560:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "560:6:15"
																			},
																			"nativeSrc": "560:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "560:12:15"
																		},
																		"nativeSrc": "560:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "560:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "532:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "532:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "541:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "541:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "528:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "528:3:15"
																		},
																		"nativeSrc": "528:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "528:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:3:15",
																		"nodeType": "YulLiteral",
																		"src": "553:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "524:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "524:3:15"
																},
																"nativeSrc": "524:33:15",
																"nodeType": "YulFunctionCall",
																"src": "524:33:15"
															},
															"nativeSrc": "521:53:15",
															"nodeType": "YulIf",
															"src": "521:53:15"
														},
														{
															"nativeSrc": "583:49:15",
															"nodeType": "YulAssignment",
															"src": "583:49:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "622:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "622:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16_fromMemory",
																	"nativeSrc": "593:28:15",
																	"nodeType": "YulIdentifier",
																	"src": "593:28:15"
																},
																"nativeSrc": "593:39:15",
																"nodeType": "YulFunctionCall",
																"src": "593:39:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "583:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "583:6:15"
																}
															]
														},
														{
															"nativeSrc": "641:59:15",
															"nodeType": "YulAssignment",
															"src": "641:59:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "685:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "696:2:15",
																				"nodeType": "YulLiteral",
																				"src": "696:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "681:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "681:3:15"
																		},
																		"nativeSrc": "681:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "681:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "651:29:15",
																	"nodeType": "YulIdentifier",
																	"src": "651:29:15"
																},
																"nativeSrc": "651:49:15",
																"nodeType": "YulFunctionCall",
																"src": "651:49:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "641:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "641:6:15"
																}
															]
														},
														{
															"nativeSrc": "709:59:15",
															"nodeType": "YulAssignment",
															"src": "709:59:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "753:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "753:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "764:2:15",
																				"nodeType": "YulLiteral",
																				"src": "764:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "749:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "749:3:15"
																		},
																		"nativeSrc": "749:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "749:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "719:29:15",
																	"nodeType": "YulIdentifier",
																	"src": "719:29:15"
																},
																"nativeSrc": "719:49:15",
																"nodeType": "YulFunctionCall",
																"src": "719:49:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "709:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "709:6:15"
																}
															]
														},
														{
															"nativeSrc": "777:58:15",
															"nodeType": "YulAssignment",
															"src": "777:58:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "820:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "820:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "831:2:15",
																				"nodeType": "YulLiteral",
																				"src": "831:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "816:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:15"
																		},
																		"nativeSrc": "816:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "816:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16_fromMemory",
																	"nativeSrc": "787:28:15",
																	"nodeType": "YulIdentifier",
																	"src": "787:28:15"
																},
																"nativeSrc": "787:48:15",
																"nodeType": "YulFunctionCall",
																"src": "787:48:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "777:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "777:6:15"
																}
															]
														},
														{
															"nativeSrc": "844:60:15",
															"nodeType": "YulAssignment",
															"src": "844:60:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "888:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "888:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "899:3:15",
																				"nodeType": "YulLiteral",
																				"src": "899:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "884:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "884:3:15"
																		},
																		"nativeSrc": "884:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "884:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "854:29:15",
																	"nodeType": "YulIdentifier",
																	"src": "854:29:15"
																},
																"nativeSrc": "854:50:15",
																"nodeType": "YulFunctionCall",
																"src": "854:50:15"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "844:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "844:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint16t_addresst_addresst_uint16t_address_fromMemory",
												"nativeSrc": "364:546:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "445:9:15",
														"nodeType": "YulTypedName",
														"src": "445:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "456:7:15",
														"nodeType": "YulTypedName",
														"src": "456:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "468:6:15",
														"nodeType": "YulTypedName",
														"src": "468:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "476:6:15",
														"nodeType": "YulTypedName",
														"src": "476:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "484:6:15",
														"nodeType": "YulTypedName",
														"src": "484:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "492:6:15",
														"nodeType": "YulTypedName",
														"src": "492:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "500:6:15",
														"nodeType": "YulTypedName",
														"src": "500:6:15",
														"type": ""
													}
												],
												"src": "364:546:15"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_uint16_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint16t_addresst_addresst_uint16t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint16_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_uint16_fromMemory(add(headStart, 96))\n        value4 := abi_decode_address_fromMemory(add(headStart, 128))\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xFBB CODESIZE SUB DUP1 PUSH3 0xFBB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x30 SWAP2 PUSH2 0xEC JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF DUP8 AND OR SWAP1 SSTORE PUSH0 DUP1 SLOAD PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND PUSH3 0x10000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND MUL OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH3 0xFFFF00 NOT AND PUSH2 0x100 PUSH2 0xFFFF DUP6 AND MUL OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND PUSH4 0x1000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH2 0x14D JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0xD1 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x100 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x109 DUP7 PUSH2 0xC0 JUMP JUMPDEST SWAP5 POP PUSH2 0x117 PUSH1 0x20 DUP8 ADD PUSH2 0xD6 JUMP JUMPDEST SWAP4 POP PUSH2 0x125 PUSH1 0x40 DUP8 ADD PUSH2 0xD6 JUMP JUMPDEST SWAP3 POP PUSH2 0x133 PUSH1 0x60 DUP8 ADD PUSH2 0xC0 JUMP JUMPDEST SWAP2 POP PUSH2 0x141 PUSH1 0x80 DUP8 ADD PUSH2 0xD6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0xE60 DUP1 PUSH3 0x15B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x83 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A8A0592 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0x9A8A0592 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA5D5DB0C EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xC6328A46 EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0xE1884919 EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0xEDBA8209 EQ PUSH2 0x171 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x470257 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0x22867D78 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x350C35E9 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x4B8A3529 EQ PUSH2 0xEB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x8F PUSH2 0x179 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8F PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x274 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8F PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x288 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8F PUSH2 0x105 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x295 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8F PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x2A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA4 JUMP JUMPDEST PUSH2 0x8F PUSH2 0x2AE JUMP JUMPDEST PUSH0 PUSH2 0x26F PUSH1 0x4 PUSH2 0x191 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0xAF2 JUMP JUMPDEST PUSH0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1A90A219 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0xB0D JUMP JUMPDEST PUSH2 0x26A SWAP1 CALLVALUE PUSH2 0xB38 JUMP JUMPDEST PUSH2 0x2C6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x281 PUSH1 0x3 DUP5 DUP5 PUSH2 0x2C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x281 PUSH1 0x2 DUP5 DUP5 PUSH2 0x2C6 JUMP JUMPDEST PUSH0 PUSH2 0x281 PUSH1 0x1 DUP5 DUP5 PUSH2 0x2C6 JUMP JUMPDEST PUSH0 PUSH2 0x281 PUSH0 DUP5 DUP5 PUSH2 0x2C6 JUMP JUMPDEST PUSH0 PUSH2 0x26F PUSH1 0x5 PUSH2 0x191 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x2D1 DUP4 DUP4 PUSH2 0x4A1 JUMP JUMPDEST DUP4 PUSH1 0x4 DUP6 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2E6 JUMPI PUSH2 0x2E6 PUSH2 0xB4B JUMP JUMPDEST SUB PUSH2 0x2EE JUMPI POP PUSH0 JUMPDEST PUSH1 0x5 DUP6 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x302 JUMPI PUSH2 0x302 PUSH2 0xB4B JUMP JUMPDEST SUB PUSH2 0x30B JUMPI POP PUSH1 0x3 JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x329 JUMPI PUSH2 0x329 PUSH2 0xB4B JUMP JUMPDEST DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD DUP6 SWAP1 MSTORE SWAP1 POP PUSH0 PUSH2 0x352 DUP3 PUSH2 0x5A6 JUMP JUMPDEST SWAP1 POP PUSH0 DUP8 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x367 JUMPI PUSH2 0x367 PUSH2 0xB4B JUMP JUMPDEST EQ DUP1 PUSH2 0x384 JUMPI POP PUSH1 0x3 DUP8 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x382 JUMPI PUSH2 0x382 PUSH2 0xB4B JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x39B JUMPI PUSH2 0x394 DUP7 DUP7 DUP4 PUSH2 0x631 JUMP JUMPDEST SWAP4 POP PUSH2 0x497 JUMP JUMPDEST PUSH1 0x2 DUP8 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x3AF JUMPI PUSH2 0x3AF PUSH2 0xB4B JUMP JUMPDEST EQ DUP1 PUSH2 0x3CC JUMPI POP PUSH1 0x1 DUP8 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x3CA JUMPI PUSH2 0x3CA PUSH2 0xB4B JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x3DA JUMPI PUSH2 0x394 DUP2 PUSH2 0x70C JUMP JUMPDEST PUSH1 0x4 DUP8 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x3EE JUMPI PUSH2 0x3EE PUSH2 0xB4B JUMP JUMPDEST EQ DUP1 PUSH2 0x40B JUMPI POP PUSH1 0x5 DUP8 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x409 JUMPI PUSH2 0x409 PUSH2 0xB4B JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x497 JUMPI PUSH0 SLOAD PUSH2 0x494 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1A90A219 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x460 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x484 SWAP2 SWAP1 PUSH2 0xB0D JUMP JUMPDEST PUSH2 0x48E SWAP1 DUP8 PUSH2 0xB5F JUMP JUMPDEST DUP3 PUSH2 0x79E JUMP JUMPDEST SWAP4 POP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH2 0x4E2 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x51A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x51F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP POP PUSH0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x538 SWAP2 SWAP1 PUSH2 0xBAF JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x54E PUSH2 0x548 DUP6 DUP5 PUSH2 0x84D JUMP JUMPDEST DUP4 PUSH2 0x884 JUMP JUMPDEST EQ PUSH2 0x5A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6F206D616E7920646563696D616C20706C61636573000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x5BC JUMPI PUSH2 0x5BC PUSH2 0xB4B JUMP JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x61B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0xF8 SWAP5 SWAP1 SWAP5 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND DUP5 MSTORE PUSH1 0x60 SWAP3 DUP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND PUSH1 0x1 DUP7 ADD MSTORE SWAP2 SWAP1 SWAP3 SHL AND PUSH1 0x15 DUP4 ADD MSTORE PUSH1 0x29 DUP3 ADD MSTORE PUSH1 0x49 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x63E DUP5 CALLER ADDRESS DUP7 PUSH2 0x8B1 JUMP JUMPDEST PUSH2 0x65A DUP5 PUSH2 0x654 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP6 PUSH2 0x918 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC5A5EBDA DUP6 DUP6 PUSH2 0x689 PUSH1 0x2 SLOAD PUSH2 0xFFFF PUSH2 0x100 SWAP1 SWAP2 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP8 SWAP1 SHL AND DUP2 MSTORE PUSH2 0x6C4 SWAP5 SWAP4 SWAP3 SWAP2 PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH0 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0xBFA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6E0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x704 SWAP2 SWAP1 PUSH2 0xC48 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB19A437E PUSH0 DUP5 PUSH2 0x73A PUSH1 0x2 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x758 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC6F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x774 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x798 SWAP2 SWAP1 PUSH2 0xC48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7B1 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBEE9CDFC DUP5 PUSH2 0x7D3 PUSH1 0x2 SLOAD PUSH2 0xFFFF PUSH2 0x100 SWAP1 SWAP2 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH2 0x80C SWAP3 SWAP2 PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH0 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x828 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0xC48 JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP3 PUSH1 0xFF AND GT ISZERO PUSH2 0x87D JUMPI PUSH2 0x865 PUSH1 0x8 DUP4 PUSH2 0xCCE JUMP JUMPDEST PUSH2 0x870 SWAP1 PUSH1 0xA PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0x87A SWAP1 DUP5 PUSH2 0xDD5 JUMP JUMPDEST SWAP3 POP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP3 PUSH1 0xFF AND GT ISZERO PUSH2 0x87D JUMPI PUSH2 0x89C PUSH1 0x8 DUP4 PUSH2 0xCCE JUMP JUMPDEST PUSH2 0x8A7 SWAP1 PUSH1 0xA PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0x87A SWAP1 DUP5 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x5A0 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x94E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x949 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD PUSH2 0x8E6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x962 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0x9AF JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 EQ ISZERO DUP1 ISZERO PUSH2 0x986 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x984 SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x949 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x597 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x281 DUP4 DUP4 PUSH0 DUP5 PUSH0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x9D3 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xA0D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xA22 DUP7 DUP4 DUP4 PUSH2 0xA2C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xA41 JUMPI PUSH2 0xA3C DUP3 PUSH2 0xA88 JUMP JUMPDEST PUSH2 0x281 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0xA58 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xA81 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x597 JUMP JUMPDEST POP DUP1 PUSH2 0x281 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xA98 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAB1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAD9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xAE4 DUP2 PUSH2 0xAB4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB02 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x281 DUP2 PUSH2 0xAB4 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB1D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x798 JUMPI PUSH2 0x798 PUSH2 0xB24 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x798 JUMPI PUSH2 0x798 PUSH2 0xB24 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB8C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB74 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0xBA5 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xB72 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBBF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x281 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xBE6 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xFFFF DUP6 AND PUSH1 0x40 DUP3 ADD MSTORE DUP4 PUSH1 0x60 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xC0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH0 PUSH2 0xC3C PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0xBCF JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC58 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x281 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0xC8D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xBCF JUMP JUMPDEST SWAP1 POP PUSH1 0xFF DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH0 PUSH2 0xA22 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xBCF JUMP JUMPDEST PUSH1 0xFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x798 JUMPI PUSH2 0x798 PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xD21 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD07 PUSH2 0xB24 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xD14 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xCEC JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xD37 JUMPI POP PUSH1 0x1 PUSH2 0x798 JUMP JUMPDEST DUP2 PUSH2 0xD43 JUMPI POP PUSH0 PUSH2 0x798 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xD59 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xD63 JUMPI PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x798 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xD74 JUMPI PUSH2 0xD74 PUSH2 0xB24 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x798 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xDA2 JUMPI POP DUP2 DUP2 EXP PUSH2 0x798 JUMP JUMPDEST PUSH2 0xDAC DUP4 DUP4 PUSH2 0xCE7 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0xDBF JUMPI PUSH2 0xDBF PUSH2 0xB24 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x281 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0xD29 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xDEF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x798 JUMPI PUSH2 0x798 PUSH2 0xB24 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE1B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x281 JUMPI PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xCE 0xDF SWAP6 AND PUSH17 0x10AE6AD5E97D6D3CF80C6054CDC5AA9B6A 0xDD PUSH11 0xF0E653F5DAB7AA64736F6C PUSH4 0x43000817 STOP CALLER ",
							"sourceMap": "264:3598:6:-:0;;;843:350;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;239:6:8;:33;;-1:-1:-1;;239:33:8;;;;;;;350:6;:51;;-1:-1:-1;;;;;;350:51:8;;-1:-1:-1;;;;;350:51:8;;;;;;485:27;:48;;-1:-1:-1;;;;;;485:48:8;-1:-1:-1;;;;;485:48:8;;;;;607:17;:30;;-1:-1:-1;;607:30:8;;;;;;;;;728:25;:46;;-1:-1:-1;;;;;;728:46:8;;-1:-1:-1;;;;;728:46:8;;;;;;843:350:6;;;;;264:3598;;14:163:15;92:13;;145:6;134:18;;124:29;;114:57;;167:1;164;157:12;114:57;14:163;;;:::o;182:177::-;261:13;;-1:-1:-1;;;;;303:31:15;;293:42;;283:70;;349:1;346;339:12;364:546;468:6;476;484;492;500;553:3;541:9;532:7;528:23;524:33;521:53;;;570:1;567;560:12;521:53;593:39;622:9;593:39;:::i;:::-;583:49;;651;696:2;685:9;681:18;651:49;:::i;:::-;641:59;;719:49;764:2;753:9;749:18;719:49;:::i;:::-;709:59;;787:48;831:2;820:9;816:18;787:48;:::i;:::-;777:58;;854:50;899:3;888:9;884:19;854:50;:::i;:::-;844:60;;364:546;;;;;;;;:::o;:::-;264:3598:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_353": {
									"entryPoint": 2382,
									"id": 353,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_655": {
									"entryPoint": 2696,
									"id": 655,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@borrow_943": {
									"entryPoint": 661,
									"id": 943,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@chainId_1159": {
									"entryPoint": null,
									"id": 1159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@consistencyLevel_1207": {
									"entryPoint": null,
									"id": 1207,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@deNormalizeAmount_1561": {
									"entryPoint": 2180,
									"id": 1561,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@depositCollateralNative_989": {
									"entryPoint": 377,
									"id": 989,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@depositCollateral_905": {
									"entryPoint": 674,
									"id": 905,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@doAction_1138": {
									"entryPoint": 710,
									"id": 1138,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@encodeActionPayload_689": {
									"entryPoint": 1446,
									"id": 689,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@functionCallWithValue_523": {
									"entryPoint": null,
									"id": 523,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_477": {
									"entryPoint": 2479,
									"id": 477,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@hubChainId_1216": {
									"entryPoint": null,
									"id": 1216,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hubContractAddress_1225": {
									"entryPoint": null,
									"id": 1225,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@normalizeAmount_1535": {
									"entryPoint": 2125,
									"id": 1535,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@repayNative_1016": {
									"entryPoint": 686,
									"id": 1016,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@repay_962": {
									"entryPoint": 628,
									"id": 962,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@requireAssetAmountValidForTokenBridge_1509": {
									"entryPoint": 1185,
									"id": 1509,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_190": {
									"entryPoint": 2225,
									"id": 190,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_163": {
									"entryPoint": 2328,
									"id": 163,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@sendTokenBridgeMessageNative_1468": {
									"entryPoint": 1950,
									"id": 1468,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sendTokenBridgeMessage_1434": {
									"entryPoint": 1585,
									"id": 1434,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@sendWormholeMessage_1372": {
									"entryPoint": 1804,
									"id": 1372,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenBridgeAddress_1198": {
									"entryPoint": null,
									"id": 1198,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenBridge_1188": {
									"entryPoint": null,
									"id": 1188,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_615": {
									"entryPoint": 2604,
									"id": 615,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdrawCollateral_924": {
									"entryPoint": 648,
									"id": 924,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@wormhole_1172": {
									"entryPoint": null,
									"id": 1172,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IWETH_$1976_fromMemory": {
									"entryPoint": 2802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint64_fromMemory": {
									"entryPoint": 3144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 2991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 3023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_uint8_t_address_t_address_t_uint256__to_t_uint8_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint16_t_bytes32_t_rational_0_by_1_t_bytes_memory_ptr__to_t_address_t_uint256_t_uint16_t_bytes32_t_uint32_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3066,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ITokenBridge_$1962__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_0_by_1_t_bytes_memory_ptr_t_uint8__to_t_uint32_t_bytes_memory_ptr_t_uint8__fromStack_reversed": {
									"entryPoint": 3183,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f980939fccf74afb41aae851bf3fecac407639d4d59480a38f30e6ca14fe2c59__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16_t_bytes32_t_rational_0_by_1_t_bytes_memory_ptr__to_t_uint16_t_bytes32_t_uint32_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3232,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 3303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 3527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 3369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint8": {
									"entryPoint": 3278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2930,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 2852,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 2891,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 2740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8904:15",
										"nodeType": "YulBlock",
										"src": "0:8904:15",
										"statements": [
											{
												"nativeSrc": "6:3:15",
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "113:101:15",
													"nodeType": "YulBlock",
													"src": "113:101:15",
													"statements": [
														{
															"nativeSrc": "123:26:15",
															"nodeType": "YulAssignment",
															"src": "123:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "135:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "135:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "146:2:15",
																		"nodeType": "YulLiteral",
																		"src": "146:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "131:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:15"
																},
																"nativeSrc": "131:18:15",
																"nodeType": "YulFunctionCall",
																"src": "131:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "123:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "123:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "165:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "165:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "180:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "180:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "188:18:15",
																				"nodeType": "YulLiteral",
																				"src": "188:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "176:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "176:3:15"
																		},
																		"nativeSrc": "176:31:15",
																		"nodeType": "YulFunctionCall",
																		"src": "176:31:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "158:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "158:6:15"
																},
																"nativeSrc": "158:50:15",
																"nodeType": "YulFunctionCall",
																"src": "158:50:15"
															},
															"nativeSrc": "158:50:15",
															"nodeType": "YulExpressionStatement",
															"src": "158:50:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "14:200:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "82:9:15",
														"nodeType": "YulTypedName",
														"src": "82:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "93:6:15",
														"nodeType": "YulTypedName",
														"src": "93:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "104:4:15",
														"nodeType": "YulTypedName",
														"src": "104:4:15",
														"type": ""
													}
												],
												"src": "14:200:15"
											},
											{
												"body": {
													"nativeSrc": "264:86:15",
													"nodeType": "YulBlock",
													"src": "264:86:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "328:16:15",
																"nodeType": "YulBlock",
																"src": "328:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "337:1:15",
																					"nodeType": "YulLiteral",
																					"src": "337:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "340:1:15",
																					"nodeType": "YulLiteral",
																					"src": "340:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "330:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "330:6:15"
																			},
																			"nativeSrc": "330:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "330:12:15"
																		},
																		"nativeSrc": "330:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "330:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "287:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "287:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "298:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "298:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "313:3:15",
																										"nodeType": "YulLiteral",
																										"src": "313:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "318:1:15",
																										"nodeType": "YulLiteral",
																										"src": "318:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "309:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "309:3:15"
																								},
																								"nativeSrc": "309:11:15",
																								"nodeType": "YulFunctionCall",
																								"src": "309:11:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "322:1:15",
																								"nodeType": "YulLiteral",
																								"src": "322:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "305:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "305:3:15"
																						},
																						"nativeSrc": "305:19:15",
																						"nodeType": "YulFunctionCall",
																						"src": "305:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "294:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "294:3:15"
																				},
																				"nativeSrc": "294:31:15",
																				"nodeType": "YulFunctionCall",
																				"src": "294:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "284:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "284:2:15"
																		},
																		"nativeSrc": "284:42:15",
																		"nodeType": "YulFunctionCall",
																		"src": "284:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "277:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "277:6:15"
																},
																"nativeSrc": "277:50:15",
																"nodeType": "YulFunctionCall",
																"src": "277:50:15"
															},
															"nativeSrc": "274:70:15",
															"nodeType": "YulIf",
															"src": "274:70:15"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "219:131:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "253:5:15",
														"nodeType": "YulTypedName",
														"src": "253:5:15",
														"type": ""
													}
												],
												"src": "219:131:15"
											},
											{
												"body": {
													"nativeSrc": "442:228:15",
													"nodeType": "YulBlock",
													"src": "442:228:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "488:16:15",
																"nodeType": "YulBlock",
																"src": "488:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "497:1:15",
																					"nodeType": "YulLiteral",
																					"src": "497:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "500:1:15",
																					"nodeType": "YulLiteral",
																					"src": "500:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "490:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "490:6:15"
																			},
																			"nativeSrc": "490:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "490:12:15"
																		},
																		"nativeSrc": "490:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "490:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "463:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "463:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "472:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "472:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "459:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "459:3:15"
																		},
																		"nativeSrc": "459:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "459:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "484:2:15",
																		"nodeType": "YulLiteral",
																		"src": "484:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "455:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "455:3:15"
																},
																"nativeSrc": "455:32:15",
																"nodeType": "YulFunctionCall",
																"src": "455:32:15"
															},
															"nativeSrc": "452:52:15",
															"nodeType": "YulIf",
															"src": "452:52:15"
														},
														{
															"nativeSrc": "513:36:15",
															"nodeType": "YulVariableDeclaration",
															"src": "513:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "539:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "539:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "526:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "526:12:15"
																},
																"nativeSrc": "526:23:15",
																"nodeType": "YulFunctionCall",
																"src": "526:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "517:5:15",
																	"nodeType": "YulTypedName",
																	"src": "517:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "583:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "583:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "558:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "558:24:15"
																},
																"nativeSrc": "558:31:15",
																"nodeType": "YulFunctionCall",
																"src": "558:31:15"
															},
															"nativeSrc": "558:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "558:31:15"
														},
														{
															"nativeSrc": "598:15:15",
															"nodeType": "YulAssignment",
															"src": "598:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "608:5:15",
																"nodeType": "YulIdentifier",
																"src": "608:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "598:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "598:6:15"
																}
															]
														},
														{
															"nativeSrc": "622:42:15",
															"nodeType": "YulAssignment",
															"src": "622:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "649:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "649:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "660:2:15",
																				"nodeType": "YulLiteral",
																				"src": "660:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "645:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "645:3:15"
																		},
																		"nativeSrc": "645:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "645:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "632:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "632:12:15"
																},
																"nativeSrc": "632:32:15",
																"nodeType": "YulFunctionCall",
																"src": "632:32:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "622:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "355:315:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "400:9:15",
														"nodeType": "YulTypedName",
														"src": "400:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "411:7:15",
														"nodeType": "YulTypedName",
														"src": "411:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "423:6:15",
														"nodeType": "YulTypedName",
														"src": "423:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "431:6:15",
														"nodeType": "YulTypedName",
														"src": "431:6:15",
														"type": ""
													}
												],
												"src": "355:315:15"
											},
											{
												"body": {
													"nativeSrc": "774:89:15",
													"nodeType": "YulBlock",
													"src": "774:89:15",
													"statements": [
														{
															"nativeSrc": "784:26:15",
															"nodeType": "YulAssignment",
															"src": "784:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "796:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "796:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "807:2:15",
																		"nodeType": "YulLiteral",
																		"src": "807:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "792:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "792:3:15"
																},
																"nativeSrc": "792:18:15",
																"nodeType": "YulFunctionCall",
																"src": "792:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "784:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "784:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "826:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "826:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "841:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "841:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "849:6:15",
																				"nodeType": "YulLiteral",
																				"src": "849:6:15",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "837:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "837:3:15"
																		},
																		"nativeSrc": "837:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "837:19:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "819:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "819:6:15"
																},
																"nativeSrc": "819:38:15",
																"nodeType": "YulFunctionCall",
																"src": "819:38:15"
															},
															"nativeSrc": "819:38:15",
															"nodeType": "YulExpressionStatement",
															"src": "819:38:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nativeSrc": "675:188:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "743:9:15",
														"nodeType": "YulTypedName",
														"src": "743:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "754:6:15",
														"nodeType": "YulTypedName",
														"src": "754:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "765:4:15",
														"nodeType": "YulTypedName",
														"src": "765:4:15",
														"type": ""
													}
												],
												"src": "675:188:15"
											},
											{
												"body": {
													"nativeSrc": "990:102:15",
													"nodeType": "YulBlock",
													"src": "990:102:15",
													"statements": [
														{
															"nativeSrc": "1000:26:15",
															"nodeType": "YulAssignment",
															"src": "1000:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1012:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1012:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1023:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1023:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1008:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1008:3:15"
																},
																"nativeSrc": "1008:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1008:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1000:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1000:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1042:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1042:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1057:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1057:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1073:3:15",
																								"nodeType": "YulLiteral",
																								"src": "1073:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1078:1:15",
																								"nodeType": "YulLiteral",
																								"src": "1078:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1069:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1069:3:15"
																						},
																						"nativeSrc": "1069:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1069:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1082:1:15",
																						"nodeType": "YulLiteral",
																						"src": "1082:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1065:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1065:3:15"
																				},
																				"nativeSrc": "1065:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1065:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1053:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1053:3:15"
																		},
																		"nativeSrc": "1053:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1053:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1035:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1035:6:15"
																},
																"nativeSrc": "1035:51:15",
																"nodeType": "YulFunctionCall",
																"src": "1035:51:15"
															},
															"nativeSrc": "1035:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "1035:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ITokenBridge_$1962__to_t_address__fromStack_reversed",
												"nativeSrc": "868:224:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "959:9:15",
														"nodeType": "YulTypedName",
														"src": "959:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "970:6:15",
														"nodeType": "YulTypedName",
														"src": "970:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "981:4:15",
														"nodeType": "YulTypedName",
														"src": "981:4:15",
														"type": ""
													}
												],
												"src": "868:224:15"
											},
											{
												"body": {
													"nativeSrc": "1198:102:15",
													"nodeType": "YulBlock",
													"src": "1198:102:15",
													"statements": [
														{
															"nativeSrc": "1208:26:15",
															"nodeType": "YulAssignment",
															"src": "1208:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1220:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1220:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1231:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1231:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1216:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1216:3:15"
																},
																"nativeSrc": "1216:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1216:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1208:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1208:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1250:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1250:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1265:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1265:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1281:3:15",
																								"nodeType": "YulLiteral",
																								"src": "1281:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1286:1:15",
																								"nodeType": "YulLiteral",
																								"src": "1286:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1277:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1277:3:15"
																						},
																						"nativeSrc": "1277:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1277:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1290:1:15",
																						"nodeType": "YulLiteral",
																						"src": "1290:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1273:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1273:3:15"
																				},
																				"nativeSrc": "1273:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1273:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1261:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1261:3:15"
																		},
																		"nativeSrc": "1261:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1261:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1243:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1243:6:15"
																},
																"nativeSrc": "1243:51:15",
																"nodeType": "YulFunctionCall",
																"src": "1243:51:15"
															},
															"nativeSrc": "1243:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "1243:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1097:203:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1167:9:15",
														"nodeType": "YulTypedName",
														"src": "1167:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1178:6:15",
														"nodeType": "YulTypedName",
														"src": "1178:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1189:4:15",
														"nodeType": "YulTypedName",
														"src": "1189:4:15",
														"type": ""
													}
												],
												"src": "1097:203:15"
											},
											{
												"body": {
													"nativeSrc": "1400:170:15",
													"nodeType": "YulBlock",
													"src": "1400:170:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1446:16:15",
																"nodeType": "YulBlock",
																"src": "1446:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1455:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1455:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1458:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1448:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1448:6:15"
																			},
																			"nativeSrc": "1448:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1448:12:15"
																		},
																		"nativeSrc": "1448:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1448:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1421:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1421:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1430:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1417:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1417:3:15"
																		},
																		"nativeSrc": "1417:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1417:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1442:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1442:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1413:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1413:3:15"
																},
																"nativeSrc": "1413:32:15",
																"nodeType": "YulFunctionCall",
																"src": "1413:32:15"
															},
															"nativeSrc": "1410:52:15",
															"nodeType": "YulIf",
															"src": "1410:52:15"
														},
														{
															"nativeSrc": "1471:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1471:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1490:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1490:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1484:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1484:5:15"
																},
																"nativeSrc": "1484:16:15",
																"nodeType": "YulFunctionCall",
																"src": "1484:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1475:5:15",
																	"nodeType": "YulTypedName",
																	"src": "1475:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1534:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1534:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1509:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "1509:24:15"
																},
																"nativeSrc": "1509:31:15",
																"nodeType": "YulFunctionCall",
																"src": "1509:31:15"
															},
															"nativeSrc": "1509:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "1509:31:15"
														},
														{
															"nativeSrc": "1549:15:15",
															"nodeType": "YulAssignment",
															"src": "1549:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "1559:5:15",
																"nodeType": "YulIdentifier",
																"src": "1559:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1549:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1549:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IWETH_$1976_fromMemory",
												"nativeSrc": "1305:265:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:15",
														"nodeType": "YulTypedName",
														"src": "1366:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1377:7:15",
														"nodeType": "YulTypedName",
														"src": "1377:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1389:6:15",
														"nodeType": "YulTypedName",
														"src": "1389:6:15",
														"type": ""
													}
												],
												"src": "1305:265:15"
											},
											{
												"body": {
													"nativeSrc": "1656:103:15",
													"nodeType": "YulBlock",
													"src": "1656:103:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1702:16:15",
																"nodeType": "YulBlock",
																"src": "1702:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1711:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1711:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1714:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1714:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1704:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1704:6:15"
																			},
																			"nativeSrc": "1704:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1704:12:15"
																		},
																		"nativeSrc": "1704:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1704:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1677:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1677:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1686:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1686:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1673:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1673:3:15"
																		},
																		"nativeSrc": "1673:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1673:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1698:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1698:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1669:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1669:3:15"
																},
																"nativeSrc": "1669:32:15",
																"nodeType": "YulFunctionCall",
																"src": "1669:32:15"
															},
															"nativeSrc": "1666:52:15",
															"nodeType": "YulIf",
															"src": "1666:52:15"
														},
														{
															"nativeSrc": "1727:26:15",
															"nodeType": "YulAssignment",
															"src": "1727:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1743:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1743:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1737:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1737:5:15"
																},
																"nativeSrc": "1737:16:15",
																"nodeType": "YulFunctionCall",
																"src": "1737:16:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1727:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1727:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "1575:184:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1622:9:15",
														"nodeType": "YulTypedName",
														"src": "1622:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1633:7:15",
														"nodeType": "YulTypedName",
														"src": "1633:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1645:6:15",
														"nodeType": "YulTypedName",
														"src": "1645:6:15",
														"type": ""
													}
												],
												"src": "1575:184:15"
											},
											{
												"body": {
													"nativeSrc": "1796:95:15",
													"nodeType": "YulBlock",
													"src": "1796:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1813:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1813:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1820:3:15",
																				"nodeType": "YulLiteral",
																				"src": "1820:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1825:10:15",
																				"nodeType": "YulLiteral",
																				"src": "1825:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1816:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1816:3:15"
																		},
																		"nativeSrc": "1816:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1816:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1806:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1806:6:15"
																},
																"nativeSrc": "1806:31:15",
																"nodeType": "YulFunctionCall",
																"src": "1806:31:15"
															},
															"nativeSrc": "1806:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "1806:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1853:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1853:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1856:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1856:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1846:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1846:6:15"
																},
																"nativeSrc": "1846:15:15",
																"nodeType": "YulFunctionCall",
																"src": "1846:15:15"
															},
															"nativeSrc": "1846:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "1846:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1877:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1877:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1880:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1880:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1870:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1870:6:15"
																},
																"nativeSrc": "1870:15:15",
																"nodeType": "YulFunctionCall",
																"src": "1870:15:15"
															},
															"nativeSrc": "1870:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "1870:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1764:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1764:127:15"
											},
											{
												"body": {
													"nativeSrc": "1945:79:15",
													"nodeType": "YulBlock",
													"src": "1945:79:15",
													"statements": [
														{
															"nativeSrc": "1955:17:15",
															"nodeType": "YulAssignment",
															"src": "1955:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1967:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "1967:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1970:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "1970:1:15"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1963:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:15"
																},
																"nativeSrc": "1963:9:15",
																"nodeType": "YulFunctionCall",
																"src": "1963:9:15"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "1955:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1955:4:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1996:22:15",
																"nodeType": "YulBlock",
																"src": "1996:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1998:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "1998:16:15"
																			},
																			"nativeSrc": "1998:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1998:18:15"
																		},
																		"nativeSrc": "1998:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "1987:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "1987:4:15"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "1993:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "1993:1:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1984:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1984:2:15"
																},
																"nativeSrc": "1984:11:15",
																"nodeType": "YulFunctionCall",
																"src": "1984:11:15"
															},
															"nativeSrc": "1981:37:15",
															"nodeType": "YulIf",
															"src": "1981:37:15"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "1896:128:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1927:1:15",
														"nodeType": "YulTypedName",
														"src": "1927:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1930:1:15",
														"nodeType": "YulTypedName",
														"src": "1930:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "1936:4:15",
														"nodeType": "YulTypedName",
														"src": "1936:4:15",
														"type": ""
													}
												],
												"src": "1896:128:15"
											},
											{
												"body": {
													"nativeSrc": "2061:95:15",
													"nodeType": "YulBlock",
													"src": "2061:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2078:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2078:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2085:3:15",
																				"nodeType": "YulLiteral",
																				"src": "2085:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2090:10:15",
																				"nodeType": "YulLiteral",
																				"src": "2090:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2081:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2081:3:15"
																		},
																		"nativeSrc": "2081:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2081:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2071:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2071:6:15"
																},
																"nativeSrc": "2071:31:15",
																"nodeType": "YulFunctionCall",
																"src": "2071:31:15"
															},
															"nativeSrc": "2071:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "2071:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2118:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2121:4:15",
																		"nodeType": "YulLiteral",
																		"src": "2121:4:15",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2111:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2111:6:15"
																},
																"nativeSrc": "2111:15:15",
																"nodeType": "YulFunctionCall",
																"src": "2111:15:15"
															},
															"nativeSrc": "2111:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "2111:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2142:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2142:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2145:4:15",
																		"nodeType": "YulLiteral",
																		"src": "2145:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2135:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2135:6:15"
																},
																"nativeSrc": "2135:15:15",
																"nodeType": "YulFunctionCall",
																"src": "2135:15:15"
															},
															"nativeSrc": "2135:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "2135:15:15"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "2029:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "2029:127:15"
											},
											{
												"body": {
													"nativeSrc": "2209:77:15",
													"nodeType": "YulBlock",
													"src": "2209:77:15",
													"statements": [
														{
															"nativeSrc": "2219:16:15",
															"nodeType": "YulAssignment",
															"src": "2219:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2230:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "2230:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2233:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "2233:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2226:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2226:3:15"
																},
																"nativeSrc": "2226:9:15",
																"nodeType": "YulFunctionCall",
																"src": "2226:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2219:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2219:3:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2258:22:15",
																"nodeType": "YulBlock",
																"src": "2258:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2260:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "2260:16:15"
																			},
																			"nativeSrc": "2260:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2260:18:15"
																		},
																		"nativeSrc": "2260:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2260:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2250:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "2250:1:15"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2253:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2253:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2247:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2247:2:15"
																},
																"nativeSrc": "2247:10:15",
																"nodeType": "YulFunctionCall",
																"src": "2247:10:15"
															},
															"nativeSrc": "2244:36:15",
															"nodeType": "YulIf",
															"src": "2244:36:15"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2161:125:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2192:1:15",
														"nodeType": "YulTypedName",
														"src": "2192:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2195:1:15",
														"nodeType": "YulTypedName",
														"src": "2195:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2201:3:15",
														"nodeType": "YulTypedName",
														"src": "2201:3:15",
														"type": ""
													}
												],
												"src": "2161:125:15"
											},
											{
												"body": {
													"nativeSrc": "2357:184:15",
													"nodeType": "YulBlock",
													"src": "2357:184:15",
													"statements": [
														{
															"nativeSrc": "2367:10:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2367:10:15",
															"value": {
																"kind": "number",
																"nativeSrc": "2376:1:15",
																"nodeType": "YulLiteral",
																"src": "2376:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2371:1:15",
																	"nodeType": "YulTypedName",
																	"src": "2371:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2436:63:15",
																"nodeType": "YulBlock",
																"src": "2436:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "2461:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "2461:3:15"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "2466:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "2466:1:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2457:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "2457:3:15"
																					},
																					"nativeSrc": "2457:11:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2457:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "2480:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "2480:3:15"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "2485:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "2485:1:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2476:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "2476:3:15"
																							},
																							"nativeSrc": "2476:11:15",
																							"nodeType": "YulFunctionCall",
																							"src": "2476:11:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2470:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "2470:5:15"
																					},
																					"nativeSrc": "2470:18:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2470:18:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2450:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2450:6:15"
																			},
																			"nativeSrc": "2450:39:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2450:39:15"
																		},
																		"nativeSrc": "2450:39:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2450:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2397:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "2397:1:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2400:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2400:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2394:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2394:2:15"
																},
																"nativeSrc": "2394:13:15",
																"nodeType": "YulFunctionCall",
																"src": "2394:13:15"
															},
															"nativeSrc": "2386:113:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2408:19:15",
																"nodeType": "YulBlock",
																"src": "2408:19:15",
																"statements": [
																	{
																		"nativeSrc": "2410:15:15",
																		"nodeType": "YulAssignment",
																		"src": "2410:15:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2419:1:15",
																					"nodeType": "YulIdentifier",
																					"src": "2419:1:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2422:2:15",
																					"nodeType": "YulLiteral",
																					"src": "2422:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2415:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2415:3:15"
																			},
																			"nativeSrc": "2415:10:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2415:10:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2410:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "2410:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2390:3:15",
																"nodeType": "YulBlock",
																"src": "2390:3:15",
																"statements": []
															},
															"src": "2386:113:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2519:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2519:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2524:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2524:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2515:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2515:3:15"
																		},
																		"nativeSrc": "2515:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2515:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2533:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2533:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2508:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2508:6:15"
																},
																"nativeSrc": "2508:27:15",
																"nodeType": "YulFunctionCall",
																"src": "2508:27:15"
															},
															"nativeSrc": "2508:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "2508:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2291:250:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2335:3:15",
														"nodeType": "YulTypedName",
														"src": "2335:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2340:3:15",
														"nodeType": "YulTypedName",
														"src": "2340:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2345:6:15",
														"nodeType": "YulTypedName",
														"src": "2345:6:15",
														"type": ""
													}
												],
												"src": "2291:250:15"
											},
											{
												"body": {
													"nativeSrc": "2683:150:15",
													"nodeType": "YulBlock",
													"src": "2683:150:15",
													"statements": [
														{
															"nativeSrc": "2693:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2693:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2713:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2713:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2707:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2707:5:15"
																},
																"nativeSrc": "2707:13:15",
																"nodeType": "YulFunctionCall",
																"src": "2707:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2697:6:15",
																	"nodeType": "YulTypedName",
																	"src": "2697:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2768:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2768:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2776:4:15",
																				"nodeType": "YulLiteral",
																				"src": "2776:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2764:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2764:3:15"
																		},
																		"nativeSrc": "2764:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2764:17:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2783:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2788:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2788:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2729:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "2729:34:15"
																},
																"nativeSrc": "2729:66:15",
																"nodeType": "YulFunctionCall",
																"src": "2729:66:15"
															},
															"nativeSrc": "2729:66:15",
															"nodeType": "YulExpressionStatement",
															"src": "2729:66:15"
														},
														{
															"nativeSrc": "2804:23:15",
															"nodeType": "YulAssignment",
															"src": "2804:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2815:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2815:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2820:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2820:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2811:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2811:3:15"
																},
																"nativeSrc": "2811:16:15",
																"nodeType": "YulFunctionCall",
																"src": "2811:16:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2804:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "2546:287:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2659:3:15",
														"nodeType": "YulTypedName",
														"src": "2659:3:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2664:6:15",
														"nodeType": "YulTypedName",
														"src": "2664:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2675:3:15",
														"nodeType": "YulTypedName",
														"src": "2675:3:15",
														"type": ""
													}
												],
												"src": "2546:287:15"
											},
											{
												"body": {
													"nativeSrc": "2917:194:15",
													"nodeType": "YulBlock",
													"src": "2917:194:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2963:16:15",
																"nodeType": "YulBlock",
																"src": "2963:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2972:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2972:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2975:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2975:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2965:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2965:6:15"
																			},
																			"nativeSrc": "2965:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2965:12:15"
																		},
																		"nativeSrc": "2965:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2938:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2938:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2947:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2947:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2934:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2934:3:15"
																		},
																		"nativeSrc": "2934:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2934:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2959:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2959:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2930:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2930:3:15"
																},
																"nativeSrc": "2930:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2930:32:15"
															},
															"nativeSrc": "2927:52:15",
															"nodeType": "YulIf",
															"src": "2927:52:15"
														},
														{
															"nativeSrc": "2988:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2988:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3007:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3007:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3001:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3001:5:15"
																},
																"nativeSrc": "3001:16:15",
																"nodeType": "YulFunctionCall",
																"src": "3001:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2992:5:15",
																	"nodeType": "YulTypedName",
																	"src": "2992:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3065:16:15",
																"nodeType": "YulBlock",
																"src": "3065:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3074:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3074:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3077:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3077:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3067:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3067:6:15"
																			},
																			"nativeSrc": "3067:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3067:12:15"
																		},
																		"nativeSrc": "3067:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3067:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3039:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3039:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3050:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "3050:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3057:4:15",
																						"nodeType": "YulLiteral",
																						"src": "3057:4:15",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3046:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3046:3:15"
																				},
																				"nativeSrc": "3046:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3046:16:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3036:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3036:2:15"
																		},
																		"nativeSrc": "3036:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3036:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3029:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3029:6:15"
																},
																"nativeSrc": "3029:35:15",
																"nodeType": "YulFunctionCall",
																"src": "3029:35:15"
															},
															"nativeSrc": "3026:55:15",
															"nodeType": "YulIf",
															"src": "3026:55:15"
														},
														{
															"nativeSrc": "3090:15:15",
															"nodeType": "YulAssignment",
															"src": "3090:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "3100:5:15",
																"nodeType": "YulIdentifier",
																"src": "3100:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3090:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3090:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "2838:273:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2883:9:15",
														"nodeType": "YulTypedName",
														"src": "2883:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2894:7:15",
														"nodeType": "YulTypedName",
														"src": "2894:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2906:6:15",
														"nodeType": "YulTypedName",
														"src": "2906:6:15",
														"type": ""
													}
												],
												"src": "2838:273:15"
											},
											{
												"body": {
													"nativeSrc": "3290:173:15",
													"nodeType": "YulBlock",
													"src": "3290:173:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3307:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3307:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3318:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3318:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3300:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3300:6:15"
																},
																"nativeSrc": "3300:21:15",
																"nodeType": "YulFunctionCall",
																"src": "3300:21:15"
															},
															"nativeSrc": "3300:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "3300:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3341:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3341:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3352:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3352:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3337:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3337:3:15"
																		},
																		"nativeSrc": "3337:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3337:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3357:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3357:2:15",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3330:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3330:6:15"
																},
																"nativeSrc": "3330:30:15",
																"nodeType": "YulFunctionCall",
																"src": "3330:30:15"
															},
															"nativeSrc": "3330:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "3330:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3380:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3380:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3391:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3391:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3376:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3376:3:15"
																		},
																		"nativeSrc": "3376:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3376:18:15"
																	},
																	{
																		"hexValue": "546f6f206d616e7920646563696d616c20706c61636573",
																		"kind": "string",
																		"nativeSrc": "3396:25:15",
																		"nodeType": "YulLiteral",
																		"src": "3396:25:15",
																		"type": "",
																		"value": "Too many decimal places"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3369:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3369:6:15"
																},
																"nativeSrc": "3369:53:15",
																"nodeType": "YulFunctionCall",
																"src": "3369:53:15"
															},
															"nativeSrc": "3369:53:15",
															"nodeType": "YulExpressionStatement",
															"src": "3369:53:15"
														},
														{
															"nativeSrc": "3431:26:15",
															"nodeType": "YulAssignment",
															"src": "3431:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3443:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3443:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3454:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3454:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3439:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3439:3:15"
																},
																"nativeSrc": "3439:18:15",
																"nodeType": "YulFunctionCall",
																"src": "3439:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3431:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3431:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f980939fccf74afb41aae851bf3fecac407639d4d59480a38f30e6ca14fe2c59__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3116:347:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3267:9:15",
														"nodeType": "YulTypedName",
														"src": "3267:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3281:4:15",
														"nodeType": "YulTypedName",
														"src": "3281:4:15",
														"type": ""
													}
												],
												"src": "3116:347:15"
											},
											{
												"body": {
													"nativeSrc": "3667:289:15",
													"nodeType": "YulBlock",
													"src": "3667:289:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3684:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3684:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3697:3:15",
																						"nodeType": "YulLiteral",
																						"src": "3697:3:15",
																						"type": "",
																						"value": "248"
																					},
																					{
																						"name": "value0",
																						"nativeSrc": "3702:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3702:6:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3693:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3693:3:15"
																				},
																				"nativeSrc": "3693:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3693:16:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3715:3:15",
																						"nodeType": "YulLiteral",
																						"src": "3715:3:15",
																						"type": "",
																						"value": "248"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3720:3:15",
																						"nodeType": "YulLiteral",
																						"src": "3720:3:15",
																						"type": "",
																						"value": "255"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3711:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3711:3:15"
																				},
																				"nativeSrc": "3711:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3711:13:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3689:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3689:3:15"
																		},
																		"nativeSrc": "3689:36:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3689:36:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3677:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3677:6:15"
																},
																"nativeSrc": "3677:49:15",
																"nodeType": "YulFunctionCall",
																"src": "3677:49:15"
															},
															"nativeSrc": "3677:49:15",
															"nodeType": "YulExpressionStatement",
															"src": "3677:49:15"
														},
														{
															"nativeSrc": "3735:41:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3735:41:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3749:26:15",
																		"nodeType": "YulLiteral",
																		"src": "3749:26:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3745:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3745:3:15"
																},
																"nativeSrc": "3745:31:15",
																"nodeType": "YulFunctionCall",
																"src": "3745:31:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3739:2:15",
																	"nodeType": "YulTypedName",
																	"src": "3739:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "3796:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3796:3:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3801:1:15",
																				"nodeType": "YulLiteral",
																				"src": "3801:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3792:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3792:3:15"
																		},
																		"nativeSrc": "3792:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3792:11:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3813:2:15",
																						"nodeType": "YulLiteral",
																						"src": "3813:2:15",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value1",
																						"nativeSrc": "3817:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3817:6:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3809:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3809:3:15"
																				},
																				"nativeSrc": "3809:15:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3809:15:15"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3826:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "3826:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3805:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3805:3:15"
																		},
																		"nativeSrc": "3805:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3805:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3785:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3785:6:15"
																},
																"nativeSrc": "3785:45:15",
																"nodeType": "YulFunctionCall",
																"src": "3785:45:15"
															},
															"nativeSrc": "3785:45:15",
															"nodeType": "YulExpressionStatement",
															"src": "3785:45:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "3850:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3850:3:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3855:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3855:2:15",
																				"type": "",
																				"value": "21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3846:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3846:3:15"
																		},
																		"nativeSrc": "3846:12:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3846:12:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3868:2:15",
																						"nodeType": "YulLiteral",
																						"src": "3868:2:15",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value2",
																						"nativeSrc": "3872:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3872:6:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3864:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3864:3:15"
																				},
																				"nativeSrc": "3864:15:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3864:15:15"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3881:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "3881:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3860:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3860:3:15"
																		},
																		"nativeSrc": "3860:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3860:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3839:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3839:6:15"
																},
																"nativeSrc": "3839:46:15",
																"nodeType": "YulFunctionCall",
																"src": "3839:46:15"
															},
															"nativeSrc": "3839:46:15",
															"nodeType": "YulExpressionStatement",
															"src": "3839:46:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "3905:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3905:3:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3910:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3910:2:15",
																				"type": "",
																				"value": "41"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3901:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3901:3:15"
																		},
																		"nativeSrc": "3901:12:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3901:12:15"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "3915:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3915:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3894:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3894:6:15"
																},
																"nativeSrc": "3894:28:15",
																"nodeType": "YulFunctionCall",
																"src": "3894:28:15"
															},
															"nativeSrc": "3894:28:15",
															"nodeType": "YulExpressionStatement",
															"src": "3894:28:15"
														},
														{
															"nativeSrc": "3931:19:15",
															"nodeType": "YulAssignment",
															"src": "3931:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3942:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3942:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3947:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3947:2:15",
																		"type": "",
																		"value": "73"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3938:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3938:3:15"
																},
																"nativeSrc": "3938:12:15",
																"nodeType": "YulFunctionCall",
																"src": "3938:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3931:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3931:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint8_t_address_t_address_t_uint256__to_t_uint8_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "3468:488:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3619:3:15",
														"nodeType": "YulTypedName",
														"src": "3619:3:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3624:6:15",
														"nodeType": "YulTypedName",
														"src": "3624:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3632:6:15",
														"nodeType": "YulTypedName",
														"src": "3632:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3640:6:15",
														"nodeType": "YulTypedName",
														"src": "3640:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3648:6:15",
														"nodeType": "YulTypedName",
														"src": "3648:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3659:3:15",
														"nodeType": "YulTypedName",
														"src": "3659:3:15",
														"type": ""
													}
												],
												"src": "3468:488:15"
											},
											{
												"body": {
													"nativeSrc": "4010:221:15",
													"nodeType": "YulBlock",
													"src": "4010:221:15",
													"statements": [
														{
															"nativeSrc": "4020:26:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4020:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4040:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4040:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4034:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4034:5:15"
																},
																"nativeSrc": "4034:12:15",
																"nodeType": "YulFunctionCall",
																"src": "4034:12:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4024:6:15",
																	"nodeType": "YulTypedName",
																	"src": "4024:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4062:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4062:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4067:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4067:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4055:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4055:6:15"
																},
																"nativeSrc": "4055:19:15",
																"nodeType": "YulFunctionCall",
																"src": "4055:19:15"
															},
															"nativeSrc": "4055:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "4055:19:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4122:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4122:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4129:4:15",
																				"nodeType": "YulLiteral",
																				"src": "4129:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4118:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4118:3:15"
																		},
																		"nativeSrc": "4118:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4118:16:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "4140:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "4140:3:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4145:4:15",
																				"nodeType": "YulLiteral",
																				"src": "4145:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4136:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4136:3:15"
																		},
																		"nativeSrc": "4136:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4136:14:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4152:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4152:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "4083:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "4083:34:15"
																},
																"nativeSrc": "4083:76:15",
																"nodeType": "YulFunctionCall",
																"src": "4083:76:15"
															},
															"nativeSrc": "4083:76:15",
															"nodeType": "YulExpressionStatement",
															"src": "4083:76:15"
														},
														{
															"nativeSrc": "4168:57:15",
															"nodeType": "YulAssignment",
															"src": "4168:57:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "4183:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "4183:3:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "4196:6:15",
																								"nodeType": "YulIdentifier",
																								"src": "4196:6:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4204:2:15",
																								"nodeType": "YulLiteral",
																								"src": "4204:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4192:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "4192:3:15"
																						},
																						"nativeSrc": "4192:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "4192:15:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4213:2:15",
																								"nodeType": "YulLiteral",
																								"src": "4213:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "4209:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "4209:3:15"
																						},
																						"nativeSrc": "4209:7:15",
																						"nodeType": "YulFunctionCall",
																						"src": "4209:7:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4188:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4188:3:15"
																				},
																				"nativeSrc": "4188:29:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4188:29:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4179:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4179:3:15"
																		},
																		"nativeSrc": "4179:39:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4179:39:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4220:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4220:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4175:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4175:3:15"
																},
																"nativeSrc": "4175:50:15",
																"nodeType": "YulFunctionCall",
																"src": "4175:50:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4168:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4168:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nativeSrc": "3961:270:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3987:5:15",
														"nodeType": "YulTypedName",
														"src": "3987:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3994:3:15",
														"nodeType": "YulTypedName",
														"src": "3994:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4002:3:15",
														"nodeType": "YulTypedName",
														"src": "4002:3:15",
														"type": ""
													}
												],
												"src": "3961:270:15"
											},
											{
												"body": {
													"nativeSrc": "4500:373:15",
													"nodeType": "YulBlock",
													"src": "4500:373:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4517:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4517:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4532:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4532:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4548:3:15",
																								"nodeType": "YulLiteral",
																								"src": "4548:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4553:1:15",
																								"nodeType": "YulLiteral",
																								"src": "4553:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4544:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "4544:3:15"
																						},
																						"nativeSrc": "4544:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "4544:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4557:1:15",
																						"nodeType": "YulLiteral",
																						"src": "4557:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4540:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4540:3:15"
																				},
																				"nativeSrc": "4540:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4540:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4528:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4528:3:15"
																		},
																		"nativeSrc": "4528:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4528:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4510:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4510:6:15"
																},
																"nativeSrc": "4510:51:15",
																"nodeType": "YulFunctionCall",
																"src": "4510:51:15"
															},
															"nativeSrc": "4510:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "4510:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4581:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4581:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4592:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4592:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4577:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4577:3:15"
																		},
																		"nativeSrc": "4577:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4577:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4597:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4597:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4570:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4570:6:15"
																},
																"nativeSrc": "4570:34:15",
																"nodeType": "YulFunctionCall",
																"src": "4570:34:15"
															},
															"nativeSrc": "4570:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "4570:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4624:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4624:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4635:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4635:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4620:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4620:3:15"
																		},
																		"nativeSrc": "4620:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4620:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "4644:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4644:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4652:6:15",
																				"nodeType": "YulLiteral",
																				"src": "4652:6:15",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4640:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4640:3:15"
																		},
																		"nativeSrc": "4640:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4640:19:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4613:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4613:6:15"
																},
																"nativeSrc": "4613:47:15",
																"nodeType": "YulFunctionCall",
																"src": "4613:47:15"
															},
															"nativeSrc": "4613:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "4613:47:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4680:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4680:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4691:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4691:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4676:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4676:3:15"
																		},
																		"nativeSrc": "4676:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4676:18:15"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "4696:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4696:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4669:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4669:6:15"
																},
																"nativeSrc": "4669:34:15",
																"nodeType": "YulFunctionCall",
																"src": "4669:34:15"
															},
															"nativeSrc": "4669:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "4669:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4723:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4723:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4734:3:15",
																				"nodeType": "YulLiteral",
																				"src": "4734:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4719:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4719:3:15"
																		},
																		"nativeSrc": "4719:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4719:19:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "4744:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4744:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4752:10:15",
																				"nodeType": "YulLiteral",
																				"src": "4752:10:15",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4740:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4740:3:15"
																		},
																		"nativeSrc": "4740:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4740:23:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4712:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4712:6:15"
																},
																"nativeSrc": "4712:52:15",
																"nodeType": "YulFunctionCall",
																"src": "4712:52:15"
															},
															"nativeSrc": "4712:52:15",
															"nodeType": "YulExpressionStatement",
															"src": "4712:52:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4784:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4784:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4795:3:15",
																				"nodeType": "YulLiteral",
																				"src": "4795:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4780:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4780:3:15"
																		},
																		"nativeSrc": "4780:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4780:19:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4801:3:15",
																		"nodeType": "YulLiteral",
																		"src": "4801:3:15",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4773:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4773:6:15"
																},
																"nativeSrc": "4773:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4773:32:15"
															},
															"nativeSrc": "4773:32:15",
															"nodeType": "YulExpressionStatement",
															"src": "4773:32:15"
														},
														{
															"nativeSrc": "4814:53:15",
															"nodeType": "YulAssignment",
															"src": "4814:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "4839:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4839:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4851:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4851:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4862:3:15",
																				"nodeType": "YulLiteral",
																				"src": "4862:3:15",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4847:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4847:3:15"
																		},
																		"nativeSrc": "4847:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4847:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nativeSrc": "4822:16:15",
																	"nodeType": "YulIdentifier",
																	"src": "4822:16:15"
																},
																"nativeSrc": "4822:45:15",
																"nodeType": "YulFunctionCall",
																"src": "4822:45:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4814:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4814:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint16_t_bytes32_t_rational_0_by_1_t_bytes_memory_ptr__to_t_address_t_uint256_t_uint16_t_bytes32_t_uint32_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "4236:637:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4429:9:15",
														"nodeType": "YulTypedName",
														"src": "4429:9:15",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "4440:6:15",
														"nodeType": "YulTypedName",
														"src": "4440:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4448:6:15",
														"nodeType": "YulTypedName",
														"src": "4448:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4456:6:15",
														"nodeType": "YulTypedName",
														"src": "4456:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4464:6:15",
														"nodeType": "YulTypedName",
														"src": "4464:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4472:6:15",
														"nodeType": "YulTypedName",
														"src": "4472:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4480:6:15",
														"nodeType": "YulTypedName",
														"src": "4480:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4491:4:15",
														"nodeType": "YulTypedName",
														"src": "4491:4:15",
														"type": ""
													}
												],
												"src": "4236:637:15"
											},
											{
												"body": {
													"nativeSrc": "4958:208:15",
													"nodeType": "YulBlock",
													"src": "4958:208:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5004:16:15",
																"nodeType": "YulBlock",
																"src": "5004:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5013:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5013:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5016:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5016:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5006:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5006:6:15"
																			},
																			"nativeSrc": "5006:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5006:12:15"
																		},
																		"nativeSrc": "5006:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5006:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4979:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4979:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4988:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4988:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4975:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4975:3:15"
																		},
																		"nativeSrc": "4975:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4975:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5000:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5000:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4971:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4971:3:15"
																},
																"nativeSrc": "4971:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4971:32:15"
															},
															"nativeSrc": "4968:52:15",
															"nodeType": "YulIf",
															"src": "4968:52:15"
														},
														{
															"nativeSrc": "5029:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5029:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5048:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5048:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5042:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "5042:5:15"
																},
																"nativeSrc": "5042:16:15",
																"nodeType": "YulFunctionCall",
																"src": "5042:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5033:5:15",
																	"nodeType": "YulTypedName",
																	"src": "5033:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5120:16:15",
																"nodeType": "YulBlock",
																"src": "5120:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5129:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5129:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5132:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5132:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5122:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5122:6:15"
																			},
																			"nativeSrc": "5122:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5122:12:15"
																		},
																		"nativeSrc": "5122:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5122:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5080:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5080:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5091:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "5091:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5098:18:15",
																						"nodeType": "YulLiteral",
																						"src": "5098:18:15",
																						"type": "",
																						"value": "0xffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "5087:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5087:3:15"
																				},
																				"nativeSrc": "5087:30:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5087:30:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5077:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "5077:2:15"
																		},
																		"nativeSrc": "5077:41:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5077:41:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5070:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5070:6:15"
																},
																"nativeSrc": "5070:49:15",
																"nodeType": "YulFunctionCall",
																"src": "5070:49:15"
															},
															"nativeSrc": "5067:69:15",
															"nodeType": "YulIf",
															"src": "5067:69:15"
														},
														{
															"nativeSrc": "5145:15:15",
															"nodeType": "YulAssignment",
															"src": "5145:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "5155:5:15",
																"nodeType": "YulIdentifier",
																"src": "5155:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5145:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5145:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint64_fromMemory",
												"nativeSrc": "4878:288:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4924:9:15",
														"nodeType": "YulTypedName",
														"src": "4924:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4935:7:15",
														"nodeType": "YulTypedName",
														"src": "4935:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4947:6:15",
														"nodeType": "YulTypedName",
														"src": "4947:6:15",
														"type": ""
													}
												],
												"src": "4878:288:15"
											},
											{
												"body": {
													"nativeSrc": "5349:212:15",
													"nodeType": "YulBlock",
													"src": "5349:212:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5366:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5366:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5381:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5381:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5389:10:15",
																				"nodeType": "YulLiteral",
																				"src": "5389:10:15",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5377:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5377:3:15"
																		},
																		"nativeSrc": "5377:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5377:23:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5359:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5359:6:15"
																},
																"nativeSrc": "5359:42:15",
																"nodeType": "YulFunctionCall",
																"src": "5359:42:15"
															},
															"nativeSrc": "5359:42:15",
															"nodeType": "YulExpressionStatement",
															"src": "5359:42:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5421:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5421:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5432:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5432:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5417:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5417:3:15"
																		},
																		"nativeSrc": "5417:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5417:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5437:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5437:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5410:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5410:6:15"
																},
																"nativeSrc": "5410:30:15",
																"nodeType": "YulFunctionCall",
																"src": "5410:30:15"
															},
															"nativeSrc": "5410:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "5410:30:15"
														},
														{
															"nativeSrc": "5449:52:15",
															"nodeType": "YulAssignment",
															"src": "5449:52:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5474:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5474:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5486:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5486:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5497:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5497:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5482:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5482:3:15"
																		},
																		"nativeSrc": "5482:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5482:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nativeSrc": "5457:16:15",
																	"nodeType": "YulIdentifier",
																	"src": "5457:16:15"
																},
																"nativeSrc": "5457:44:15",
																"nodeType": "YulFunctionCall",
																"src": "5457:44:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5449:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5449:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5521:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5521:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5532:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5532:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5517:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5517:3:15"
																		},
																		"nativeSrc": "5517:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5517:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "5541:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5541:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5549:4:15",
																				"nodeType": "YulLiteral",
																				"src": "5549:4:15",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5537:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5537:3:15"
																		},
																		"nativeSrc": "5537:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5537:17:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5510:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5510:6:15"
																},
																"nativeSrc": "5510:45:15",
																"nodeType": "YulFunctionCall",
																"src": "5510:45:15"
															},
															"nativeSrc": "5510:45:15",
															"nodeType": "YulExpressionStatement",
															"src": "5510:45:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_0_by_1_t_bytes_memory_ptr_t_uint8__to_t_uint32_t_bytes_memory_ptr_t_uint8__fromStack_reversed",
												"nativeSrc": "5171:390:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5302:9:15",
														"nodeType": "YulTypedName",
														"src": "5302:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5313:6:15",
														"nodeType": "YulTypedName",
														"src": "5313:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5321:6:15",
														"nodeType": "YulTypedName",
														"src": "5321:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5329:6:15",
														"nodeType": "YulTypedName",
														"src": "5329:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5340:4:15",
														"nodeType": "YulTypedName",
														"src": "5340:4:15",
														"type": ""
													}
												],
												"src": "5171:390:15"
											},
											{
												"body": {
													"nativeSrc": "5774:259:15",
													"nodeType": "YulBlock",
													"src": "5774:259:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5791:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5791:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5806:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5806:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5814:6:15",
																				"nodeType": "YulLiteral",
																				"src": "5814:6:15",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5802:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5802:3:15"
																		},
																		"nativeSrc": "5802:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5802:19:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5784:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5784:6:15"
																},
																"nativeSrc": "5784:38:15",
																"nodeType": "YulFunctionCall",
																"src": "5784:38:15"
															},
															"nativeSrc": "5784:38:15",
															"nodeType": "YulExpressionStatement",
															"src": "5784:38:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5842:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5842:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5853:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5853:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5838:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5838:3:15"
																		},
																		"nativeSrc": "5838:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5838:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5858:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5858:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5831:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5831:6:15"
																},
																"nativeSrc": "5831:34:15",
																"nodeType": "YulFunctionCall",
																"src": "5831:34:15"
															},
															"nativeSrc": "5831:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "5831:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5885:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5885:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5896:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5896:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5881:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5881:3:15"
																		},
																		"nativeSrc": "5881:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5881:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "5905:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5905:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5913:10:15",
																				"nodeType": "YulLiteral",
																				"src": "5913:10:15",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5901:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5901:3:15"
																		},
																		"nativeSrc": "5901:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5901:23:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5874:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5874:6:15"
																},
																"nativeSrc": "5874:51:15",
																"nodeType": "YulFunctionCall",
																"src": "5874:51:15"
															},
															"nativeSrc": "5874:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "5874:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5945:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5945:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5956:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5956:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5941:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5941:3:15"
																		},
																		"nativeSrc": "5941:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5941:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5961:3:15",
																		"nodeType": "YulLiteral",
																		"src": "5961:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5934:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5934:6:15"
																},
																"nativeSrc": "5934:31:15",
																"nodeType": "YulFunctionCall",
																"src": "5934:31:15"
															},
															"nativeSrc": "5934:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "5934:31:15"
														},
														{
															"nativeSrc": "5974:53:15",
															"nodeType": "YulAssignment",
															"src": "5974:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "5999:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5999:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6011:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6011:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6022:3:15",
																				"nodeType": "YulLiteral",
																				"src": "6022:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6007:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6007:3:15"
																		},
																		"nativeSrc": "6007:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6007:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nativeSrc": "5982:16:15",
																	"nodeType": "YulIdentifier",
																	"src": "5982:16:15"
																},
																"nativeSrc": "5982:45:15",
																"nodeType": "YulFunctionCall",
																"src": "5982:45:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5974:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5974:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16_t_bytes32_t_rational_0_by_1_t_bytes_memory_ptr__to_t_uint16_t_bytes32_t_uint32_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "5566:467:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5719:9:15",
														"nodeType": "YulTypedName",
														"src": "5719:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5730:6:15",
														"nodeType": "YulTypedName",
														"src": "5730:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5738:6:15",
														"nodeType": "YulTypedName",
														"src": "5738:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5746:6:15",
														"nodeType": "YulTypedName",
														"src": "5746:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5754:6:15",
														"nodeType": "YulTypedName",
														"src": "5754:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5765:4:15",
														"nodeType": "YulTypedName",
														"src": "5765:4:15",
														"type": ""
													}
												],
												"src": "5566:467:15"
											},
											{
												"body": {
													"nativeSrc": "6085:104:15",
													"nodeType": "YulBlock",
													"src": "6085:104:15",
													"statements": [
														{
															"nativeSrc": "6095:39:15",
															"nodeType": "YulAssignment",
															"src": "6095:39:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "6111:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "6111:1:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6114:4:15",
																				"nodeType": "YulLiteral",
																				"src": "6114:4:15",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6107:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6107:3:15"
																		},
																		"nativeSrc": "6107:12:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6107:12:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "6125:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "6125:1:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6128:4:15",
																				"nodeType": "YulLiteral",
																				"src": "6128:4:15",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6121:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6121:3:15"
																		},
																		"nativeSrc": "6121:12:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6121:12:15"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6103:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6103:3:15"
																},
																"nativeSrc": "6103:31:15",
																"nodeType": "YulFunctionCall",
																"src": "6103:31:15"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6095:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6095:4:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6161:22:15",
																"nodeType": "YulBlock",
																"src": "6161:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6163:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "6163:16:15"
																			},
																			"nativeSrc": "6163:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6163:18:15"
																		},
																		"nativeSrc": "6163:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6163:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6149:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "6149:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6155:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6155:4:15",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6146:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "6146:2:15"
																},
																"nativeSrc": "6146:14:15",
																"nodeType": "YulFunctionCall",
																"src": "6146:14:15"
															},
															"nativeSrc": "6143:40:15",
															"nodeType": "YulIf",
															"src": "6143:40:15"
														}
													]
												},
												"name": "checked_sub_t_uint8",
												"nativeSrc": "6038:151:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6067:1:15",
														"nodeType": "YulTypedName",
														"src": "6067:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6070:1:15",
														"nodeType": "YulTypedName",
														"src": "6070:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6076:4:15",
														"nodeType": "YulTypedName",
														"src": "6076:4:15",
														"type": ""
													}
												],
												"src": "6038:151:15"
											},
											{
												"body": {
													"nativeSrc": "6258:352:15",
													"nodeType": "YulBlock",
													"src": "6258:352:15",
													"statements": [
														{
															"nativeSrc": "6268:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6268:16:15",
															"value": {
																"kind": "number",
																"nativeSrc": "6283:1:15",
																"nodeType": "YulLiteral",
																"src": "6283:1:15",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "6272:7:15",
																	"nodeType": "YulTypedName",
																	"src": "6272:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6293:10:15",
															"nodeType": "YulAssignment",
															"src": "6293:10:15",
															"value": {
																"kind": "number",
																"nativeSrc": "6302:1:15",
																"nodeType": "YulLiteral",
																"src": "6302:1:15",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6293:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "6293:5:15"
																}
															]
														},
														{
															"nativeSrc": "6312:13:15",
															"nodeType": "YulAssignment",
															"src": "6312:13:15",
															"value": {
																"name": "_base",
																"nativeSrc": "6320:5:15",
																"nodeType": "YulIdentifier",
																"src": "6320:5:15"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "6312:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6312:4:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6376:228:15",
																"nodeType": "YulBlock",
																"src": "6376:228:15",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "6421:22:15",
																			"nodeType": "YulBlock",
																			"src": "6421:22:15",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "6423:16:15",
																							"nodeType": "YulIdentifier",
																							"src": "6423:16:15"
																						},
																						"nativeSrc": "6423:18:15",
																						"nodeType": "YulFunctionCall",
																						"src": "6423:18:15"
																					},
																					"nativeSrc": "6423:18:15",
																					"nodeType": "YulExpressionStatement",
																					"src": "6423:18:15"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6396:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "6396:4:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6410:1:15",
																									"nodeType": "YulLiteral",
																									"src": "6410:1:15",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6406:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "6406:3:15"
																							},
																							"nativeSrc": "6406:6:15",
																							"nodeType": "YulFunctionCall",
																							"src": "6406:6:15"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "6414:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "6414:4:15"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "6402:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "6402:3:15"
																					},
																					"nativeSrc": "6402:17:15",
																					"nodeType": "YulFunctionCall",
																					"src": "6402:17:15"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "6393:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "6393:2:15"
																			},
																			"nativeSrc": "6393:27:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6393:27:15"
																		},
																		"nativeSrc": "6390:53:15",
																		"nodeType": "YulIf",
																		"src": "6390:53:15"
																	},
																	{
																		"body": {
																			"nativeSrc": "6482:29:15",
																			"nodeType": "YulBlock",
																			"src": "6482:29:15",
																			"statements": [
																				{
																					"nativeSrc": "6484:25:15",
																					"nodeType": "YulAssignment",
																					"src": "6484:25:15",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "6497:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "6497:5:15"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "6504:4:15",
																								"nodeType": "YulIdentifier",
																								"src": "6504:4:15"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "6493:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "6493:3:15"
																						},
																						"nativeSrc": "6493:16:15",
																						"nodeType": "YulFunctionCall",
																						"src": "6493:16:15"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "6484:5:15",
																							"nodeType": "YulIdentifier",
																							"src": "6484:5:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "6463:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "6463:8:15"
																				},
																				{
																					"name": "power_1",
																					"nativeSrc": "6473:7:15",
																					"nodeType": "YulIdentifier",
																					"src": "6473:7:15"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6459:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "6459:3:15"
																			},
																			"nativeSrc": "6459:22:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6459:22:15"
																		},
																		"nativeSrc": "6456:55:15",
																		"nodeType": "YulIf",
																		"src": "6456:55:15"
																	},
																	{
																		"nativeSrc": "6524:23:15",
																		"nodeType": "YulAssignment",
																		"src": "6524:23:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6536:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "6536:4:15"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "6542:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "6542:4:15"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "6532:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "6532:3:15"
																			},
																			"nativeSrc": "6532:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6532:15:15"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "6524:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "6524:4:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6560:34:15",
																		"nodeType": "YulAssignment",
																		"src": "6560:34:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nativeSrc": "6576:7:15",
																					"nodeType": "YulIdentifier",
																					"src": "6576:7:15"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "6585:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "6585:8:15"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "6572:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "6572:3:15"
																			},
																			"nativeSrc": "6572:22:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6572:22:15"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "6560:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "6560:8:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6345:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "6345:8:15"
																	},
																	{
																		"name": "power_1",
																		"nativeSrc": "6355:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "6355:7:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6342:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "6342:2:15"
																},
																"nativeSrc": "6342:21:15",
																"nodeType": "YulFunctionCall",
																"src": "6342:21:15"
															},
															"nativeSrc": "6334:270:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6364:3:15",
																"nodeType": "YulBlock",
																"src": "6364:3:15",
																"statements": []
															},
															"pre": {
																"nativeSrc": "6338:3:15",
																"nodeType": "YulBlock",
																"src": "6338:3:15",
																"statements": []
															},
															"src": "6334:270:15"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "6194:416:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "6222:5:15",
														"nodeType": "YulTypedName",
														"src": "6222:5:15",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6229:8:15",
														"nodeType": "YulTypedName",
														"src": "6229:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6242:5:15",
														"nodeType": "YulTypedName",
														"src": "6242:5:15",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "6249:4:15",
														"nodeType": "YulTypedName",
														"src": "6249:4:15",
														"type": ""
													}
												],
												"src": "6194:416:15"
											},
											{
												"body": {
													"nativeSrc": "6674:747:15",
													"nodeType": "YulBlock",
													"src": "6674:747:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6712:52:15",
																"nodeType": "YulBlock",
																"src": "6712:52:15",
																"statements": [
																	{
																		"nativeSrc": "6726:10:15",
																		"nodeType": "YulAssignment",
																		"src": "6726:10:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6735:1:15",
																			"nodeType": "YulLiteral",
																			"src": "6735:1:15",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6726:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6726:5:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6749:5:15",
																		"nodeType": "YulLeave",
																		"src": "6749:5:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6694:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "6694:8:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6687:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6687:6:15"
																},
																"nativeSrc": "6687:16:15",
																"nodeType": "YulFunctionCall",
																"src": "6687:16:15"
															},
															"nativeSrc": "6684:80:15",
															"nodeType": "YulIf",
															"src": "6684:80:15"
														},
														{
															"body": {
																"nativeSrc": "6797:52:15",
																"nodeType": "YulBlock",
																"src": "6797:52:15",
																"statements": [
																	{
																		"nativeSrc": "6811:10:15",
																		"nodeType": "YulAssignment",
																		"src": "6811:10:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6820:1:15",
																			"nodeType": "YulLiteral",
																			"src": "6820:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6811:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6811:5:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6834:5:15",
																		"nodeType": "YulLeave",
																		"src": "6834:5:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "6783:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "6783:4:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6776:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6776:6:15"
																},
																"nativeSrc": "6776:12:15",
																"nodeType": "YulFunctionCall",
																"src": "6776:12:15"
															},
															"nativeSrc": "6773:76:15",
															"nodeType": "YulIf",
															"src": "6773:76:15"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6885:52:15",
																		"nodeType": "YulBlock",
																		"src": "6885:52:15",
																		"statements": [
																			{
																				"nativeSrc": "6899:10:15",
																				"nodeType": "YulAssignment",
																				"src": "6899:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6908:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6908:1:15",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6899:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "6899:5:15"
																					}
																				]
																			},
																			{
																				"nativeSrc": "6922:5:15",
																				"nodeType": "YulLeave",
																				"src": "6922:5:15"
																			}
																		]
																	},
																	"nativeSrc": "6878:59:15",
																	"nodeType": "YulCase",
																	"src": "6878:59:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6883:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6883:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6953:123:15",
																		"nodeType": "YulBlock",
																		"src": "6953:123:15",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "6988:22:15",
																					"nodeType": "YulBlock",
																					"src": "6988:22:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "6990:16:15",
																									"nodeType": "YulIdentifier",
																									"src": "6990:16:15"
																								},
																								"nativeSrc": "6990:18:15",
																								"nodeType": "YulFunctionCall",
																								"src": "6990:18:15"
																							},
																							"nativeSrc": "6990:18:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "6990:18:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "6973:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "6973:8:15"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6983:3:15",
																							"nodeType": "YulLiteral",
																							"src": "6983:3:15",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "6970:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "6970:2:15"
																					},
																					"nativeSrc": "6970:17:15",
																					"nodeType": "YulFunctionCall",
																					"src": "6970:17:15"
																				},
																				"nativeSrc": "6967:43:15",
																				"nodeType": "YulIf",
																				"src": "6967:43:15"
																			},
																			{
																				"nativeSrc": "7023:25:15",
																				"nodeType": "YulAssignment",
																				"src": "7023:25:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "7036:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "7036:8:15"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7046:1:15",
																							"nodeType": "YulLiteral",
																							"src": "7046:1:15",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "7032:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "7032:3:15"
																					},
																					"nativeSrc": "7032:16:15",
																					"nodeType": "YulFunctionCall",
																					"src": "7032:16:15"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "7023:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "7023:5:15"
																					}
																				]
																			},
																			{
																				"nativeSrc": "7061:5:15",
																				"nodeType": "YulLeave",
																				"src": "7061:5:15"
																			}
																		]
																	},
																	"nativeSrc": "6946:130:15",
																	"nodeType": "YulCase",
																	"src": "6946:130:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6951:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6951:1:15",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "6865:4:15",
																"nodeType": "YulIdentifier",
																"src": "6865:4:15"
															},
															"nativeSrc": "6858:218:15",
															"nodeType": "YulSwitch",
															"src": "6858:218:15"
														},
														{
															"body": {
																"nativeSrc": "7174:70:15",
																"nodeType": "YulBlock",
																"src": "7174:70:15",
																"statements": [
																	{
																		"nativeSrc": "7188:28:15",
																		"nodeType": "YulAssignment",
																		"src": "7188:28:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7201:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "7201:4:15"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "7207:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "7207:8:15"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "7197:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "7197:3:15"
																			},
																			"nativeSrc": "7197:19:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7197:19:15"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7188:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "7188:5:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7229:5:15",
																		"nodeType": "YulLeave",
																		"src": "7229:5:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7098:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "7098:4:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7104:2:15",
																						"nodeType": "YulLiteral",
																						"src": "7104:2:15",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7095:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "7095:2:15"
																				},
																				"nativeSrc": "7095:12:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7095:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7112:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "7112:8:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7122:2:15",
																						"nodeType": "YulLiteral",
																						"src": "7122:2:15",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7109:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "7109:2:15"
																				},
																				"nativeSrc": "7109:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7109:16:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7091:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7091:3:15"
																		},
																		"nativeSrc": "7091:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7091:35:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7135:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "7135:4:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7141:3:15",
																						"nodeType": "YulLiteral",
																						"src": "7141:3:15",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7132:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "7132:2:15"
																				},
																				"nativeSrc": "7132:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7132:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7150:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "7150:8:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7160:2:15",
																						"nodeType": "YulLiteral",
																						"src": "7160:2:15",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7147:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "7147:2:15"
																				},
																				"nativeSrc": "7147:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7147:16:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7128:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7128:3:15"
																		},
																		"nativeSrc": "7128:36:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7128:36:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7088:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7088:2:15"
																},
																"nativeSrc": "7088:77:15",
																"nodeType": "YulFunctionCall",
																"src": "7088:77:15"
															},
															"nativeSrc": "7085:159:15",
															"nodeType": "YulIf",
															"src": "7085:159:15"
														},
														{
															"nativeSrc": "7253:57:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7253:57:15",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7295:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7295:4:15"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7301:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "7301:8:15"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "7276:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "7276:18:15"
																},
																"nativeSrc": "7276:34:15",
																"nodeType": "YulFunctionCall",
																"src": "7276:34:15"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "7257:7:15",
																	"nodeType": "YulTypedName",
																	"src": "7257:7:15",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "7266:6:15",
																	"nodeType": "YulTypedName",
																	"src": "7266:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7355:22:15",
																"nodeType": "YulBlock",
																"src": "7355:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7357:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "7357:16:15"
																			},
																			"nativeSrc": "7357:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7357:18:15"
																		},
																		"nativeSrc": "7357:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7357:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "7325:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "7325:7:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7342:1:15",
																						"nodeType": "YulLiteral",
																						"src": "7342:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7338:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7338:3:15"
																				},
																				"nativeSrc": "7338:6:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7338:6:15"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "7346:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7346:6:15"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7334:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7334:3:15"
																		},
																		"nativeSrc": "7334:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7334:19:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7322:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7322:2:15"
																},
																"nativeSrc": "7322:32:15",
																"nodeType": "YulFunctionCall",
																"src": "7322:32:15"
															},
															"nativeSrc": "7319:58:15",
															"nodeType": "YulIf",
															"src": "7319:58:15"
														},
														{
															"nativeSrc": "7386:29:15",
															"nodeType": "YulAssignment",
															"src": "7386:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "7399:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "7399:7:15"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "7408:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7408:6:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7395:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7395:3:15"
																},
																"nativeSrc": "7395:20:15",
																"nodeType": "YulFunctionCall",
																"src": "7395:20:15"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7386:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "7386:5:15"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "6615:806:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "6645:4:15",
														"nodeType": "YulTypedName",
														"src": "6645:4:15",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6651:8:15",
														"nodeType": "YulTypedName",
														"src": "6651:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6664:5:15",
														"nodeType": "YulTypedName",
														"src": "6664:5:15",
														"type": ""
													}
												],
												"src": "6615:806:15"
											},
											{
												"body": {
													"nativeSrc": "7494:72:15",
													"nodeType": "YulBlock",
													"src": "7494:72:15",
													"statements": [
														{
															"nativeSrc": "7504:56:15",
															"nodeType": "YulAssignment",
															"src": "7504:56:15",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7534:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7534:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "7544:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "7544:8:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7554:4:15",
																				"nodeType": "YulLiteral",
																				"src": "7554:4:15",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7540:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7540:3:15"
																		},
																		"nativeSrc": "7540:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7540:19:15"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "7513:20:15",
																	"nodeType": "YulIdentifier",
																	"src": "7513:20:15"
																},
																"nativeSrc": "7513:47:15",
																"nodeType": "YulFunctionCall",
																"src": "7513:47:15"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7504:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "7504:5:15"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "7426:140:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7465:4:15",
														"nodeType": "YulTypedName",
														"src": "7465:4:15",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7471:8:15",
														"nodeType": "YulTypedName",
														"src": "7471:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7484:5:15",
														"nodeType": "YulTypedName",
														"src": "7484:5:15",
														"type": ""
													}
												],
												"src": "7426:140:15"
											},
											{
												"body": {
													"nativeSrc": "7617:171:15",
													"nodeType": "YulBlock",
													"src": "7617:171:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "7648:111:15",
																"nodeType": "YulBlock",
																"src": "7648:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7669:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7669:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7676:3:15",
																							"nodeType": "YulLiteral",
																							"src": "7676:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7681:10:15",
																							"nodeType": "YulLiteral",
																							"src": "7681:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "7672:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "7672:3:15"
																					},
																					"nativeSrc": "7672:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "7672:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7662:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7662:6:15"
																			},
																			"nativeSrc": "7662:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7662:31:15"
																		},
																		"nativeSrc": "7662:31:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7662:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7713:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7713:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7716:4:15",
																					"nodeType": "YulLiteral",
																					"src": "7716:4:15",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7706:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7706:6:15"
																			},
																			"nativeSrc": "7706:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7706:15:15"
																		},
																		"nativeSrc": "7706:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7706:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7741:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7741:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7744:4:15",
																					"nodeType": "YulLiteral",
																					"src": "7744:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7734:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7734:6:15"
																			},
																			"nativeSrc": "7734:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7734:15:15"
																		},
																		"nativeSrc": "7734:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7734:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7637:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "7637:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7630:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7630:6:15"
																},
																"nativeSrc": "7630:9:15",
																"nodeType": "YulFunctionCall",
																"src": "7630:9:15"
															},
															"nativeSrc": "7627:132:15",
															"nodeType": "YulIf",
															"src": "7627:132:15"
														},
														{
															"nativeSrc": "7768:14:15",
															"nodeType": "YulAssignment",
															"src": "7768:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7777:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "7777:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7780:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "7780:1:15"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7773:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7773:3:15"
																},
																"nativeSrc": "7773:9:15",
																"nodeType": "YulFunctionCall",
																"src": "7773:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7768:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "7768:1:15"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7571:217:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7602:1:15",
														"nodeType": "YulTypedName",
														"src": "7602:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7605:1:15",
														"nodeType": "YulTypedName",
														"src": "7605:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7611:1:15",
														"nodeType": "YulTypedName",
														"src": "7611:1:15",
														"type": ""
													}
												],
												"src": "7571:217:15"
											},
											{
												"body": {
													"nativeSrc": "7845:116:15",
													"nodeType": "YulBlock",
													"src": "7845:116:15",
													"statements": [
														{
															"nativeSrc": "7855:20:15",
															"nodeType": "YulAssignment",
															"src": "7855:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7870:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "7870:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7873:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "7873:1:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7866:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7866:3:15"
																},
																"nativeSrc": "7866:9:15",
																"nodeType": "YulFunctionCall",
																"src": "7866:9:15"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7855:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "7855:7:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7933:22:15",
																"nodeType": "YulBlock",
																"src": "7933:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7935:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "7935:16:15"
																			},
																			"nativeSrc": "7935:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7935:18:15"
																		},
																		"nativeSrc": "7935:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7935:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7904:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "7904:1:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7897:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "7897:6:15"
																				},
																				"nativeSrc": "7897:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7897:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7911:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "7911:1:15"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7918:7:15",
																								"nodeType": "YulIdentifier",
																								"src": "7918:7:15"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7927:1:15",
																								"nodeType": "YulIdentifier",
																								"src": "7927:1:15"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7914:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "7914:3:15"
																						},
																						"nativeSrc": "7914:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "7914:15:15"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7908:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "7908:2:15"
																				},
																				"nativeSrc": "7908:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7908:22:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7894:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "7894:2:15"
																		},
																		"nativeSrc": "7894:37:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7894:37:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7887:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7887:6:15"
																},
																"nativeSrc": "7887:45:15",
																"nodeType": "YulFunctionCall",
																"src": "7887:45:15"
															},
															"nativeSrc": "7884:71:15",
															"nodeType": "YulIf",
															"src": "7884:71:15"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7793:168:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7824:1:15",
														"nodeType": "YulTypedName",
														"src": "7824:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7827:1:15",
														"nodeType": "YulTypedName",
														"src": "7827:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7833:7:15",
														"nodeType": "YulTypedName",
														"src": "7833:7:15",
														"type": ""
													}
												],
												"src": "7793:168:15"
											},
											{
												"body": {
													"nativeSrc": "8123:218:15",
													"nodeType": "YulBlock",
													"src": "8123:218:15",
													"statements": [
														{
															"nativeSrc": "8133:26:15",
															"nodeType": "YulAssignment",
															"src": "8133:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8145:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8145:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8156:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8156:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8141:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8141:3:15"
																},
																"nativeSrc": "8141:18:15",
																"nodeType": "YulFunctionCall",
																"src": "8141:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8133:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8133:4:15"
																}
															]
														},
														{
															"nativeSrc": "8168:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "8168:29:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8186:3:15",
																				"nodeType": "YulLiteral",
																				"src": "8186:3:15",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8191:1:15",
																				"nodeType": "YulLiteral",
																				"src": "8191:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8182:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8182:3:15"
																		},
																		"nativeSrc": "8182:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8182:11:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8195:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8195:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8178:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8178:3:15"
																},
																"nativeSrc": "8178:19:15",
																"nodeType": "YulFunctionCall",
																"src": "8178:19:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "8172:2:15",
																	"nodeType": "YulTypedName",
																	"src": "8172:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8213:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8213:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8228:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8228:6:15"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "8236:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "8236:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8224:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:15"
																		},
																		"nativeSrc": "8224:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8224:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8206:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8206:6:15"
																},
																"nativeSrc": "8206:34:15",
																"nodeType": "YulFunctionCall",
																"src": "8206:34:15"
															},
															"nativeSrc": "8206:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "8206:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8260:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8260:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8271:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8271:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8256:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8256:3:15"
																		},
																		"nativeSrc": "8256:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8256:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8280:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8280:6:15"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "8288:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "8288:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8276:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8276:3:15"
																		},
																		"nativeSrc": "8276:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8276:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8249:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8249:6:15"
																},
																"nativeSrc": "8249:43:15",
																"nodeType": "YulFunctionCall",
																"src": "8249:43:15"
															},
															"nativeSrc": "8249:43:15",
															"nodeType": "YulExpressionStatement",
															"src": "8249:43:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8312:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8312:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8323:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8323:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8308:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8308:3:15"
																		},
																		"nativeSrc": "8308:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8308:18:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8328:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8328:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8301:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8301:6:15"
																},
																"nativeSrc": "8301:34:15",
																"nodeType": "YulFunctionCall",
																"src": "8301:34:15"
															},
															"nativeSrc": "8301:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "8301:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7966:375:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8076:9:15",
														"nodeType": "YulTypedName",
														"src": "8076:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8087:6:15",
														"nodeType": "YulTypedName",
														"src": "8087:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8095:6:15",
														"nodeType": "YulTypedName",
														"src": "8095:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8103:6:15",
														"nodeType": "YulTypedName",
														"src": "8103:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8114:4:15",
														"nodeType": "YulTypedName",
														"src": "8114:4:15",
														"type": ""
													}
												],
												"src": "7966:375:15"
											},
											{
												"body": {
													"nativeSrc": "8475:145:15",
													"nodeType": "YulBlock",
													"src": "8475:145:15",
													"statements": [
														{
															"nativeSrc": "8485:26:15",
															"nodeType": "YulAssignment",
															"src": "8485:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8497:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8497:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8508:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8508:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8493:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8493:3:15"
																},
																"nativeSrc": "8493:18:15",
																"nodeType": "YulFunctionCall",
																"src": "8493:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8485:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8485:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8527:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8527:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8542:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8542:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8558:3:15",
																								"nodeType": "YulLiteral",
																								"src": "8558:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8563:1:15",
																								"nodeType": "YulLiteral",
																								"src": "8563:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8554:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "8554:3:15"
																						},
																						"nativeSrc": "8554:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "8554:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8567:1:15",
																						"nodeType": "YulLiteral",
																						"src": "8567:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8550:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8550:3:15"
																				},
																				"nativeSrc": "8550:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8550:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8538:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8538:3:15"
																		},
																		"nativeSrc": "8538:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8538:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8520:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8520:6:15"
																},
																"nativeSrc": "8520:51:15",
																"nodeType": "YulFunctionCall",
																"src": "8520:51:15"
															},
															"nativeSrc": "8520:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "8520:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8591:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8591:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8602:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8602:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8587:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8587:3:15"
																		},
																		"nativeSrc": "8587:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8587:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8607:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8607:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8580:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8580:6:15"
																},
																"nativeSrc": "8580:34:15",
																"nodeType": "YulFunctionCall",
																"src": "8580:34:15"
															},
															"nativeSrc": "8580:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "8580:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8346:274:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8436:9:15",
														"nodeType": "YulTypedName",
														"src": "8436:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8447:6:15",
														"nodeType": "YulTypedName",
														"src": "8447:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8455:6:15",
														"nodeType": "YulTypedName",
														"src": "8455:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8466:4:15",
														"nodeType": "YulTypedName",
														"src": "8466:4:15",
														"type": ""
													}
												],
												"src": "8346:274:15"
											},
											{
												"body": {
													"nativeSrc": "8703:199:15",
													"nodeType": "YulBlock",
													"src": "8703:199:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "8749:16:15",
																"nodeType": "YulBlock",
																"src": "8749:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8758:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8758:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8761:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8761:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8751:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8751:6:15"
																			},
																			"nativeSrc": "8751:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8751:12:15"
																		},
																		"nativeSrc": "8751:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8751:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8724:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8724:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8733:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8733:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8720:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8720:3:15"
																		},
																		"nativeSrc": "8720:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8720:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8745:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8745:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8716:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8716:3:15"
																},
																"nativeSrc": "8716:32:15",
																"nodeType": "YulFunctionCall",
																"src": "8716:32:15"
															},
															"nativeSrc": "8713:52:15",
															"nodeType": "YulIf",
															"src": "8713:52:15"
														},
														{
															"nativeSrc": "8774:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "8774:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8793:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8793:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8787:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "8787:5:15"
																},
																"nativeSrc": "8787:16:15",
																"nodeType": "YulFunctionCall",
																"src": "8787:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "8778:5:15",
																	"nodeType": "YulTypedName",
																	"src": "8778:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8856:16:15",
																"nodeType": "YulBlock",
																"src": "8856:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8865:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8865:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8868:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8868:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8858:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8858:6:15"
																			},
																			"nativeSrc": "8858:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8858:12:15"
																		},
																		"nativeSrc": "8858:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8858:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8825:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "8825:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "8846:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "8846:5:15"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "8839:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "8839:6:15"
																						},
																						"nativeSrc": "8839:13:15",
																						"nodeType": "YulFunctionCall",
																						"src": "8839:13:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8832:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "8832:6:15"
																				},
																				"nativeSrc": "8832:21:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8832:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8822:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "8822:2:15"
																		},
																		"nativeSrc": "8822:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8822:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8815:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8815:6:15"
																},
																"nativeSrc": "8815:40:15",
																"nodeType": "YulFunctionCall",
																"src": "8815:40:15"
															},
															"nativeSrc": "8812:60:15",
															"nodeType": "YulIf",
															"src": "8812:60:15"
														},
														{
															"nativeSrc": "8881:15:15",
															"nodeType": "YulAssignment",
															"src": "8881:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "8891:5:15",
																"nodeType": "YulIdentifier",
																"src": "8891:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8881:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8881:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "8625:277:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8669:9:15",
														"nodeType": "YulTypedName",
														"src": "8669:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8680:7:15",
														"nodeType": "YulTypedName",
														"src": "8680:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8692:6:15",
														"nodeType": "YulTypedName",
														"src": "8692:6:15",
														"type": ""
													}
												],
												"src": "8625:277:15"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_encode_tuple_t_contract$_ITokenBridge_$1962__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_contract$_IWETH_$1976_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_f980939fccf74afb41aae851bf3fecac407639d4d59480a38f30e6ca14fe2c59__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Too many decimal places\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_uint8_t_address_t_address_t_uint256__to_t_uint8_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, and(shl(248, value0), shl(248, 255)))\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(add(pos, 1), and(shl(96, value1), _1))\n        mstore(add(pos, 21), and(shl(96, value2), _1))\n        mstore(add(pos, 41), value3)\n        end := add(pos, 73)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint16_t_bytes32_t_rational_0_by_1_t_bytes_memory_ptr__to_t_address_t_uint256_t_uint16_t_bytes32_t_uint32_t_bytes_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xffff))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, 0xffffffff))\n        mstore(add(headStart, 160), 192)\n        tail := abi_encode_bytes(value5, add(headStart, 192))\n    }\n    function abi_decode_tuple_t_uint64_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_rational_0_by_1_t_bytes_memory_ptr_t_uint8__to_t_uint32_t_bytes_memory_ptr_t_uint8__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffff))\n        mstore(add(headStart, 32), 96)\n        tail := abi_encode_bytes(value1, add(headStart, 96))\n        mstore(add(headStart, 64), and(value2, 0xff))\n    }\n    function abi_encode_tuple_t_uint16_t_bytes32_t_rational_0_by_1_t_bytes_memory_ptr__to_t_uint16_t_bytes32_t_uint32_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xffffffff))\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes(value3, add(headStart, 128))\n    }\n    function checked_sub_t_uint8(x, y) -> diff\n    {\n        diff := sub(and(x, 0xff), and(y, 0xff))\n        if gt(diff, 0xff) { panic_error_0x11() }\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610083575f3560e01c80639a8a0592116100575780639a8a05921461010a578063a5d5db0c1461012b578063c6328a461461014a578063e18849191461014a578063edba820914610171575f80fd5b80624702571461008757806322867d78146100ad578063350c35e9146100cc5780634b8a3529146100eb575b5f80fd5b61008f610179565b60405167ffffffffffffffff90911681526020015b60405180910390f35b3480156100b8575f80fd5b5061008f6100c7366004610ac8565b610274565b3480156100d7575f80fd5b5061008f6100e6366004610ac8565b610288565b3480156100f6575f80fd5b5061008f610105366004610ac8565b610295565b348015610115575f80fd5b505f5460405161ffff90911681526020016100a4565b348015610136575f80fd5b5061008f610145366004610ac8565b6102a2565b348015610155575f80fd5b506001546040516001600160a01b0390911681526020016100a4565b61008f6102ae565b5f61026f60046101916001546001600160a01b031690565b6001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101cc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101f09190610af2565b5f546201000090046001600160a01b03166001600160a01b0316631a90a2196040518163ffffffff1660e01b8152600401602060405180830381865afa15801561023c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102609190610b0d565b61026a9034610b38565b6102c6565b905090565b5f610281600384846102c6565b9392505050565b5f610281600284846102c6565b5f610281600184846102c6565b5f6102815f84846102c6565b5f61026f60056101916001546001600160a01b031690565b5f6102d183836104a1565b8360048560058111156102e6576102e6610b4b565b036102ee57505f5b600585600581111561030257610302610b4b565b0361030b575060035b5f604051806080016040528083600581111561032957610329610b4b565b81523360208201526001600160a01b038716604082015260600185905290505f610352826105a6565b90505f87600581111561036757610367610b4b565b14806103845750600387600581111561038257610382610b4b565b145b1561039b57610394868683610631565b9350610497565b60028760058111156103af576103af610b4b565b14806103cc575060018760058111156103ca576103ca610b4b565b145b156103da576103948161070c565b60048760058111156103ee576103ee610b4b565b148061040b5750600587600581111561040957610409610b4b565b145b15610497575f54610494906201000090046001600160a01b03166001600160a01b0316631a90a2196040518163ffffffff1660e01b8152600401602060405180830381865afa158015610460573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104849190610b0d565b61048e9087610b5f565b8261079e565b93505b5050509392505050565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b17905290515f916001600160a01b038516916104e29190610b94565b5f60405180830381855afa9150503d805f811461051a576040519150601f19603f3d011682016040523d82523d5f602084013e61051f565b606091505b509150505f818060200190518101906105389190610baf565b90508261054e610548858461084d565b83610884565b146105a05760405162461bcd60e51b815260206004820152601760248201527f546f6f206d616e7920646563696d616c20706c6163657300000000000000000060448201526064015b60405180910390fd5b50505050565b805160609060058111156105bc576105bc610b4b565b82602001518360400151846060015160405160200161061b949392919060f89490941b6001600160f81b0319168452606092831b6bffffffffffffffffffffffff1990811660018601529190921b166015830152602982015260490190565b6040516020818303038152906040529050919050565b5f61063e843330866108b1565b61065a846106546001546001600160a01b031690565b85610918565b6001546001600160a01b03166001600160a01b031663c5a5ebda858561068960025461ffff6101009091041690565b6002546040516001600160e01b031960e087901b1681526106c494939291630100000090046001600160a01b0316905f908a90600401610bfa565b6020604051808303815f875af11580156106e0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107049190610c48565b949350505050565b5f80546201000090046001600160a01b03166001600160a01b031663b19a437e5f8461073a60025460ff1690565b6040518463ffffffff1660e01b815260040161075893929190610c6f565b6020604051808303815f875af1158015610774573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107989190610c48565b92915050565b5f6107b16001546001600160a01b031690565b6001600160a01b031663bee9cdfc846107d360025461ffff6101009091041690565b6002546040516001600160e01b031960e086901b16815261080c9291630100000090046001600160a01b0316905f908990600401610ca0565b60206040518083038185885af1158015610828573d5f803e3d5ffd5b50505050506040513d601f19601f820116820180604052508101906102819190610c48565b5f60088260ff16111561087d57610865600883610cce565b61087090600a610dc7565b61087a9084610dd5565b92505b5090919050565b5f60088260ff16111561087d5761089c600883610cce565b6108a790600a610dc7565b61087a9084610df4565b6040516001600160a01b0384811660248301528381166044830152606482018390526105a09186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061094e565b6040516001600160a01b0383811660248301526044820183905261094991859182169063a9059cbb906064016108e6565b505050565b5f6109626001600160a01b038416836109af565b905080515f141580156109865750808060200190518101906109849190610e0b565b155b1561094957604051635274afe760e01b81526001600160a01b0384166004820152602401610597565b606061028183835f845f80856001600160a01b031684866040516109d39190610b94565b5f6040518083038185875af1925050503d805f8114610a0d576040519150601f19603f3d011682016040523d82523d5f602084013e610a12565b606091505b5091509150610a22868383610a2c565b9695505050505050565b606082610a4157610a3c82610a88565b610281565b8151158015610a5857506001600160a01b0384163b155b15610a8157604051639996b31560e01b81526001600160a01b0385166004820152602401610597565b5080610281565b805115610a985780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b50565b6001600160a01b0381168114610ab1575f80fd5b5f8060408385031215610ad9575f80fd5b8235610ae481610ab4565b946020939093013593505050565b5f60208284031215610b02575f80fd5b815161028181610ab4565b5f60208284031215610b1d575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561079857610798610b24565b634e487b7160e01b5f52602160045260245ffd5b8082018082111561079857610798610b24565b5f5b83811015610b8c578181015183820152602001610b74565b50505f910152565b5f8251610ba5818460208701610b72565b9190910192915050565b5f60208284031215610bbf575f80fd5b815160ff81168114610281575f80fd5b5f8151808452610be6816020860160208601610b72565b601f01601f19169290920160200192915050565b60018060a01b038716815285602082015261ffff8516604082015283606082015263ffffffff8316608082015260c060a08201525f610c3c60c0830184610bcf565b98975050505050505050565b5f60208284031215610c58575f80fd5b815167ffffffffffffffff81168114610281575f80fd5b63ffffffff84168152606060208201525f610c8d6060830185610bcf565b905060ff83166040830152949350505050565b61ffff8516815283602082015263ffffffff83166040820152608060608201525f610a226080830184610bcf565b60ff828116828216039081111561079857610798610b24565b600181815b80851115610d2157815f1904821115610d0757610d07610b24565b80851615610d1457918102915b93841c9390800290610cec565b509250929050565b5f82610d3757506001610798565b81610d4357505f610798565b8160018114610d595760028114610d6357610d7f565b6001915050610798565b60ff841115610d7457610d74610b24565b50506001821b610798565b5060208310610133831016604e8410600b8410161715610da2575081810a610798565b610dac8383610ce7565b805f1904821115610dbf57610dbf610b24565b029392505050565b5f61028160ff841683610d29565b5f82610def57634e487b7160e01b5f52601260045260245ffd5b500490565b808202811582820484141761079857610798610b24565b5f60208284031215610e1b575f80fd5b81518015158114610281575f80fdfea2646970667358221220bdcedf95167010ae6ad5e97d6d3cf80c6054cdc5aa9b6add6af0e653f5dab7aa64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x83 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A8A0592 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0x9A8A0592 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA5D5DB0C EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xC6328A46 EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0xE1884919 EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0xEDBA8209 EQ PUSH2 0x171 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x470257 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0x22867D78 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x350C35E9 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x4B8A3529 EQ PUSH2 0xEB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x8F PUSH2 0x179 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8F PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x274 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8F PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x288 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8F PUSH2 0x105 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x295 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8F PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x2A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA4 JUMP JUMPDEST PUSH2 0x8F PUSH2 0x2AE JUMP JUMPDEST PUSH0 PUSH2 0x26F PUSH1 0x4 PUSH2 0x191 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0xAF2 JUMP JUMPDEST PUSH0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1A90A219 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0xB0D JUMP JUMPDEST PUSH2 0x26A SWAP1 CALLVALUE PUSH2 0xB38 JUMP JUMPDEST PUSH2 0x2C6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x281 PUSH1 0x3 DUP5 DUP5 PUSH2 0x2C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x281 PUSH1 0x2 DUP5 DUP5 PUSH2 0x2C6 JUMP JUMPDEST PUSH0 PUSH2 0x281 PUSH1 0x1 DUP5 DUP5 PUSH2 0x2C6 JUMP JUMPDEST PUSH0 PUSH2 0x281 PUSH0 DUP5 DUP5 PUSH2 0x2C6 JUMP JUMPDEST PUSH0 PUSH2 0x26F PUSH1 0x5 PUSH2 0x191 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x2D1 DUP4 DUP4 PUSH2 0x4A1 JUMP JUMPDEST DUP4 PUSH1 0x4 DUP6 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2E6 JUMPI PUSH2 0x2E6 PUSH2 0xB4B JUMP JUMPDEST SUB PUSH2 0x2EE JUMPI POP PUSH0 JUMPDEST PUSH1 0x5 DUP6 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x302 JUMPI PUSH2 0x302 PUSH2 0xB4B JUMP JUMPDEST SUB PUSH2 0x30B JUMPI POP PUSH1 0x3 JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x329 JUMPI PUSH2 0x329 PUSH2 0xB4B JUMP JUMPDEST DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD DUP6 SWAP1 MSTORE SWAP1 POP PUSH0 PUSH2 0x352 DUP3 PUSH2 0x5A6 JUMP JUMPDEST SWAP1 POP PUSH0 DUP8 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x367 JUMPI PUSH2 0x367 PUSH2 0xB4B JUMP JUMPDEST EQ DUP1 PUSH2 0x384 JUMPI POP PUSH1 0x3 DUP8 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x382 JUMPI PUSH2 0x382 PUSH2 0xB4B JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x39B JUMPI PUSH2 0x394 DUP7 DUP7 DUP4 PUSH2 0x631 JUMP JUMPDEST SWAP4 POP PUSH2 0x497 JUMP JUMPDEST PUSH1 0x2 DUP8 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x3AF JUMPI PUSH2 0x3AF PUSH2 0xB4B JUMP JUMPDEST EQ DUP1 PUSH2 0x3CC JUMPI POP PUSH1 0x1 DUP8 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x3CA JUMPI PUSH2 0x3CA PUSH2 0xB4B JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x3DA JUMPI PUSH2 0x394 DUP2 PUSH2 0x70C JUMP JUMPDEST PUSH1 0x4 DUP8 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x3EE JUMPI PUSH2 0x3EE PUSH2 0xB4B JUMP JUMPDEST EQ DUP1 PUSH2 0x40B JUMPI POP PUSH1 0x5 DUP8 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x409 JUMPI PUSH2 0x409 PUSH2 0xB4B JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x497 JUMPI PUSH0 SLOAD PUSH2 0x494 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1A90A219 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x460 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x484 SWAP2 SWAP1 PUSH2 0xB0D JUMP JUMPDEST PUSH2 0x48E SWAP1 DUP8 PUSH2 0xB5F JUMP JUMPDEST DUP3 PUSH2 0x79E JUMP JUMPDEST SWAP4 POP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH2 0x4E2 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x51A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x51F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP POP PUSH0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x538 SWAP2 SWAP1 PUSH2 0xBAF JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x54E PUSH2 0x548 DUP6 DUP5 PUSH2 0x84D JUMP JUMPDEST DUP4 PUSH2 0x884 JUMP JUMPDEST EQ PUSH2 0x5A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6F206D616E7920646563696D616C20706C61636573000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x5BC JUMPI PUSH2 0x5BC PUSH2 0xB4B JUMP JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x61B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0xF8 SWAP5 SWAP1 SWAP5 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND DUP5 MSTORE PUSH1 0x60 SWAP3 DUP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND PUSH1 0x1 DUP7 ADD MSTORE SWAP2 SWAP1 SWAP3 SHL AND PUSH1 0x15 DUP4 ADD MSTORE PUSH1 0x29 DUP3 ADD MSTORE PUSH1 0x49 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x63E DUP5 CALLER ADDRESS DUP7 PUSH2 0x8B1 JUMP JUMPDEST PUSH2 0x65A DUP5 PUSH2 0x654 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP6 PUSH2 0x918 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC5A5EBDA DUP6 DUP6 PUSH2 0x689 PUSH1 0x2 SLOAD PUSH2 0xFFFF PUSH2 0x100 SWAP1 SWAP2 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP8 SWAP1 SHL AND DUP2 MSTORE PUSH2 0x6C4 SWAP5 SWAP4 SWAP3 SWAP2 PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH0 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0xBFA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6E0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x704 SWAP2 SWAP1 PUSH2 0xC48 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB19A437E PUSH0 DUP5 PUSH2 0x73A PUSH1 0x2 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x758 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC6F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x774 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x798 SWAP2 SWAP1 PUSH2 0xC48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7B1 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBEE9CDFC DUP5 PUSH2 0x7D3 PUSH1 0x2 SLOAD PUSH2 0xFFFF PUSH2 0x100 SWAP1 SWAP2 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH2 0x80C SWAP3 SWAP2 PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH0 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x828 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0xC48 JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP3 PUSH1 0xFF AND GT ISZERO PUSH2 0x87D JUMPI PUSH2 0x865 PUSH1 0x8 DUP4 PUSH2 0xCCE JUMP JUMPDEST PUSH2 0x870 SWAP1 PUSH1 0xA PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0x87A SWAP1 DUP5 PUSH2 0xDD5 JUMP JUMPDEST SWAP3 POP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP3 PUSH1 0xFF AND GT ISZERO PUSH2 0x87D JUMPI PUSH2 0x89C PUSH1 0x8 DUP4 PUSH2 0xCCE JUMP JUMPDEST PUSH2 0x8A7 SWAP1 PUSH1 0xA PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0x87A SWAP1 DUP5 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x5A0 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x94E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x949 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD PUSH2 0x8E6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x962 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0x9AF JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 EQ ISZERO DUP1 ISZERO PUSH2 0x986 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x984 SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x949 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x597 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x281 DUP4 DUP4 PUSH0 DUP5 PUSH0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x9D3 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xA0D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xA22 DUP7 DUP4 DUP4 PUSH2 0xA2C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xA41 JUMPI PUSH2 0xA3C DUP3 PUSH2 0xA88 JUMP JUMPDEST PUSH2 0x281 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0xA58 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xA81 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x597 JUMP JUMPDEST POP DUP1 PUSH2 0x281 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xA98 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAB1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAD9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xAE4 DUP2 PUSH2 0xAB4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB02 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x281 DUP2 PUSH2 0xAB4 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB1D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x798 JUMPI PUSH2 0x798 PUSH2 0xB24 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x798 JUMPI PUSH2 0x798 PUSH2 0xB24 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB8C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB74 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0xBA5 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xB72 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBBF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x281 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xBE6 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xFFFF DUP6 AND PUSH1 0x40 DUP3 ADD MSTORE DUP4 PUSH1 0x60 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xC0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH0 PUSH2 0xC3C PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0xBCF JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC58 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x281 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0xC8D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xBCF JUMP JUMPDEST SWAP1 POP PUSH1 0xFF DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH0 PUSH2 0xA22 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xBCF JUMP JUMPDEST PUSH1 0xFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x798 JUMPI PUSH2 0x798 PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xD21 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD07 PUSH2 0xB24 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xD14 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xCEC JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xD37 JUMPI POP PUSH1 0x1 PUSH2 0x798 JUMP JUMPDEST DUP2 PUSH2 0xD43 JUMPI POP PUSH0 PUSH2 0x798 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xD59 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xD63 JUMPI PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x798 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xD74 JUMPI PUSH2 0xD74 PUSH2 0xB24 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x798 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xDA2 JUMPI POP DUP2 DUP2 EXP PUSH2 0x798 JUMP JUMPDEST PUSH2 0xDAC DUP4 DUP4 PUSH2 0xCE7 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0xDBF JUMPI PUSH2 0xDBF PUSH2 0xB24 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x281 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0xD29 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xDEF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x798 JUMPI PUSH2 0x798 PUSH2 0xB24 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE1B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x281 JUMPI PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xCE 0xDF SWAP6 AND PUSH17 0x10AE6AD5E97D6D3CF80C6054CDC5AA9B6A 0xDD PUSH11 0xF0E653F5DAB7AA64736F6C PUSH4 0x43000817 STOP CALLER ",
							"sourceMap": "264:3598:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1927:202;;;:::i;:::-;;;188:18:15;176:31;;;158:50;;146:2;131:18;1927:202:6;;;;;;;;1753:168;;;;;;;;;;-1:-1:-1;1753:168:6;;;;;:::i;:::-;;:::i;1387:184::-;;;;;;;;;;-1:-1:-1;1387:184:6;;;;;:::i;:::-;;:::i;1577:170::-;;;;;;;;;;-1:-1:-1;1577:170:6;;;;;:::i;:::-;;:::i;269:95:7:-;;;;;;;;;;-1:-1:-1;309:6:7;334:23;269:95;;334:23;;;;819:38:15;;807:2;792:18;269:95:7;675:188:15;1199:182:6;;;;;;;;;;-1:-1:-1;1199:182:6;;;;;:::i;:::-;;:::i;489:132:7:-;;;;;;;;;;-1:-1:-1;585:27:7;;489:132;;-1:-1:-1;;;;;585:27:7;;;1035:51:15;;1023:2;1008:18;489:132:7;868:224:15;2135:188:6;;;:::i;1927:202::-;1986:15;2024:98;2033:20;2063:13;585:27:7;;-1:-1:-1;;;;;585:27:7;;489:132;2063:13:6;-1:-1:-1;;;;;2063:18:6;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;413:9:7;451:24;;;;-1:-1:-1;;;;;451:24:7;-1:-1:-1;;;;;2098:21:6;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2086:35;;:9;:35;:::i;:::-;2024:8;:98::i;:::-;2013:109;;1927:202;:::o;1753:168::-;1827:15;1865:49;1874:12;1888;1902:11;1865:8;:49::i;:::-;1854:60;1753:168;-1:-1:-1;;;1753:168:6:o;1387:184::-;1474:15;1512:52;1521:15;1538:12;1552:11;1512:8;:52::i;1577:170::-;1652:15;1690:50;1699:13;1714:12;1728:11;1690:8;:50::i;1199:182::-;1285:15;1323:51;1332:14;1348:12;1362:11;1323:8;:51::i;2135:188::-;2182:15;2220:96;2229:18;2257:13;585:27:7;;-1:-1:-1;;;;;585:27:7;;489:132;2735:1125:6;2829:15;2856:64;2894:12;2908:11;2856:37;:64::i;:::-;2949:6;2979:20;2969:6;:30;;;;;;;;:::i;:::-;;2965:87;;-1:-1:-1;3027:14:6;2965:87;3075:18;3065:6;:28;;;;;;;;:::i;:::-;;3061:83;;-1:-1:-1;3121:12:6;3061:83;3154:28;3197:108;;;;;;;;3220:9;3197:108;;;;;;;;:::i;:::-;;;3239:10;3197:108;;;;-1:-1:-1;;;;;3197:108:6;;;;;;;;;;;3154:151;-1:-1:-1;;3342:28:6;3154:151;3342:19;:28::i;:::-;3316:54;-1:-1:-1;3395:14:6;3385:6;:24;;;;;;;;:::i;:::-;;:50;;;-1:-1:-1;3423:12:6;3413:6;:22;;;;;;;;:::i;:::-;;3385:50;3381:473;;;3462:61;3485:12;3499:11;3512:10;3462:22;:61::i;:::-;3451:72;;3381:473;;;3554:15;3544:6;:25;;;;;;;;:::i;:::-;;:52;;;-1:-1:-1;3583:13:6;3573:6;:23;;;;;;;;:::i;:::-;;3544:52;3540:314;;;3623:31;3643:10;3623:19;:31::i;3540:314::-;3685:20;3675:6;:30;;;;;;;;:::i;:::-;;:62;;;-1:-1:-1;3719:18:6;3709:6;:28;;;;;;;;:::i;:::-;;3675:62;3671:183;;;413:9:7;451:24;3764:79:6;;451:24:7;;;-1:-1:-1;;;;;451:24:7;-1:-1:-1;;;;;3807:21:6;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3793:37;;:11;:37;:::i;:::-;3832:10;3764:28;:79::i;:::-;3753:90;;3671:183;2846:1014;;;2735:1125;;;;;:::o;1497:443:10:-;1670:37;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1670:37:10;-1:-1:-1;;;1670:37:10;;;1646:62;;1614:28;;-1:-1:-1;;;;;1646:23:10;;;:62;;1670:37;1646:62;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1611:97;;;1718:14;1746:15;1735:36;;;;;;;;;;;;:::i;:::-;1718:53;;1873:11;1802:67;1820:38;1836:11;1849:8;1820:15;:38::i;:::-;1860:8;1802:17;:67::i;:::-;:82;1781:152;;;;-1:-1:-1;;;1781:152:10;;3318:2:15;1781:152:10;;;3300:21:15;3357:2;3337:18;;;3330:30;3396:25;3376:18;;;3369:53;3439:18;;1781:152:10;;;;;;;;;1601:339;;1497:443;;:::o;225:218:4:-;361:14;;307:12;;355:21;;;;;;;;:::i;:::-;378:7;:14;;;394:7;:20;;;416:7;:19;;;338:98;;;;;;;;;;3715:3:15;3693:16;;;;-1:-1:-1;;;;;;3689:36:15;3677:49;;3813:2;3809:15;;;-1:-1:-1;;3805:24:15;;;3801:1;3792:11;;3785:45;3864:15;;;;3860:24;3855:2;3846:12;;3839:46;3910:2;3901:12;;3894:28;3947:2;3938:12;;3468:488;338:98:4;;;;;;;;;;;;;331:105;;225:218;;;:::o;659:532:10:-;790:15;821:88;855:12;870:10;890:4;897:11;821:26;:88::i;:::-;920:79;950:12;965:20;585:27:7;;-1:-1:-1;;;;;585:27:7;;489:132;965:20:10;987:11;920:22;:79::i;:::-;585:27:7;;-1:-1:-1;;;;;585:27:7;-1:-1:-1;;;;;1021:39:10;;1074:12;1088:11;1101:12;925:17:7;;;;;;;;;855:94;1101:12:10;1034:25:7;;1021:163:10;;-1:-1:-1;;;;;;1021:163:10;;;;;;;;;;;;1034:25:7;;;-1:-1:-1;;;;;1034:25:7;;1115:47:10;;1167:7;;1021:163;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1010:174;659:532;-1:-1:-1;;;;659:532:10:o;427:226::-;496:15;451:24:7;;;;;-1:-1:-1;;;;;451:24:7;-1:-1:-1;;;;;534:25:10;;573:1;597:7;618:18;819:23:7;;;;;744:105;618:18:10;534:112;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;523:123;427:226;-1:-1:-1;;427:226:10:o;1197:294::-;1291:15;1329:13;585:27:7;;-1:-1:-1;;;;;585:27:7;;489:132;1329:13:10;-1:-1:-1;;;;;1329:43:10;;1380:6;1401:12;925:17:7;;;;;;;;;855:94;1401:12:10;1034:25:7;;1329:155:10;;-1:-1:-1;;;;;;1329:155:10;;;;;;;;;;1034:25:7;;;-1:-1:-1;;;;;1034:25:7;;1415:47:10;;1467:7;;1329:155;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1946:201::-;2026:7;2060:1;2049:8;:12;;;2045:73;;;2094:12;2105:1;2094:8;:12;:::i;:::-;2087:20;;:2;:20;:::i;:::-;2077:30;;;;:::i;:::-;;;2045:73;-1:-1:-1;2134:6:10;;1946:201;-1:-1:-1;1946:201:10:o;2153:203::-;2235:7;2269:1;2258:8;:12;;;2254:73;;;2303:12;2314:1;2303:8;:12;:::i;:::-;2296:20;;:2;:20;:::i;:::-;2286:30;;;;:::i;1702:188:2:-;1829:53;;-1:-1:-1;;;;;8224:15:15;;;1829:53:2;;;8206:34:15;8276:15;;;8256:18;;;8249:43;8308:18;;;8301:34;;;1802:81:2;;1822:5;;1844:18;;;;;8141::15;;1829:53:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1829:53:2;;;;;;;;;;;1802:19;:81::i;1303:160::-;1412:43;;-1:-1:-1;;;;;8538:32:15;;;1412:43:2;;;8520:51:15;8587:18;;;8580:34;;;1385:71:2;;1405:5;;1427:14;;;;;8493:18:15;;1412:43:2;8346:274:15;1385:71:2;1303:160;;;:::o;4059:629::-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:2;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:2;;-1:-1:-1;;;;;1053:32:15;;4631:40:2;;;1035:51:15;1008:18;;4631:40:2;868:224:15;2705:151:3;2780:12;2811:38;2833:6;2841:4;2847:1;2780:12;3421;3435:23;3462:6;-1:-1:-1;;;;;3462:11:3;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;3180:392;-1:-1:-1;;;;;;3180:392:3:o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:3;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:3;;-1:-1:-1;;;;;1053:32:15;;5121:24:3;;;1035:51:15;1008:18;;5121:24:3;868:224:15;5041:119:3;-1:-1:-1;5180:10:3;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:3;;;;;;;;;;;5870:383;5743:516;:::o;219:131:15:-;-1:-1:-1;;;;;294:31:15;;284:42;;274:70;;340:1;337;330:12;355:315;423:6;431;484:2;472:9;463:7;459:23;455:32;452:52;;;500:1;497;490:12;452:52;539:9;526:23;558:31;583:5;558:31;:::i;:::-;608:5;660:2;645:18;;;;632:32;;-1:-1:-1;;;355:315:15:o;1305:265::-;1389:6;1442:2;1430:9;1421:7;1417:23;1413:32;1410:52;;;1458:1;1455;1448:12;1410:52;1490:9;1484:16;1509:31;1534:5;1509:31;:::i;1575:184::-;1645:6;1698:2;1686:9;1677:7;1673:23;1669:32;1666:52;;;1714:1;1711;1704:12;1666:52;-1:-1:-1;1737:16:15;;1575:184;-1:-1:-1;1575:184:15:o;1764:127::-;1825:10;1820:3;1816:20;1813:1;1806:31;1856:4;1853:1;1846:15;1880:4;1877:1;1870:15;1896:128;1963:9;;;1984:11;;;1981:37;;;1998:18;;:::i;2029:127::-;2090:10;2085:3;2081:20;2078:1;2071:31;2121:4;2118:1;2111:15;2145:4;2142:1;2135:15;2161:125;2226:9;;;2247:10;;;2244:36;;;2260:18;;:::i;2291:250::-;2376:1;2386:113;2400:6;2397:1;2394:13;2386:113;;;2476:11;;;2470:18;2457:11;;;2450:39;2422:2;2415:10;2386:113;;;-1:-1:-1;;2533:1:15;2515:16;;2508:27;2291:250::o;2546:287::-;2675:3;2713:6;2707:13;2729:66;2788:6;2783:3;2776:4;2768:6;2764:17;2729:66;:::i;:::-;2811:16;;;;;2546:287;-1:-1:-1;;2546:287:15:o;2838:273::-;2906:6;2959:2;2947:9;2938:7;2934:23;2930:32;2927:52;;;2975:1;2972;2965:12;2927:52;3007:9;3001:16;3057:4;3050:5;3046:16;3039:5;3036:27;3026:55;;3077:1;3074;3067:12;3961:270;4002:3;4040:5;4034:12;4067:6;4062:3;4055:19;4083:76;4152:6;4145:4;4140:3;4136:14;4129:4;4122:5;4118:16;4083:76;:::i;:::-;4213:2;4192:15;-1:-1:-1;;4188:29:15;4179:39;;;;4220:4;4175:50;;3961:270;-1:-1:-1;;3961:270:15:o;4236:637::-;4557:1;4553;4548:3;4544:11;4540:19;4532:6;4528:32;4517:9;4510:51;4597:6;4592:2;4581:9;4577:18;4570:34;4652:6;4644;4640:19;4635:2;4624:9;4620:18;4613:47;4696:6;4691:2;4680:9;4676:18;4669:34;4752:10;4744:6;4740:23;4734:3;4723:9;4719:19;4712:52;4801:3;4795;4784:9;4780:19;4773:32;4491:4;4822:45;4862:3;4851:9;4847:19;4839:6;4822:45;:::i;:::-;4814:53;4236:637;-1:-1:-1;;;;;;;;4236:637:15:o;4878:288::-;4947:6;5000:2;4988:9;4979:7;4975:23;4971:32;4968:52;;;5016:1;5013;5006:12;4968:52;5048:9;5042:16;5098:18;5091:5;5087:30;5080:5;5077:41;5067:69;;5132:1;5129;5122:12;5171:390;5389:10;5381:6;5377:23;5366:9;5359:42;5437:2;5432;5421:9;5417:18;5410:30;5340:4;5457:44;5497:2;5486:9;5482:18;5474:6;5457:44;:::i;:::-;5449:52;;5549:4;5541:6;5537:17;5532:2;5521:9;5517:18;5510:45;5171:390;;;;;;:::o;5566:467::-;5814:6;5806;5802:19;5791:9;5784:38;5858:6;5853:2;5842:9;5838:18;5831:34;5913:10;5905:6;5901:23;5896:2;5885:9;5881:18;5874:51;5961:3;5956:2;5945:9;5941:18;5934:31;5765:4;5982:45;6022:3;6011:9;6007:19;5999:6;5982:45;:::i;6038:151::-;6128:4;6121:12;;;6107;;;6103:31;;6146:14;;6143:40;;;6163:18;;:::i;6194:416::-;6283:1;6320:5;6283:1;6334:270;6355:7;6345:8;6342:21;6334:270;;;6414:4;6410:1;6406:6;6402:17;6396:4;6393:27;6390:53;;;6423:18;;:::i;:::-;6473:7;6463:8;6459:22;6456:55;;;6493:16;;;;6456:55;6572:22;;;;6532:15;;;;6334:270;;;6338:3;6194:416;;;;;:::o;6615:806::-;6664:5;6694:8;6684:80;;-1:-1:-1;6735:1:15;6749:5;;6684:80;6783:4;6773:76;;-1:-1:-1;6820:1:15;6834:5;;6773:76;6865:4;6883:1;6878:59;;;;6951:1;6946:130;;;;6858:218;;6878:59;6908:1;6899:10;;6922:5;;;6946:130;6983:3;6973:8;6970:17;6967:43;;;6990:18;;:::i;:::-;-1:-1:-1;;7046:1:15;7032:16;;7061:5;;6858:218;;7160:2;7150:8;7147:16;7141:3;7135:4;7132:13;7128:36;7122:2;7112:8;7109:16;7104:2;7098:4;7095:12;7091:35;7088:77;7085:159;;;-1:-1:-1;7197:19:15;;;7229:5;;7085:159;7276:34;7301:8;7295:4;7276:34;:::i;:::-;7346:6;7342:1;7338:6;7334:19;7325:7;7322:32;7319:58;;;7357:18;;:::i;:::-;7395:20;;6615:806;-1:-1:-1;;;6615:806:15:o;7426:140::-;7484:5;7513:47;7554:4;7544:8;7540:19;7534:4;7513:47;:::i;7571:217::-;7611:1;7637;7627:132;;7681:10;7676:3;7672:20;7669:1;7662:31;7716:4;7713:1;7706:15;7744:4;7741:1;7734:15;7627:132;-1:-1:-1;7773:9:15;;7571:217::o;7793:168::-;7866:9;;;7897;;7914:15;;;7908:22;;7894:37;7884:71;;7935:18;;:::i;8625:277::-;8692:6;8745:2;8733:9;8724:7;8720:23;8716:32;8713:52;;;8761:1;8758;8751:12;8713:52;8793:9;8787:16;8846:5;8839:13;8832:21;8825:5;8822:32;8812:60;;8868:1;8865;8858:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "736000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"borrow(address,uint256)": "infinite",
								"chainId()": "2287",
								"depositCollateral(address,uint256)": "infinite",
								"depositCollateralNative()": "infinite",
								"repay(address,uint256)": "infinite",
								"repayNative()": "infinite",
								"tokenBridge()": "2344",
								"tokenBridgeAddress()": "2366",
								"withdrawCollateral(address,uint256)": "infinite"
							},
							"internal": {
								"doAction(enum HubSpokeStructs.Action,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 264,
									"end": 3862,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 264,
									"end": 3862,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 264,
									"end": 3862,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 843,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 239,
									"end": 245,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 239,
									"end": 272,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 239,
									"end": 272,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 239,
									"end": 272,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 239,
									"end": 272,
									"name": "PUSH",
									"source": 8,
									"value": "FFFF"
								},
								{
									"begin": 239,
									"end": 272,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 239,
									"end": 272,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 239,
									"end": 272,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 239,
									"end": 272,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 239,
									"end": 272,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 350,
									"end": 356,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 350,
									"end": 401,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 350,
									"end": 401,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "10000"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 350,
									"end": 401,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 350,
									"end": 401,
									"name": "PUSH",
									"source": 8,
									"value": "10000"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 350,
									"end": 401,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 350,
									"end": 401,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 350,
									"end": 401,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 350,
									"end": 401,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 350,
									"end": 401,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 350,
									"end": 401,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 485,
									"end": 512,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 485,
									"end": 533,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 485,
									"end": 533,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 485,
									"end": 533,
									"name": "AND",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 485,
									"end": 533,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 485,
									"end": 533,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 485,
									"end": 533,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 485,
									"end": 533,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 485,
									"end": 533,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 607,
									"end": 624,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 607,
									"end": 637,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 607,
									"end": 637,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFF00"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 607,
									"end": 637,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 607,
									"end": 637,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 607,
									"end": 637,
									"name": "PUSH",
									"source": 8,
									"value": "FFFF"
								},
								{
									"begin": 607,
									"end": 637,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 607,
									"end": 637,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 607,
									"end": 637,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 607,
									"end": 637,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 607,
									"end": 637,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 607,
									"end": 637,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 728,
									"end": 753,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 728,
									"end": 774,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 728,
									"end": 774,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1000000"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 728,
									"end": 774,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 728,
									"end": 774,
									"name": "PUSH",
									"source": 8,
									"value": "1000000"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 728,
									"end": 774,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 728,
									"end": 774,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 728,
									"end": 774,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 728,
									"end": 774,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 728,
									"end": 774,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 728,
									"end": 774,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1193,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 264,
									"end": 3862,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 264,
									"end": 3862,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 177,
									"name": "tag",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 177,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 92,
									"end": 105,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 92,
									"end": 105,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 145,
									"end": 151,
									"name": "PUSH",
									"source": 15,
									"value": "FFFF"
								},
								{
									"begin": 134,
									"end": 152,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 134,
									"end": 152,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 124,
									"end": 153,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 124,
									"end": 153,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 114,
									"end": 171,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 114,
									"end": 171,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 167,
									"end": 168,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 164,
									"end": 165,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 157,
									"end": 169,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 114,
									"end": 171,
									"name": "tag",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 114,
									"end": 171,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 14,
									"end": 177,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 14,
									"end": 177,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 14,
									"end": 177,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 14,
									"end": 177,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 182,
									"end": 359,
									"name": "tag",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 182,
									"end": 359,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 261,
									"end": 274,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 261,
									"end": 274,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 303,
									"end": 334,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 303,
									"end": 334,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 293,
									"end": 335,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 293,
									"end": 335,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 283,
									"end": 353,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 283,
									"end": 353,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 349,
									"end": 350,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 346,
									"end": 347,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 339,
									"end": 351,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 364,
									"end": 910,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 364,
									"end": 910,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 468,
									"end": 474,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 476,
									"end": 482,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 484,
									"end": 490,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 492,
									"end": 498,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 500,
									"end": 506,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 553,
									"end": 556,
									"name": "PUSH",
									"source": 15,
									"value": "A0"
								},
								{
									"begin": 541,
									"end": 550,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 532,
									"end": 539,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 528,
									"end": 551,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 524,
									"end": 557,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 521,
									"end": 574,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 521,
									"end": 574,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 521,
									"end": 574,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 570,
									"end": 571,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 567,
									"end": 568,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 560,
									"end": 572,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 521,
									"end": 574,
									"name": "tag",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 521,
									"end": 574,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 593,
									"end": 632,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 622,
									"end": 631,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 593,
									"end": 632,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 593,
									"end": 632,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 593,
									"end": 632,
									"name": "tag",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 593,
									"end": 632,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 583,
									"end": 632,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 583,
									"end": 632,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 651,
									"end": 700,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 696,
									"end": 698,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 685,
									"end": 694,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 681,
									"end": 699,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 651,
									"end": 700,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 651,
									"end": 700,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 651,
									"end": 700,
									"name": "tag",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 651,
									"end": 700,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 641,
									"end": 700,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 641,
									"end": 700,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 719,
									"end": 768,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 764,
									"end": 766,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 753,
									"end": 762,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 749,
									"end": 767,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 719,
									"end": 768,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 719,
									"end": 768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 719,
									"end": 768,
									"name": "tag",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 719,
									"end": 768,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 709,
									"end": 768,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 709,
									"end": 768,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 787,
									"end": 835,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 831,
									"end": 833,
									"name": "PUSH",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 820,
									"end": 829,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 816,
									"end": 834,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 787,
									"end": 835,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 787,
									"end": 835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 787,
									"end": 835,
									"name": "tag",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 787,
									"end": 835,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 777,
									"end": 835,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 777,
									"end": 835,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 854,
									"end": 904,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 899,
									"end": 902,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 888,
									"end": 897,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 884,
									"end": 903,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 854,
									"end": 904,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 854,
									"end": 904,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 854,
									"end": 904,
									"name": "tag",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 854,
									"end": 904,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 844,
									"end": 904,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 844,
									"end": 904,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 364,
									"end": 910,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 364,
									"end": 910,
									"name": "SWAP6",
									"source": 15
								},
								{
									"begin": 364,
									"end": 910,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 364,
									"end": 910,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 364,
									"end": 910,
									"name": "SWAP6",
									"source": 15
								},
								{
									"begin": 364,
									"end": 910,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 364,
									"end": 910,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 364,
									"end": 910,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 364,
									"end": 910,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 364,
									"end": 910,
									"name": "tag",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 364,
									"end": 910,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 264,
									"end": 3862,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 3862,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 264,
									"end": 3862,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 3862,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 3862,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 264,
									"end": 3862,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 3862,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bdcedf95167010ae6ad5e97d6d3cf80c6054cdc5aa9b6add6af0e653f5dab7aa64736f6c63430008170033",
									".code": [
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH",
											"source": 6,
											"value": "9A8A0592"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH",
											"source": 6,
											"value": "9A8A0592"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH",
											"source": 6,
											"value": "A5D5DB0C"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH",
											"source": 6,
											"value": "C6328A46"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH",
											"source": 6,
											"value": "E1884919"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH",
											"source": 6,
											"value": "EDBA8209"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH",
											"source": 6,
											"value": "470257"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH",
											"source": 6,
											"value": "22867D78"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH",
											"source": 6,
											"value": "350C35E9"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH",
											"source": 6,
											"value": "4B8A3529"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 3862,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2129,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1927,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1927,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1927,
											"end": 2129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2129,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1927,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1927,
											"end": 2129,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 188,
											"end": 206,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 176,
											"end": 207,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 176,
											"end": 207,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 176,
											"end": 207,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 158,
											"end": 208,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 158,
											"end": 208,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 146,
											"end": 148,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 131,
											"end": 149,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1927,
											"end": 2129,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1927,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1927,
											"end": 2129,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2129,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2129,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2129,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1921,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1753,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1921,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1921,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1921,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1753,
											"end": 1921,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1921,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1921,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1921,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1921,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1753,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1753,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1753,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1753,
											"end": 1921,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1921,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1753,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1753,
											"end": 1921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1921,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1753,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1753,
											"end": 1921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1387,
											"end": 1571,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1387,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1387,
											"end": 1571,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1387,
											"end": 1571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1387,
											"end": 1571,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1387,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1387,
											"end": 1571,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1387,
											"end": 1571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1387,
											"end": 1571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1387,
											"end": 1571,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1387,
											"end": 1571,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1387,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1387,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1387,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1387,
											"end": 1571,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1387,
											"end": 1571,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1387,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1387,
											"end": 1571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1387,
											"end": 1571,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1387,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1387,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1387,
											"end": 1571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1747,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1577,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1747,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1747,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1747,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1577,
											"end": 1747,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1747,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1747,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1747,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1577,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1577,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1577,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1577,
											"end": 1747,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1747,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1577,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1577,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1747,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1577,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1577,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 269,
											"end": 364,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 269,
											"end": 364,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 269,
											"end": 364,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 269,
											"end": 364,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 269,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 269,
											"end": 364,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 269,
											"end": 364,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 269,
											"end": 364,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 309,
											"end": 315,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 357,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 269,
											"end": 364,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 334,
											"end": 357,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 334,
											"end": 357,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 357,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 357,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 819,
											"end": 857,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 819,
											"end": 857,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 807,
											"end": 809,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 269,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 675,
											"end": 863,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1199,
											"end": 1381,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1199,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1381,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1381,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1381,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1199,
											"end": 1381,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1381,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1381,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1381,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1381,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1199,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1199,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1199,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1199,
											"end": 1381,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1381,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1199,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1199,
											"end": 1381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1381,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1199,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1199,
											"end": 1381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 489,
											"end": 621,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 489,
											"end": 621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 489,
											"end": 621,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 489,
											"end": 621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 489,
											"end": 621,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 489,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 489,
											"end": 621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 489,
											"end": 621,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 489,
											"end": 621,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 489,
											"end": 621,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 489,
											"end": 621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 585,
											"end": 612,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 489,
											"end": 621,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 489,
											"end": 621,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 585,
											"end": 612,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1086,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1035,
											"end": 1086,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1023,
											"end": 1025,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1008,
											"end": 1026,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 489,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 868,
											"end": 1092,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2135,
											"end": 2323,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2135,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2135,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2135,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2135,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2129,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1927,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2001,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2033,
											"end": 2053,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2063,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 585,
											"end": 612,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 489,
											"end": 621,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2063,
											"end": 2076,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2063,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2063,
											"end": 2081,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2081,
											"name": "PUSH",
											"source": 6,
											"value": "AD5C4648"
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2063,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 413,
											"end": 422,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 451,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "10000"
										},
										{
											"begin": 451,
											"end": 475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 451,
											"end": 475,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 451,
											"end": 475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2098,
											"end": 2119,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "1A90A219"
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2098,
											"end": 2121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2086,
											"end": 2121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2095,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2086,
											"end": 2121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2121,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2086,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2024,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2024,
											"end": 2122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2024,
											"end": 2122,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2024,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2013,
											"end": 2122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2013,
											"end": 2122,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1921,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1753,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1827,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1914,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1874,
											"end": 1886,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1913,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1865,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1865,
											"end": 1914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1865,
											"end": 1914,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1865,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1914,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1921,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1753,
											"end": 1921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1387,
											"end": 1571,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1387,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1474,
											"end": 1489,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1521,
											"end": 1536,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1552,
											"end": 1563,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1512,
											"end": 1564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1747,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1577,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1690,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1699,
											"end": 1712,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1714,
											"end": 1726,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1739,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1690,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1381,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1199,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1300,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1332,
											"end": 1346,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1348,
											"end": 1360,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1373,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1323,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2135,
											"end": 2323,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2135,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2197,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2229,
											"end": 2247,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2257,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 585,
											"end": 612,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 489,
											"end": 621,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 3860,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2735,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 2844,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2894,
											"end": 2906,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2908,
											"end": 2919,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2856,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2856,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2856,
											"end": 2920,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2856,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2949,
											"end": 2955,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2999,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2969,
											"end": 2975,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 2999,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2969,
											"end": 2999,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 2999,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 2999,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2969,
											"end": 2999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2969,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2969,
											"end": 2999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 2999,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2969,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 2999,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2965,
											"end": 3052,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3027,
											"end": 3041,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2965,
											"end": 3052,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2965,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3093,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3065,
											"end": 3071,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3065,
											"end": 3093,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3065,
											"end": 3093,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3065,
											"end": 3093,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3065,
											"end": 3093,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3065,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3065,
											"end": 3093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3065,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3065,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3065,
											"end": 3093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3065,
											"end": 3093,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3065,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3065,
											"end": 3093,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3061,
											"end": 3144,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3121,
											"end": 3133,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3061,
											"end": 3144,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3061,
											"end": 3144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3154,
											"end": 3182,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 3229,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3197,
											"end": 3305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3239,
											"end": 3249,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3197,
											"end": 3305,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3154,
											"end": 3305,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3154,
											"end": 3305,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3342,
											"end": 3370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3370,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3342,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3316,
											"end": 3370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3395,
											"end": 3409,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3385,
											"end": 3391,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3409,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3385,
											"end": 3409,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3409,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3409,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3385,
											"end": 3409,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3385,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3385,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3409,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3385,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3409,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3435,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3385,
											"end": 3435,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3423,
											"end": 3435,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3413,
											"end": 3419,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3413,
											"end": 3435,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3413,
											"end": 3435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3413,
											"end": 3435,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3413,
											"end": 3435,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3413,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3413,
											"end": 3435,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3413,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3413,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3413,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3413,
											"end": 3435,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3413,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3413,
											"end": 3435,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3435,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3385,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3854,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3381,
											"end": 3854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3485,
											"end": 3497,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3510,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 3522,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3462,
											"end": 3523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3523,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3462,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3523,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3523,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3381,
											"end": 3854,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3854,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3381,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3569,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3544,
											"end": 3550,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3569,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3544,
											"end": 3569,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3569,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3569,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3544,
											"end": 3569,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3544,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3544,
											"end": 3569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3569,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3544,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3569,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3544,
											"end": 3596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3573,
											"end": 3579,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3573,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3573,
											"end": 3596,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3573,
											"end": 3596,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3573,
											"end": 3596,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3573,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3573,
											"end": 3596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3573,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3573,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3573,
											"end": 3596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3573,
											"end": 3596,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3573,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3573,
											"end": 3596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3596,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3544,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3854,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3540,
											"end": 3854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3643,
											"end": 3653,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3623,
											"end": 3654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3854,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3540,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3705,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3675,
											"end": 3681,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3705,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3675,
											"end": 3705,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3705,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3705,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3675,
											"end": 3705,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3675,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3675,
											"end": 3705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3705,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3675,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3705,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3737,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3675,
											"end": 3737,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3719,
											"end": 3737,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3709,
											"end": 3715,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3737,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3709,
											"end": 3737,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3737,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3737,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3709,
											"end": 3737,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3709,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3709,
											"end": 3737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3737,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3709,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3737,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3737,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3675,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3854,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3671,
											"end": 3854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 413,
											"end": 422,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 3764,
											"end": 3843,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 451,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "10000"
										},
										{
											"begin": 451,
											"end": 475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 451,
											"end": 475,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 451,
											"end": 475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3807,
											"end": 3828,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3828,
											"name": "PUSH",
											"source": 6,
											"value": "1A90A219"
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3807,
											"end": 3830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3793,
											"end": 3830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3804,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 3793,
											"end": 3830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3830,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3793,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3832,
											"end": 3842,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3764,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3764,
											"end": 3843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3764,
											"end": 3843,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 3764,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3843,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3854,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3671,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 3860,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 3860,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 3860,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2735,
											"end": 3860,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2735,
											"end": 3860,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2735,
											"end": 3860,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2735,
											"end": 3860,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2735,
											"end": 3860,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2735,
											"end": 3860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1497,
											"end": 1940,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1497,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1707,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1670,
											"end": 1707,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1707,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1707,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1670,
											"end": 1707,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1707,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1707,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1670,
											"end": 1707,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1707,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1707,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1707,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1707,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1707,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1707,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1707,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1707,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1670,
											"end": 1707,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313CE567"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1670,
											"end": 1707,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1707,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1707,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1614,
											"end": 1642,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1614,
											"end": 1642,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1646,
											"end": 1669,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1669,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1669,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1707,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 1646,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1708,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1708,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1708,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1708,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1732,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1761,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1771,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1771,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1735,
											"end": 1771,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1771,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1771,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1771,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 1735,
											"end": 1771,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 1735,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1771,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 1735,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1873,
											"end": 1884,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 1836,
											"end": 1847,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1849,
											"end": 1857,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1820,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 1820,
											"end": 1858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1868,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 1802,
											"end": 1869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1869,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 1802,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1884,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 1781,
											"end": 1933,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1933,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1781,
											"end": 1933,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1781,
											"end": 1933,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1933,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3318,
											"end": 3320,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1781,
											"end": 1933,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1781,
											"end": 1933,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1933,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3321,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3357,
											"end": 3359,
											"name": "PUSH",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3360,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3396,
											"end": 3421,
											"name": "PUSH",
											"source": 15,
											"value": "546F6F206D616E7920646563696D616C20706C61636573000000000000000000"
										},
										{
											"begin": 3376,
											"end": 3394,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 3376,
											"end": 3394,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3376,
											"end": 3394,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3369,
											"end": 3422,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3439,
											"end": 3457,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 3439,
											"end": 3457,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1781,
											"end": 1933,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 1781,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1933,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1781,
											"end": 1933,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1933,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1933,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1933,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1933,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1933,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1933,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 1781,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1497,
											"end": 1940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1497,
											"end": 1940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1497,
											"end": 1940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 225,
											"end": 443,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 225,
											"end": 443,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 361,
											"end": 375,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 361,
											"end": 375,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 307,
											"end": 319,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 307,
											"end": 319,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 355,
											"end": 376,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 355,
											"end": 376,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 355,
											"end": 376,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 355,
											"end": 376,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 355,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 355,
											"end": 376,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 355,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 355,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 355,
											"end": 376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 355,
											"end": 376,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 355,
											"end": 376,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 378,
											"end": 385,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 378,
											"end": 392,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 378,
											"end": 392,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 378,
											"end": 392,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 394,
											"end": 401,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 394,
											"end": 414,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 394,
											"end": 414,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 394,
											"end": 414,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 416,
											"end": 423,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 416,
											"end": 435,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 416,
											"end": 435,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 416,
											"end": 435,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 338,
											"end": 436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 338,
											"end": 436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 338,
											"end": 436,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 338,
											"end": 436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 338,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 338,
											"end": 436,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 338,
											"end": 436,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 338,
											"end": 436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 338,
											"end": 436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 338,
											"end": 436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3715,
											"end": 3718,
											"name": "PUSH",
											"source": 15,
											"value": "F8"
										},
										{
											"begin": 3693,
											"end": 3709,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 3693,
											"end": 3709,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3693,
											"end": 3709,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 3693,
											"end": 3709,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3689,
											"end": 3725,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3677,
											"end": 3726,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3677,
											"end": 3726,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3813,
											"end": 3815,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3809,
											"end": 3824,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3809,
											"end": 3824,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3809,
											"end": 3824,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3805,
											"end": 3829,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3805,
											"end": 3829,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3805,
											"end": 3829,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3801,
											"end": 3802,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 3792,
											"end": 3803,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3792,
											"end": 3803,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3785,
											"end": 3830,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3864,
											"end": 3879,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3864,
											"end": 3879,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3864,
											"end": 3879,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3864,
											"end": 3879,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 3860,
											"end": 3884,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "PUSH",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 3846,
											"end": 3858,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3846,
											"end": 3858,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3839,
											"end": 3885,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3910,
											"end": 3912,
											"name": "PUSH",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3894,
											"end": 3922,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3947,
											"end": 3949,
											"name": "PUSH",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 3938,
											"end": 3950,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3938,
											"end": 3950,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3468,
											"end": 3956,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 338,
											"end": 436,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 338,
											"end": 436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 338,
											"end": 436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 338,
											"end": 436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 338,
											"end": 436,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 338,
											"end": 436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 338,
											"end": 436,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 338,
											"end": 436,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 338,
											"end": 436,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 338,
											"end": 436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 338,
											"end": 436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 338,
											"end": 436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 338,
											"end": 436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 338,
											"end": 436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 331,
											"end": 436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 331,
											"end": 436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 225,
											"end": 443,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 225,
											"end": 443,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 443,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 225,
											"end": 443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 659,
											"end": 1191,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 659,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 790,
											"end": 805,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 855,
											"end": 867,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 870,
											"end": 880,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 890,
											"end": 894,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 897,
											"end": 908,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 821,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 821,
											"end": 909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 821,
											"end": 909,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 821,
											"end": 909,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 920,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 950,
											"end": 962,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 965,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 585,
											"end": 612,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 489,
											"end": 621,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 965,
											"end": 985,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 965,
											"end": 985,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 987,
											"end": 998,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 920,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 920,
											"end": 999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 920,
											"end": 999,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 920,
											"end": 999,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 585,
											"end": 612,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 585,
											"end": 612,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 1060,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1060,
											"name": "PUSH",
											"source": 10,
											"value": "C5A5EBDA"
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1088,
											"end": 1099,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1101,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 925,
											"end": 942,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 925,
											"end": 942,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 925,
											"end": 942,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 925,
											"end": 942,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 925,
											"end": 942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 925,
											"end": 942,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 925,
											"end": 942,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 925,
											"end": 942,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 925,
											"end": 942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 855,
											"end": 949,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1113,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 1101,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "PUSH",
											"source": 7,
											"value": "1000000"
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1115,
											"end": 1162,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1115,
											"end": 1162,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1167,
											"end": 1174,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 1167,
											"end": 1174,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 1021,
											"end": 1184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 1021,
											"end": 1184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 1021,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1184,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 659,
											"end": 1191,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 659,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 427,
											"end": 653,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 427,
											"end": 653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 496,
											"end": 511,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 451,
											"end": 475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 451,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "10000"
										},
										{
											"begin": 451,
											"end": 475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 451,
											"end": 475,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 451,
											"end": 475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 534,
											"end": 559,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 534,
											"end": 559,
											"name": "PUSH",
											"source": 10,
											"value": "B19A437E"
										},
										{
											"begin": 573,
											"end": 574,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 604,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 618,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 819,
											"end": 842,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 819,
											"end": 842,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 819,
											"end": 842,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 819,
											"end": 842,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 819,
											"end": 842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 744,
											"end": 849,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 618,
											"end": 636,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 618,
											"end": 636,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 534,
											"end": 646,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 534,
											"end": 646,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 534,
											"end": 646,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 534,
											"end": 646,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 534,
											"end": 646,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 534,
											"end": 646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 534,
											"end": 646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 534,
											"end": 646,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 534,
											"end": 646,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 646,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 534,
											"end": 646,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 646,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 646,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 534,
											"end": 646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 534,
											"end": 646,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 534,
											"end": 646,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 534,
											"end": 646,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 534,
											"end": 646,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 534,
											"end": 646,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 534,
											"end": 646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 534,
											"end": 646,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 534,
											"end": 646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 523,
											"end": 646,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 427,
											"end": 653,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 427,
											"end": 653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1491,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 1197,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1306,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 585,
											"end": 612,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 489,
											"end": 621,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1342,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 1329,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1329,
											"end": 1372,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1372,
											"name": "PUSH",
											"source": 10,
											"value": "BEE9CDFC"
										},
										{
											"begin": 1380,
											"end": 1386,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 925,
											"end": 942,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 925,
											"end": 942,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 925,
											"end": 942,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 925,
											"end": 942,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 925,
											"end": 942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 925,
											"end": 942,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 925,
											"end": 942,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 925,
											"end": 942,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 925,
											"end": 942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 855,
											"end": 949,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1401,
											"end": 1413,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 1401,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "PUSH",
											"source": 7,
											"value": "1000000"
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1462,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1462,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1467,
											"end": 1474,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 1467,
											"end": 1474,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 1329,
											"end": 1484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 1329,
											"end": 1484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2033,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2060,
											"end": 2061,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 2049,
											"end": 2057,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2045,
											"end": 2118,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2045,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 2045,
											"end": 2118,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2094,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 2105,
											"end": 2106,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 2094,
											"end": 2102,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2094,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 2094,
											"end": 2106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2094,
											"end": 2106,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 2094,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 2087,
											"end": 2107,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2089,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 2087,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 2087,
											"end": 2107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2107,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 2087,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2077,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 2077,
											"end": 2107,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2077,
											"end": 2107,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2077,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 2077,
											"end": 2107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2077,
											"end": 2107,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 2077,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2077,
											"end": 2107,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2077,
											"end": 2107,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2045,
											"end": 2118,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 2045,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2134,
											"end": 2140,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2134,
											"end": 2140,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1946,
											"end": 2147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2356,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 2153,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2242,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2270,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 2258,
											"end": 2266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2258,
											"end": 2270,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2258,
											"end": 2270,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2258,
											"end": 2270,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2254,
											"end": 2327,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2254,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 2254,
											"end": 2327,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2303,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2314,
											"end": 2315,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 2303,
											"end": 2311,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2303,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 2303,
											"end": 2315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2303,
											"end": 2315,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2303,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 2296,
											"end": 2316,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2298,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 2296,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 2296,
											"end": 2316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2316,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 2296,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 2286,
											"end": 2316,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2316,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 2286,
											"end": 2316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8224,
											"end": 8239,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8224,
											"end": 8239,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8224,
											"end": 8239,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8206,
											"end": 8240,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8276,
											"end": 8291,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8276,
											"end": 8291,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8276,
											"end": 8291,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8256,
											"end": 8274,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 8256,
											"end": 8274,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8256,
											"end": 8274,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8249,
											"end": 8292,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8308,
											"end": 8326,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 8308,
											"end": 8326,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8308,
											"end": 8326,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8301,
											"end": 8335,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8301,
											"end": 8335,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8301,
											"end": 8335,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8141,
											"end": 8159,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 8141,
											"end": 8159,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8538,
											"end": 8570,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8538,
											"end": 8570,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8538,
											"end": 8570,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8520,
											"end": 8571,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8587,
											"end": 8605,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 8587,
											"end": 8605,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8587,
											"end": 8605,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8580,
											"end": 8614,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8580,
											"end": 8614,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8580,
											"end": 8614,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8493,
											"end": 8511,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 8493,
											"end": 8511,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 8346,
											"end": 8620,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1086,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1008,
											"end": 1026,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1008,
											"end": 1026,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 868,
											"end": 1092,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1086,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1008,
											"end": 1026,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1008,
											"end": 1026,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 868,
											"end": 1092,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5743,
											"end": 6259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 219,
											"end": 350,
											"name": "tag",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 219,
											"end": 350,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 294,
											"end": 325,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 294,
											"end": 325,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 284,
											"end": 326,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 284,
											"end": 326,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 274,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 274,
											"end": 344,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 340,
											"end": 341,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 338,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 330,
											"end": 342,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 355,
											"end": 670,
											"name": "tag",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 355,
											"end": 670,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 423,
											"end": 429,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 437,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 484,
											"end": 486,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 481,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 463,
											"end": 470,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 459,
											"end": 482,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 455,
											"end": 487,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 452,
											"end": 504,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 452,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 452,
											"end": 504,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 500,
											"end": 501,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 498,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 490,
											"end": 502,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 452,
											"end": 504,
											"name": "tag",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 452,
											"end": 504,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 539,
											"end": 548,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 526,
											"end": 549,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 558,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 558,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 558,
											"end": 589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 558,
											"end": 589,
											"name": "tag",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 558,
											"end": 589,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 608,
											"end": 613,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 660,
											"end": 662,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 645,
											"end": 663,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 645,
											"end": 663,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 645,
											"end": 663,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 645,
											"end": 663,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 632,
											"end": 664,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 632,
											"end": 664,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 355,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1305,
											"end": 1570,
											"name": "tag",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 1305,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 1444,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1430,
											"end": 1439,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1421,
											"end": 1428,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1413,
											"end": 1445,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1410,
											"end": 1462,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1410,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 1410,
											"end": 1462,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1459,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1456,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1448,
											"end": 1460,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1410,
											"end": 1462,
											"name": "tag",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 1410,
											"end": 1462,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1490,
											"end": 1499,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1484,
											"end": 1500,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 1509,
											"end": 1540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1575,
											"end": 1759,
											"name": "tag",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 1575,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1645,
											"end": 1651,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1700,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1686,
											"end": 1695,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1677,
											"end": 1684,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1673,
											"end": 1696,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1669,
											"end": 1701,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1666,
											"end": 1718,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1666,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 1666,
											"end": 1718,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1714,
											"end": 1715,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1711,
											"end": 1712,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1704,
											"end": 1716,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1666,
											"end": 1718,
											"name": "tag",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 1666,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1737,
											"end": 1753,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1737,
											"end": 1753,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1575,
											"end": 1759,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1575,
											"end": 1759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1764,
											"end": 1891,
											"name": "tag",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 1764,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1825,
											"end": 1835,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 1820,
											"end": 1823,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 1816,
											"end": 1836,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 1813,
											"end": 1814,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1837,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1856,
											"end": 1860,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 1853,
											"end": 1854,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1846,
											"end": 1861,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1880,
											"end": 1884,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1877,
											"end": 1878,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1870,
											"end": 1885,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1896,
											"end": 2024,
											"name": "tag",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 1896,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1984,
											"end": 1995,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1984,
											"end": 1995,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1984,
											"end": 1995,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 1981,
											"end": 2018,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 1998,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2029,
											"end": 2156,
											"name": "tag",
											"source": 15,
											"value": "99"
										},
										{
											"begin": 2029,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2090,
											"end": 2100,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 2085,
											"end": 2088,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 2081,
											"end": 2101,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 2078,
											"end": 2079,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2102,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2121,
											"end": 2125,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2111,
											"end": 2126,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2145,
											"end": 2149,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 2142,
											"end": 2143,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2161,
											"end": 2286,
											"name": "tag",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 2161,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2226,
											"end": 2235,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2226,
											"end": 2235,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2226,
											"end": 2235,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2247,
											"end": 2257,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2247,
											"end": 2257,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2247,
											"end": 2257,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2244,
											"end": 2280,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2244,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 2244,
											"end": 2280,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 2260,
											"end": 2278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2291,
											"end": 2541,
											"name": "tag",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 2291,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2376,
											"end": 2377,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2499,
											"name": "tag",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 2386,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2400,
											"end": 2406,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2398,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2394,
											"end": 2407,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 2386,
											"end": 2499,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2386,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 2386,
											"end": 2499,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2470,
											"end": 2488,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2457,
											"end": 2468,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2457,
											"end": 2468,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2457,
											"end": 2468,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2450,
											"end": 2489,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2422,
											"end": 2424,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2425,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2386,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 2386,
											"end": 2499,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2386,
											"end": 2499,
											"name": "tag",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 2386,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2533,
											"end": 2534,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2515,
											"end": 2531,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2515,
											"end": 2531,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2508,
											"end": 2535,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2291,
											"end": 2541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2546,
											"end": 2833,
											"name": "tag",
											"source": 15,
											"value": "158"
										},
										{
											"begin": 2546,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2675,
											"end": 2678,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2713,
											"end": 2719,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2707,
											"end": 2720,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2729,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 2788,
											"end": 2794,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2783,
											"end": 2786,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2776,
											"end": 2780,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2774,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 2764,
											"end": 2781,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2729,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 2729,
											"end": 2795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2729,
											"end": 2795,
											"name": "tag",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 2729,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2811,
											"end": 2827,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2811,
											"end": 2827,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2811,
											"end": 2827,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2811,
											"end": 2827,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2811,
											"end": 2827,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2546,
											"end": 2833,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2546,
											"end": 2833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2838,
											"end": 3111,
											"name": "tag",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 2838,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2906,
											"end": 2912,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2961,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2947,
											"end": 2956,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2938,
											"end": 2945,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2934,
											"end": 2957,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2930,
											"end": 2962,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2927,
											"end": 2979,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2927,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 2927,
											"end": 2979,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2975,
											"end": 2976,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2972,
											"end": 2973,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2965,
											"end": 2977,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2927,
											"end": 2979,
											"name": "tag",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 2927,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3007,
											"end": 3016,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3001,
											"end": 3017,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3057,
											"end": 3061,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3046,
											"end": 3062,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3039,
											"end": 3044,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 3026,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 3026,
											"end": 3081,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3077,
											"end": 3078,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3074,
											"end": 3075,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3067,
											"end": 3079,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3961,
											"end": 4231,
											"name": "tag",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 3961,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4002,
											"end": 4005,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4045,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4034,
											"end": 4046,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4067,
											"end": 4073,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4062,
											"end": 4065,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4055,
											"end": 4074,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4083,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 4152,
											"end": 4158,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4145,
											"end": 4149,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4140,
											"end": 4143,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4136,
											"end": 4150,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4129,
											"end": 4133,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4122,
											"end": 4127,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4118,
											"end": 4134,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4083,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 4083,
											"end": 4159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4083,
											"end": 4159,
											"name": "tag",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 4083,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4213,
											"end": 4215,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4192,
											"end": 4207,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4188,
											"end": 4217,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4179,
											"end": 4218,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4179,
											"end": 4218,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4179,
											"end": 4218,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4179,
											"end": 4218,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4175,
											"end": 4225,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4175,
											"end": 4225,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3961,
											"end": 4231,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3961,
											"end": 4231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4236,
											"end": 4873,
											"name": "tag",
											"source": 15,
											"value": "188"
										},
										{
											"begin": 4236,
											"end": 4873,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4557,
											"end": 4558,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 4553,
											"end": 4554,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4548,
											"end": 4551,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 4544,
											"end": 4555,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 4540,
											"end": 4559,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4532,
											"end": 4538,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4528,
											"end": 4560,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4517,
											"end": 4526,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4510,
											"end": 4561,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4597,
											"end": 4603,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4592,
											"end": 4594,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4581,
											"end": 4590,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4577,
											"end": 4595,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4570,
											"end": 4604,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4652,
											"end": 4658,
											"name": "PUSH",
											"source": 15,
											"value": "FFFF"
										},
										{
											"begin": 4644,
											"end": 4650,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4640,
											"end": 4659,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4635,
											"end": 4637,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4624,
											"end": 4633,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4620,
											"end": 4638,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4613,
											"end": 4660,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4696,
											"end": 4702,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4691,
											"end": 4693,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 4680,
											"end": 4689,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4676,
											"end": 4694,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4669,
											"end": 4703,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4752,
											"end": 4762,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4744,
											"end": 4750,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4740,
											"end": 4763,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4734,
											"end": 4737,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 4723,
											"end": 4732,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4719,
											"end": 4738,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4712,
											"end": 4764,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4801,
											"end": 4804,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 4795,
											"end": 4798,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 4784,
											"end": 4793,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4780,
											"end": 4799,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4773,
											"end": 4805,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4491,
											"end": 4495,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4822,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 4862,
											"end": 4865,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 4851,
											"end": 4860,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4847,
											"end": 4866,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4839,
											"end": 4845,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4822,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 4822,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4822,
											"end": 4867,
											"name": "tag",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 4822,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "SWAP9",
											"source": 15
										},
										{
											"begin": 4236,
											"end": 4873,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4236,
											"end": 4873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4878,
											"end": 5166,
											"name": "tag",
											"source": 15,
											"value": "192"
										},
										{
											"begin": 4878,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4947,
											"end": 4953,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5000,
											"end": 5002,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4988,
											"end": 4997,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4979,
											"end": 4986,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4975,
											"end": 4998,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4971,
											"end": 5003,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4968,
											"end": 5020,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4968,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 4968,
											"end": 5020,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5016,
											"end": 5017,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5006,
											"end": 5018,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4968,
											"end": 5020,
											"name": "tag",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 4968,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5048,
											"end": 5057,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5042,
											"end": 5058,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5098,
											"end": 5116,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5091,
											"end": 5096,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5087,
											"end": 5117,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5080,
											"end": 5085,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5077,
											"end": 5118,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 5067,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 5067,
											"end": 5136,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5132,
											"end": 5133,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5129,
											"end": 5130,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5122,
											"end": 5134,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5171,
											"end": 5561,
											"name": "tag",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 5171,
											"end": 5561,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5399,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5381,
											"end": 5387,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5377,
											"end": 5400,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5366,
											"end": 5375,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5359,
											"end": 5401,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5437,
											"end": 5439,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5432,
											"end": 5434,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5421,
											"end": 5430,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5417,
											"end": 5435,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5410,
											"end": 5440,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5340,
											"end": 5344,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 5497,
											"end": 5499,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5486,
											"end": 5495,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5482,
											"end": 5500,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5474,
											"end": 5480,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5457,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 5457,
											"end": 5501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5457,
											"end": 5501,
											"name": "tag",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 5457,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5449,
											"end": 5501,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5449,
											"end": 5501,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5549,
											"end": 5553,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 5541,
											"end": 5547,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5537,
											"end": 5554,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5532,
											"end": 5534,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5521,
											"end": 5530,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5517,
											"end": 5535,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5510,
											"end": 5555,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5171,
											"end": 5561,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 5171,
											"end": 5561,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5171,
											"end": 5561,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5171,
											"end": 5561,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5171,
											"end": 5561,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5171,
											"end": 5561,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5171,
											"end": 5561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 6033,
											"name": "tag",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 5566,
											"end": 6033,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5814,
											"end": 5820,
											"name": "PUSH",
											"source": 15,
											"value": "FFFF"
										},
										{
											"begin": 5806,
											"end": 5812,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5802,
											"end": 5821,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5791,
											"end": 5800,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5784,
											"end": 5822,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5858,
											"end": 5864,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5853,
											"end": 5855,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5842,
											"end": 5851,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5838,
											"end": 5856,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5831,
											"end": 5865,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5913,
											"end": 5923,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5905,
											"end": 5911,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5901,
											"end": 5924,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5896,
											"end": 5898,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5885,
											"end": 5894,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5881,
											"end": 5899,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5874,
											"end": 5925,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5961,
											"end": 5964,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 5956,
											"end": 5958,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5945,
											"end": 5954,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5941,
											"end": 5959,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5934,
											"end": 5965,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5765,
											"end": 5769,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5982,
											"end": 6027,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 6022,
											"end": 6025,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 6011,
											"end": 6020,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6007,
											"end": 6026,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5999,
											"end": 6005,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5982,
											"end": 6027,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 5982,
											"end": 6027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6038,
											"end": 6189,
											"name": "tag",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 6038,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6128,
											"end": 6132,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 6121,
											"end": 6133,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6121,
											"end": 6133,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6121,
											"end": 6133,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6107,
											"end": 6119,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6107,
											"end": 6119,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6107,
											"end": 6119,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6103,
											"end": 6134,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6103,
											"end": 6134,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6146,
											"end": 6160,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6146,
											"end": 6160,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6143,
											"end": 6183,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6143,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 6143,
											"end": 6183,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6163,
											"end": 6181,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 6163,
											"end": 6181,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 6163,
											"end": 6181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6194,
											"end": 6610,
											"name": "tag",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 6194,
											"end": 6610,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6283,
											"end": 6284,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 6320,
											"end": 6325,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6283,
											"end": 6284,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6334,
											"end": 6604,
											"name": "tag",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 6334,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6355,
											"end": 6362,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6345,
											"end": 6353,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6342,
											"end": 6363,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6334,
											"end": 6604,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6334,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 6334,
											"end": 6604,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6414,
											"end": 6418,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6410,
											"end": 6411,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6406,
											"end": 6412,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 6402,
											"end": 6419,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 6396,
											"end": 6400,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6393,
											"end": 6420,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6390,
											"end": 6443,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6390,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 6390,
											"end": 6443,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6423,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 6423,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 6423,
											"end": 6441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6423,
											"end": 6441,
											"name": "tag",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 6423,
											"end": 6441,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6473,
											"end": 6480,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6463,
											"end": 6471,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6459,
											"end": 6481,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6456,
											"end": 6511,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6456,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 6456,
											"end": 6511,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6493,
											"end": 6509,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6493,
											"end": 6509,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6493,
											"end": 6509,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 6493,
											"end": 6509,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6456,
											"end": 6511,
											"name": "tag",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 6456,
											"end": 6511,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6572,
											"end": 6594,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6572,
											"end": 6594,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6572,
											"end": 6594,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 6572,
											"end": 6594,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6532,
											"end": 6547,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6532,
											"end": 6547,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6532,
											"end": 6547,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 6532,
											"end": 6547,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6334,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 6334,
											"end": 6604,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6334,
											"end": 6604,
											"name": "tag",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 6334,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6338,
											"end": 6341,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6194,
											"end": 6610,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6194,
											"end": 6610,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6194,
											"end": 6610,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6194,
											"end": 6610,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6194,
											"end": 6610,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6194,
											"end": 6610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6615,
											"end": 7421,
											"name": "tag",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 6615,
											"end": 7421,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6664,
											"end": 6669,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6694,
											"end": 6702,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6684,
											"end": 6764,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 6684,
											"end": 6764,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6735,
											"end": 6736,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 6749,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 6749,
											"end": 6754,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6684,
											"end": 6764,
											"name": "tag",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 6684,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6783,
											"end": 6787,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6773,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 6773,
											"end": 6849,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6820,
											"end": 6821,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6839,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 6834,
											"end": 6839,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6773,
											"end": 6849,
											"name": "tag",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 6773,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6865,
											"end": 6869,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6883,
											"end": 6884,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 6878,
											"end": 6937,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6878,
											"end": 6937,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 6878,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 6878,
											"end": 6937,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6951,
											"end": 6952,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 6946,
											"end": 7076,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6946,
											"end": 7076,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 6946,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 6946,
											"end": 7076,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6858,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 6858,
											"end": 7076,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6878,
											"end": 6937,
											"name": "tag",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 6878,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6908,
											"end": 6909,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 6899,
											"end": 6909,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6899,
											"end": 6909,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6922,
											"end": 6927,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6922,
											"end": 6927,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 6922,
											"end": 6927,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6946,
											"end": 7076,
											"name": "tag",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 6946,
											"end": 7076,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6983,
											"end": 6986,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 6973,
											"end": 6981,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6970,
											"end": 6987,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6967,
											"end": 7010,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6967,
											"end": 7010,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 6967,
											"end": 7010,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 6990,
											"end": 7008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "tag",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 7032,
											"end": 7048,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7032,
											"end": 7048,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 7061,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 7061,
											"end": 7066,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6858,
											"end": 7076,
											"name": "tag",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 6858,
											"end": 7076,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6858,
											"end": 7076,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7160,
											"end": 7162,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7150,
											"end": 7158,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7147,
											"end": 7163,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 7141,
											"end": 7144,
											"name": "PUSH",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 7135,
											"end": 7139,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7132,
											"end": 7145,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 7128,
											"end": 7164,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7122,
											"end": 7124,
											"name": "PUSH",
											"source": 15,
											"value": "4E"
										},
										{
											"begin": 7112,
											"end": 7120,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7109,
											"end": 7125,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 7104,
											"end": 7106,
											"name": "PUSH",
											"source": 15,
											"value": "B"
										},
										{
											"begin": 7098,
											"end": 7102,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7095,
											"end": 7107,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 7091,
											"end": 7126,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7088,
											"end": 7165,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 7085,
											"end": 7244,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7085,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 7085,
											"end": 7244,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7197,
											"end": 7216,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7197,
											"end": 7216,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7197,
											"end": 7216,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 7229,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 7229,
											"end": 7234,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7085,
											"end": 7244,
											"name": "tag",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 7085,
											"end": 7244,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7276,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 7301,
											"end": 7309,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7295,
											"end": 7299,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7276,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 7276,
											"end": 7310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7276,
											"end": 7310,
											"name": "tag",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 7276,
											"end": 7310,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7346,
											"end": 7352,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7342,
											"end": 7343,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7338,
											"end": 7344,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 7334,
											"end": 7353,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 7325,
											"end": 7332,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7322,
											"end": 7354,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7319,
											"end": 7377,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7319,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 7319,
											"end": 7377,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7357,
											"end": 7375,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 7357,
											"end": 7375,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 7357,
											"end": 7375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7357,
											"end": 7375,
											"name": "tag",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 7357,
											"end": 7375,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7395,
											"end": 7415,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 7395,
											"end": 7415,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6615,
											"end": 7421,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6615,
											"end": 7421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7426,
											"end": 7566,
											"name": "tag",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 7426,
											"end": 7566,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7484,
											"end": 7489,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7513,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 7554,
											"end": 7558,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 7544,
											"end": 7552,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7540,
											"end": 7559,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7534,
											"end": 7538,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7513,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 7513,
											"end": 7560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7571,
											"end": 7788,
											"name": "tag",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 7571,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7611,
											"end": 7612,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7638,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7627,
											"end": 7759,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 7627,
											"end": 7759,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7681,
											"end": 7691,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 7676,
											"end": 7679,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 7672,
											"end": 7692,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 7669,
											"end": 7670,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7662,
											"end": 7693,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7716,
											"end": 7720,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 7713,
											"end": 7714,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7706,
											"end": 7721,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7744,
											"end": 7748,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7741,
											"end": 7742,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7734,
											"end": 7749,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7627,
											"end": 7759,
											"name": "tag",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 7627,
											"end": 7759,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7773,
											"end": 7782,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 7773,
											"end": 7782,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7571,
											"end": 7788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7793,
											"end": 7961,
											"name": "tag",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 7793,
											"end": 7961,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7866,
											"end": 7875,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7866,
											"end": 7875,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7866,
											"end": 7875,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 7897,
											"end": 7906,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7897,
											"end": 7906,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7914,
											"end": 7929,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7914,
											"end": 7929,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7914,
											"end": 7929,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 7908,
											"end": 7930,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7908,
											"end": 7930,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 7894,
											"end": 7931,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 7884,
											"end": 7955,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 7884,
											"end": 7955,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 7935,
											"end": 7953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8625,
											"end": 8902,
											"name": "tag",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 8625,
											"end": 8902,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8692,
											"end": 8698,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8745,
											"end": 8747,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8733,
											"end": 8742,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8724,
											"end": 8731,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8720,
											"end": 8743,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8716,
											"end": 8748,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8713,
											"end": 8765,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8713,
											"end": 8765,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 8713,
											"end": 8765,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8761,
											"end": 8762,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8758,
											"end": 8759,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8751,
											"end": 8763,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8713,
											"end": 8765,
											"name": "tag",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 8713,
											"end": 8765,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8793,
											"end": 8802,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8787,
											"end": 8803,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 8846,
											"end": 8851,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8839,
											"end": 8852,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8832,
											"end": 8853,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8825,
											"end": 8830,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8822,
											"end": 8854,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 8812,
											"end": 8872,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 8812,
											"end": 8872,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8868,
											"end": 8869,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8865,
											"end": 8866,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8858,
											"end": 8870,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"example-2/evm/src/contracts/HubSpokeMessages.sol",
								"example-2/evm/src/contracts/HubSpokeStructs.sol",
								"example-2/evm/src/contracts/lendingSpoke/Spoke.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol",
								"example-2/evm/src/interfaces/ITokenBridge.sol",
								"example-2/evm/src/interfaces/IWETH.sol",
								"example-2/evm/src/interfaces/IWormhole.sol",
								"example-2/evm/src/libraries/external/BytesLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"borrow(address,uint256)": "4b8a3529",
							"chainId()": "9a8a0592",
							"depositCollateral(address,uint256)": "a5d5db0c",
							"depositCollateralNative()": "00470257",
							"repay(address,uint256)": "22867d78",
							"repayNative()": "edba8209",
							"tokenBridge()": "c6328a46",
							"tokenBridgeAddress()": "e1884919",
							"withdrawCollateral(address,uint256)": "350c35e9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"wormhole\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenBridge\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"hubChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"hubContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositCollateralNative\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"repayNative\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridge\",\"outputs\":[{\"internalType\":\"contract ITokenBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridgeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"chainId\":\": Chain ID of the chain that this Spoke is deployed on\",\"hubChainId\":\": Chain ID of the Hub\",\"hubContractAddress\":\": Contract address of the Hub contract (on the Hub chain)\",\"tokenBridge\":\": Address of the TokenBridge contract on this Spoke chain\",\"wormhole\":\": Address of the Wormhole contract on this Spoke chain\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Spoke constructor - Initializes a new spoke with given parameters \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":\"Spoke\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"example-2/evm/src/contracts/HubSpokeMessages.sol\":{\"keccak256\":\"0xbd7eddd402e84ececac48891645f176cd5c7c1e900ea6c10535d79f5df711dfd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b9f854584331c92ceedab8a9164a2d57ebde3aabbf081fd82c2862bddb978bf2\",\"dweb:/ipfs/QmTnJyxqnSq7n9o2FgGfV1RecQ2HTW8vJfPcCS9Qwig1No\"]},\"example-2/evm/src/contracts/HubSpokeStructs.sol\":{\"keccak256\":\"0x24302b1f2d165f5b53d3bedd11aa1c367d30458bb93e0a34a79a939e753fd7dc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://11d40dd261195ea6fe19f0aa56d2aad5040cabd000041b250d3419985e9d6a9e\",\"dweb:/ipfs/Qmd59wjnwsyt2ave7vYQZQdPxk2AGHAvWVhQAUGAgxPMJ6\"]},\"example-2/evm/src/contracts/lendingSpoke/Spoke.sol\":{\"keccak256\":\"0x2c45de7cb77b72ddb69cd11d1a64151d281a3023255039ca77bad954e63976c6\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9cf6be76d83d640fb777399f8805653e0dd34ebde5882fc95063db4943ef75d0\",\"dweb:/ipfs/QmPXCx2qAGZn6h1k5ejUZWTwcfKPzPGz9zuFy3YVkGWLpV\"]},\"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":{\"keccak256\":\"0xb997dc0290213b1a75e59c29dd4a2528d203bc6c2f511db26e07c9e7e4795d4b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fe39567ca05eca938a1a173c036a348bc0abde7af35227d5fa38a7e173813166\",\"dweb:/ipfs/QmPU7NnzM1MLPHFH9rpxT9PU8Xn3kpw9beyaxfbi4hcf3V\"]},\"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol\":{\"keccak256\":\"0x9ac8f289c14b91bfa37e3e4e52de2b7b045ac8b18881600e94f9177e7339180a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://775105aa5cc5315e82d9b7ce6c9ad1c52bf5fb0659ec6f03b3f76339f1ffed78\",\"dweb:/ipfs/QmfWXxyrasDjtXLD1fAvytQe6tQL5cJGsqQUUxhdS3orFu\"]},\"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol\":{\"keccak256\":\"0xf80dacbb4d6dcdaf5e87cd345ce29cbbcd8de072a0afc52893a2afb62eee3e79\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://da38f2e7895e5a2cd7434bb9379c8e302e2d1332469e0981273acbad59613802\",\"dweb:/ipfs/QmYmEgB535PXwEywshC7PdbgxiT2Av1MstdUnttHWgq4SM\"]},\"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":{\"keccak256\":\"0x28456218c7446312a4c0e94a6262751885d52fff0f84053afb68437b048b072f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://588616d0c5273159b65efe2d50f0d9d657903cdc9cee5d4e04c7d8406e18bf7b\",\"dweb:/ipfs/QmenVkBzENXjWnGmeTC1p6J7NwzhitbYhhsSaXE5e4grfY\"]},\"example-2/evm/src/interfaces/ITokenBridge.sol\":{\"keccak256\":\"0x4c464b3e06d31406bd5c777cf8cc985a2f61ce363b6b8f1471c6b5c5da85bf17\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://acb5d5fc309b2cb1db62e1a8b9b3a1cb30b66f6b92b39477beb7a6bc61e0a4ae\",\"dweb:/ipfs/QmakrPQL2o7uVBYenB4wf1rth1JwKRoo7rJdXx7EPKczva\"]},\"example-2/evm/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xecabfd3b5626aaac6da21213b966a2aac8380f4fec739f84ffe08b29006d134e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://912a0accde3c2d18f8d268726ec16b9dfa0f24522e66e7d88c9ed368f3db7d60\",\"dweb:/ipfs/Qmf2V8YhAXRSYVFKuCeCViYAnnWtPi9GTL7w4zRPtMvGTT\"]},\"example-2/evm/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x8547d11f760ad248fe6620e146ed7756654f26b769f9deebdbb84d534144e216\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://5ac7aae1f4c9fbf06056856e854ba7ab14a5c7a487618f0a5a752e25d8d36563\",\"dweb:/ipfs/QmNf2aFrp4tgEGd1AvaSJTMHb72RVgw1TBfvNp5tQ2TZH8\"]},\"example-2/evm/src/libraries/external/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1334,
								"contract": "example-2/evm/src/contracts/lendingSpoke/Spoke.sol:Spoke",
								"label": "_state",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(State)1330_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_struct(Provider)1316_storage": {
								"encoding": "inplace",
								"label": "struct SpokeStorage.Provider",
								"members": [
									{
										"astId": 1311,
										"contract": "example-2/evm/src/contracts/lendingSpoke/Spoke.sol:Spoke",
										"label": "chainId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint16"
									},
									{
										"astId": 1313,
										"contract": "example-2/evm/src/contracts/lendingSpoke/Spoke.sol:Spoke",
										"label": "wormhole",
										"offset": 2,
										"slot": "0",
										"type": "t_address_payable"
									},
									{
										"astId": 1315,
										"contract": "example-2/evm/src/contracts/lendingSpoke/Spoke.sol:Spoke",
										"label": "tokenBridge",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(State)1330_storage": {
								"encoding": "inplace",
								"label": "struct SpokeStorage.State",
								"members": [
									{
										"astId": 1319,
										"contract": "example-2/evm/src/contracts/lendingSpoke/Spoke.sol:Spoke",
										"label": "provider",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Provider)1316_storage"
									},
									{
										"astId": 1321,
										"contract": "example-2/evm/src/contracts/lendingSpoke/Spoke.sol:Spoke",
										"label": "consistencyLevel",
										"offset": 0,
										"slot": "2",
										"type": "t_uint8"
									},
									{
										"astId": 1323,
										"contract": "example-2/evm/src/contracts/lendingSpoke/Spoke.sol:Spoke",
										"label": "hubChainId",
										"offset": 1,
										"slot": "2",
										"type": "t_uint16"
									},
									{
										"astId": 1325,
										"contract": "example-2/evm/src/contracts/lendingSpoke/Spoke.sol:Spoke",
										"label": "hubContractAddress",
										"offset": 3,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 1329,
										"contract": "example-2/evm/src/contracts/lendingSpoke/Spoke.sol:Spoke",
										"label": "______gap",
										"offset": 0,
										"slot": "3",
										"type": "t_array(t_uint256)50_storage"
									}
								],
								"numberOfBytes": "1696"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Spoke constructor - Initializes a new spoke with given parameters "
							}
						},
						"version": 1
					}
				}
			},
			"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol": {
				"SpokeGetters": {
					"abi": [
						{
							"inputs": [],
							"name": "chainId",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenBridge",
							"outputs": [
								{
									"internalType": "contract ITokenBridge",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenBridgeAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":210:1068  contract SpokeGetters is HubSpokeStructs, SpokeState {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":210:1068  contract SpokeGetters is HubSpokeStructs, SpokeState {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9a8a0592\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xc6328a46\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe1884919\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":269:364  function chainId() public view returns (uint16) {... */\n    tag_3:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":309:315  uint16 */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":334:357  _state.provider.chainId */\n      sload\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":269:364  function chainId() public view returns (uint16) {... */\n      mload(0x40)\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":334:357  _state.provider.chainId */\n      0xffff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":158:196   */\n      dup2\n      mstore\n        /* \"#utility.yul\":146:148   */\n      0x20\n        /* \"#utility.yul\":131:149   */\n      add\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":269:364  function chainId() public view returns (uint16) {... */\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":489:621  function tokenBridge() public view returns (ITokenBridge) {... */\n    tag_4:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":585:612  _state.provider.tokenBridge */\n      sload(0x01)\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":489:621  function tokenBridge() public view returns (ITokenBridge) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":585:612  _state.provider.tokenBridge */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":374:425   */\n      dup2\n      mstore\n        /* \"#utility.yul\":362:364   */\n      0x20\n        /* \"#utility.yul\":347:365   */\n      add\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":489:621  function tokenBridge() public view returns (ITokenBridge) {... */\n      tag_8\n        /* \"#utility.yul\":207:431   */\n      jump\n\n    auxdata: 0xa2646970667358221220abe5b5fd785817742c03ff478604194fd7bf8d0d014da9021d48b4cc75fc3abc64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5060a88061001b5f395ff3fe6080604052348015600e575f80fd5b5060043610603a575f3560e01c80639a8a059214603e578063c6328a46146058578063e1884919146058575b5f80fd5b5f5460405161ffff90911681526020015b60405180910390f35b6001546040516001600160a01b039091168152602001604f56fea2646970667358221220abe5b5fd785817742c03ff478604194fd7bf8d0d014da9021d48b4cc75fc3abc64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xA8 DUP1 PUSH2 0x1B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A8A0592 EQ PUSH1 0x3E JUMPI DUP1 PUSH4 0xC6328A46 EQ PUSH1 0x58 JUMPI DUP1 PUSH4 0xE1884919 EQ PUSH1 0x58 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xE5 0xB5 REVERT PUSH25 0x5817742C03FF478604194FD7BF8D0D014DA9021D48B4CC75FC GASPRICE 0xBC PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "210:858:7:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@chainId_1159": {
									"entryPoint": null,
									"id": 1159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenBridgeAddress_1198": {
									"entryPoint": null,
									"id": 1198,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenBridge_1188": {
									"entryPoint": null,
									"id": 1188,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ITokenBridge_$1962__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:641:15",
										"nodeType": "YulBlock",
										"src": "0:641:15",
										"statements": [
											{
												"nativeSrc": "6:3:15",
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "113:89:15",
													"nodeType": "YulBlock",
													"src": "113:89:15",
													"statements": [
														{
															"nativeSrc": "123:26:15",
															"nodeType": "YulAssignment",
															"src": "123:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "135:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "135:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "146:2:15",
																		"nodeType": "YulLiteral",
																		"src": "146:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "131:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:15"
																},
																"nativeSrc": "131:18:15",
																"nodeType": "YulFunctionCall",
																"src": "131:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "123:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "123:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "165:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "165:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "180:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "180:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "188:6:15",
																				"nodeType": "YulLiteral",
																				"src": "188:6:15",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "176:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "176:3:15"
																		},
																		"nativeSrc": "176:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "176:19:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "158:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "158:6:15"
																},
																"nativeSrc": "158:38:15",
																"nodeType": "YulFunctionCall",
																"src": "158:38:15"
															},
															"nativeSrc": "158:38:15",
															"nodeType": "YulExpressionStatement",
															"src": "158:38:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nativeSrc": "14:188:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "82:9:15",
														"nodeType": "YulTypedName",
														"src": "82:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "93:6:15",
														"nodeType": "YulTypedName",
														"src": "93:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "104:4:15",
														"nodeType": "YulTypedName",
														"src": "104:4:15",
														"type": ""
													}
												],
												"src": "14:188:15"
											},
											{
												"body": {
													"nativeSrc": "329:102:15",
													"nodeType": "YulBlock",
													"src": "329:102:15",
													"statements": [
														{
															"nativeSrc": "339:26:15",
															"nodeType": "YulAssignment",
															"src": "339:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "351:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "351:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "362:2:15",
																		"nodeType": "YulLiteral",
																		"src": "362:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "347:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "347:3:15"
																},
																"nativeSrc": "347:18:15",
																"nodeType": "YulFunctionCall",
																"src": "347:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "339:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "339:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "381:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "381:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "396:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "396:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "412:3:15",
																								"nodeType": "YulLiteral",
																								"src": "412:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "417:1:15",
																								"nodeType": "YulLiteral",
																								"src": "417:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "408:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "408:3:15"
																						},
																						"nativeSrc": "408:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "408:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "421:1:15",
																						"nodeType": "YulLiteral",
																						"src": "421:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "404:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "404:3:15"
																				},
																				"nativeSrc": "404:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "404:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "392:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "392:3:15"
																		},
																		"nativeSrc": "392:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "392:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "374:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:15"
																},
																"nativeSrc": "374:51:15",
																"nodeType": "YulFunctionCall",
																"src": "374:51:15"
															},
															"nativeSrc": "374:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "374:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ITokenBridge_$1962__to_t_address__fromStack_reversed",
												"nativeSrc": "207:224:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "298:9:15",
														"nodeType": "YulTypedName",
														"src": "298:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "309:6:15",
														"nodeType": "YulTypedName",
														"src": "309:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "320:4:15",
														"nodeType": "YulTypedName",
														"src": "320:4:15",
														"type": ""
													}
												],
												"src": "207:224:15"
											},
											{
												"body": {
													"nativeSrc": "537:102:15",
													"nodeType": "YulBlock",
													"src": "537:102:15",
													"statements": [
														{
															"nativeSrc": "547:26:15",
															"nodeType": "YulAssignment",
															"src": "547:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "559:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "559:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "570:2:15",
																		"nodeType": "YulLiteral",
																		"src": "570:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "555:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:15"
																},
																"nativeSrc": "555:18:15",
																"nodeType": "YulFunctionCall",
																"src": "555:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "547:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "547:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "589:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "589:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "604:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "604:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "620:3:15",
																								"nodeType": "YulLiteral",
																								"src": "620:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "625:1:15",
																								"nodeType": "YulLiteral",
																								"src": "625:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "616:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "616:3:15"
																						},
																						"nativeSrc": "616:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "616:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "629:1:15",
																						"nodeType": "YulLiteral",
																						"src": "629:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "612:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "612:3:15"
																				},
																				"nativeSrc": "612:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "612:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "600:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "600:3:15"
																		},
																		"nativeSrc": "600:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "600:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "582:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "582:6:15"
																},
																"nativeSrc": "582:51:15",
																"nodeType": "YulFunctionCall",
																"src": "582:51:15"
															},
															"nativeSrc": "582:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "582:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "436:203:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "506:9:15",
														"nodeType": "YulTypedName",
														"src": "506:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "517:6:15",
														"nodeType": "YulTypedName",
														"src": "517:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "528:4:15",
														"nodeType": "YulTypedName",
														"src": "528:4:15",
														"type": ""
													}
												],
												"src": "436:203:15"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_encode_tuple_t_contract$_ITokenBridge_$1962__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5060043610603a575f3560e01c80639a8a059214603e578063c6328a46146058578063e1884919146058575b5f80fd5b5f5460405161ffff90911681526020015b60405180910390f35b6001546040516001600160a01b039091168152602001604f56fea2646970667358221220abe5b5fd785817742c03ff478604194fd7bf8d0d014da9021d48b4cc75fc3abc64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A8A0592 EQ PUSH1 0x3E JUMPI DUP1 PUSH4 0xC6328A46 EQ PUSH1 0x58 JUMPI DUP1 PUSH4 0xE1884919 EQ PUSH1 0x58 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xE5 0xB5 REVERT PUSH25 0x5817742C03FF478604194FD7BF8D0D014DA9021D48B4CC75FC GASPRICE 0xBC PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "210:858:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;269:95;309:6;334:23;269:95;;334:23;;;;158:38:15;;146:2;131:18;269:95:7;;;;;;;;489:132;585:27;;489:132;;-1:-1:-1;;;;;585:27:7;;;374:51:15;;362:2;347:18;489:132:7;207:224:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "33600",
								"executionCost": "85",
								"totalCost": "33685"
							},
							"external": {
								"chainId()": "2254",
								"tokenBridge()": "2300",
								"tokenBridgeAddress()": "2322"
							},
							"internal": {
								"consistencyLevel()": "infinite",
								"hubChainId()": "infinite",
								"hubContractAddress()": "infinite",
								"wormhole()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 210,
									"end": 1068,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 1068,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220abe5b5fd785817742c03ff478604194fd7bf8d0d014da9021d48b4cc75fc3abc64736f6c63430008170033",
									".code": [
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH",
											"source": 7,
											"value": "9A8A0592"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH",
											"source": 7,
											"value": "C6328A46"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH",
											"source": 7,
											"value": "E1884919"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 210,
											"end": 1068,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 269,
											"end": 364,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 309,
											"end": 315,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 357,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 269,
											"end": 364,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 334,
											"end": 357,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 334,
											"end": 357,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 357,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 357,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 158,
											"end": 196,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 158,
											"end": 196,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 146,
											"end": 148,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 131,
											"end": 149,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 269,
											"end": 364,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 269,
											"end": 364,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 269,
											"end": 364,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 269,
											"end": 364,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 269,
											"end": 364,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 269,
											"end": 364,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 269,
											"end": 364,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 489,
											"end": 621,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 489,
											"end": 621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 585,
											"end": 612,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 489,
											"end": 621,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 489,
											"end": 621,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 585,
											"end": 612,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 425,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 374,
											"end": 425,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 362,
											"end": 364,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 347,
											"end": 365,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 489,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 207,
											"end": 431,
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"example-2/evm/src/contracts/HubSpokeMessages.sol",
								"example-2/evm/src/contracts/HubSpokeStructs.sol",
								"example-2/evm/src/contracts/lendingSpoke/Spoke.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol",
								"example-2/evm/src/interfaces/ITokenBridge.sol",
								"example-2/evm/src/interfaces/IWETH.sol",
								"example-2/evm/src/interfaces/IWormhole.sol",
								"example-2/evm/src/libraries/external/BytesLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"chainId()": "9a8a0592",
							"tokenBridge()": "c6328a46",
							"tokenBridgeAddress()": "e1884919"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridge\",\"outputs\":[{\"internalType\":\"contract ITokenBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridgeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":\"SpokeGetters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"example-2/evm/src/contracts/HubSpokeStructs.sol\":{\"keccak256\":\"0x24302b1f2d165f5b53d3bedd11aa1c367d30458bb93e0a34a79a939e753fd7dc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://11d40dd261195ea6fe19f0aa56d2aad5040cabd000041b250d3419985e9d6a9e\",\"dweb:/ipfs/Qmd59wjnwsyt2ave7vYQZQdPxk2AGHAvWVhQAUGAgxPMJ6\"]},\"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":{\"keccak256\":\"0xb997dc0290213b1a75e59c29dd4a2528d203bc6c2f511db26e07c9e7e4795d4b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fe39567ca05eca938a1a173c036a348bc0abde7af35227d5fa38a7e173813166\",\"dweb:/ipfs/QmPU7NnzM1MLPHFH9rpxT9PU8Xn3kpw9beyaxfbi4hcf3V\"]},\"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol\":{\"keccak256\":\"0xf80dacbb4d6dcdaf5e87cd345ce29cbbcd8de072a0afc52893a2afb62eee3e79\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://da38f2e7895e5a2cd7434bb9379c8e302e2d1332469e0981273acbad59613802\",\"dweb:/ipfs/QmYmEgB535PXwEywshC7PdbgxiT2Av1MstdUnttHWgq4SM\"]},\"example-2/evm/src/interfaces/ITokenBridge.sol\":{\"keccak256\":\"0x4c464b3e06d31406bd5c777cf8cc985a2f61ce363b6b8f1471c6b5c5da85bf17\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://acb5d5fc309b2cb1db62e1a8b9b3a1cb30b66f6b92b39477beb7a6bc61e0a4ae\",\"dweb:/ipfs/QmakrPQL2o7uVBYenB4wf1rth1JwKRoo7rJdXx7EPKczva\"]},\"example-2/evm/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xecabfd3b5626aaac6da21213b966a2aac8380f4fec739f84ffe08b29006d134e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://912a0accde3c2d18f8d268726ec16b9dfa0f24522e66e7d88c9ed368f3db7d60\",\"dweb:/ipfs/Qmf2V8YhAXRSYVFKuCeCViYAnnWtPi9GTL7w4zRPtMvGTT\"]},\"example-2/evm/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x8547d11f760ad248fe6620e146ed7756654f26b769f9deebdbb84d534144e216\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://5ac7aae1f4c9fbf06056856e854ba7ab14a5c7a487618f0a5a752e25d8d36563\",\"dweb:/ipfs/QmNf2aFrp4tgEGd1AvaSJTMHb72RVgw1TBfvNp5tQ2TZH8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1334,
								"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol:SpokeGetters",
								"label": "_state",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(State)1330_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_struct(Provider)1316_storage": {
								"encoding": "inplace",
								"label": "struct SpokeStorage.Provider",
								"members": [
									{
										"astId": 1311,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol:SpokeGetters",
										"label": "chainId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint16"
									},
									{
										"astId": 1313,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol:SpokeGetters",
										"label": "wormhole",
										"offset": 2,
										"slot": "0",
										"type": "t_address_payable"
									},
									{
										"astId": 1315,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol:SpokeGetters",
										"label": "tokenBridge",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(State)1330_storage": {
								"encoding": "inplace",
								"label": "struct SpokeStorage.State",
								"members": [
									{
										"astId": 1319,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol:SpokeGetters",
										"label": "provider",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Provider)1316_storage"
									},
									{
										"astId": 1321,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol:SpokeGetters",
										"label": "consistencyLevel",
										"offset": 0,
										"slot": "2",
										"type": "t_uint8"
									},
									{
										"astId": 1323,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol:SpokeGetters",
										"label": "hubChainId",
										"offset": 1,
										"slot": "2",
										"type": "t_uint16"
									},
									{
										"astId": 1325,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol:SpokeGetters",
										"label": "hubContractAddress",
										"offset": 3,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 1329,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol:SpokeGetters",
										"label": "______gap",
										"offset": 0,
										"slot": "3",
										"type": "t_array(t_uint256)50_storage"
									}
								],
								"numberOfBytes": "1696"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol": {
				"SpokeSetters": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol\":125:783  contract SpokeSetters is HubSpokeStructs, SpokeState {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol\":125:783  contract SpokeSetters is HubSpokeStructs, SpokeState {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204508b9c099aa34a54fb6022f7f8735a4592d4383c893f6bb413d609892dd8b6364736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea26469706673582212204508b9c099aa34a54fb6022f7f8735a4592d4383c893f6bb413d609892dd8b6364736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT ADDMOD 0xB9 0xC0 SWAP10 0xAA CALLVALUE 0xA5 0x4F 0xB6 MUL 0x2F PUSH32 0x8735A4592D4383C893F6BB413D609892DD8B6364736F6C634300081700330000 ",
							"sourceMap": "125:658:8:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea26469706673582212204508b9c099aa34a54fb6022f7f8735a4592d4383c893f6bb413d609892dd8b6364736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT ADDMOD 0xB9 0xC0 SWAP10 0xAA CALLVALUE 0xA5 0x4F 0xB6 MUL 0x2F PUSH32 0x8735A4592D4383C893F6BB413D609892DD8B6364736F6C634300081700330000 ",
							"sourceMap": "125:658:8:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							},
							"internal": {
								"setChainId(uint16)": "infinite",
								"setHubChainId(uint16)": "infinite",
								"setHubContractAddress(address)": "infinite",
								"setTokenBridge(address)": "infinite",
								"setWormhole(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 125,
									"end": 783,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 125,
									"end": 783,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 125,
									"end": 783,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 125,
									"end": 783,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 125,
									"end": 783,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 125,
									"end": 783,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 125,
									"end": 783,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 125,
									"end": 783,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 125,
									"end": 783,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 783,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 125,
									"end": 783,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 125,
									"end": 783,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 125,
									"end": 783,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 125,
									"end": 783,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 125,
									"end": 783,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 125,
									"end": 783,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 125,
									"end": 783,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 125,
									"end": 783,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 783,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 125,
									"end": 783,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 783,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204508b9c099aa34a54fb6022f7f8735a4592d4383c893f6bb413d609892dd8b6364736f6c63430008170033",
									".code": [
										{
											"begin": 125,
											"end": 783,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 125,
											"end": 783,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 125,
											"end": 783,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 125,
											"end": 783,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 783,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 125,
											"end": 783,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"example-2/evm/src/contracts/HubSpokeMessages.sol",
								"example-2/evm/src/contracts/HubSpokeStructs.sol",
								"example-2/evm/src/contracts/lendingSpoke/Spoke.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol",
								"example-2/evm/src/interfaces/ITokenBridge.sol",
								"example-2/evm/src/interfaces/IWETH.sol",
								"example-2/evm/src/interfaces/IWormhole.sol",
								"example-2/evm/src/libraries/external/BytesLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol\":\"SpokeSetters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"example-2/evm/src/contracts/HubSpokeStructs.sol\":{\"keccak256\":\"0x24302b1f2d165f5b53d3bedd11aa1c367d30458bb93e0a34a79a939e753fd7dc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://11d40dd261195ea6fe19f0aa56d2aad5040cabd000041b250d3419985e9d6a9e\",\"dweb:/ipfs/Qmd59wjnwsyt2ave7vYQZQdPxk2AGHAvWVhQAUGAgxPMJ6\"]},\"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol\":{\"keccak256\":\"0x9ac8f289c14b91bfa37e3e4e52de2b7b045ac8b18881600e94f9177e7339180a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://775105aa5cc5315e82d9b7ce6c9ad1c52bf5fb0659ec6f03b3f76339f1ffed78\",\"dweb:/ipfs/QmfWXxyrasDjtXLD1fAvytQe6tQL5cJGsqQUUxhdS3orFu\"]},\"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol\":{\"keccak256\":\"0xf80dacbb4d6dcdaf5e87cd345ce29cbbcd8de072a0afc52893a2afb62eee3e79\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://da38f2e7895e5a2cd7434bb9379c8e302e2d1332469e0981273acbad59613802\",\"dweb:/ipfs/QmYmEgB535PXwEywshC7PdbgxiT2Av1MstdUnttHWgq4SM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1334,
								"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol:SpokeSetters",
								"label": "_state",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(State)1330_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_struct(Provider)1316_storage": {
								"encoding": "inplace",
								"label": "struct SpokeStorage.Provider",
								"members": [
									{
										"astId": 1311,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol:SpokeSetters",
										"label": "chainId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint16"
									},
									{
										"astId": 1313,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol:SpokeSetters",
										"label": "wormhole",
										"offset": 2,
										"slot": "0",
										"type": "t_address_payable"
									},
									{
										"astId": 1315,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol:SpokeSetters",
										"label": "tokenBridge",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(State)1330_storage": {
								"encoding": "inplace",
								"label": "struct SpokeStorage.State",
								"members": [
									{
										"astId": 1319,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol:SpokeSetters",
										"label": "provider",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Provider)1316_storage"
									},
									{
										"astId": 1321,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol:SpokeSetters",
										"label": "consistencyLevel",
										"offset": 0,
										"slot": "2",
										"type": "t_uint8"
									},
									{
										"astId": 1323,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol:SpokeSetters",
										"label": "hubChainId",
										"offset": 1,
										"slot": "2",
										"type": "t_uint16"
									},
									{
										"astId": 1325,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol:SpokeSetters",
										"label": "hubContractAddress",
										"offset": 3,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 1329,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol:SpokeSetters",
										"label": "______gap",
										"offset": 0,
										"slot": "3",
										"type": "t_array(t_uint256)50_storage"
									}
								],
								"numberOfBytes": "1696"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol": {
				"SpokeState": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol\":523:577  contract SpokeState {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol\":523:577  contract SpokeState {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209858eb5bc4a2c335a73cab425c0a7bfc46949f16d2b457afe5499b5fc89fe09464736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea26469706673582212209858eb5bc4a2c335a73cab425c0a7bfc46949f16d2b457afe5499b5fc89fe09464736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 PC 0xEB JUMPDEST 0xC4 LOG2 0xC3 CALLDATALOAD 0xA7 EXTCODECOPY 0xAB TIMESTAMP 0x5C EXP PUSH28 0xFC46949F16D2B457AFE5499B5FC89FE09464736F6C63430008170033 ",
							"sourceMap": "523:54:9:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea26469706673582212209858eb5bc4a2c335a73cab425c0a7bfc46949f16d2b457afe5499b5fc89fe09464736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 PC 0xEB JUMPDEST 0xC4 LOG2 0xC3 CALLDATALOAD 0xA7 EXTCODECOPY 0xAB TIMESTAMP 0x5C EXP PUSH28 0xFC46949F16D2B457AFE5499B5FC89FE09464736F6C63430008170033 ",
							"sourceMap": "523:54:9:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 523,
									"end": 577,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 523,
									"end": 577,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 523,
									"end": 577,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 523,
									"end": 577,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 523,
									"end": 577,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 523,
									"end": 577,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 523,
									"end": 577,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 523,
									"end": 577,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 523,
									"end": 577,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 577,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 523,
									"end": 577,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 523,
									"end": 577,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 523,
									"end": 577,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 523,
									"end": 577,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 523,
									"end": 577,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 523,
									"end": 577,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 523,
									"end": 577,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 523,
									"end": 577,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 577,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 523,
									"end": 577,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 577,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209858eb5bc4a2c335a73cab425c0a7bfc46949f16d2b457afe5499b5fc89fe09464736f6c63430008170033",
									".code": [
										{
											"begin": 523,
											"end": 577,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 523,
											"end": 577,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 577,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 523,
											"end": 577,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 577,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 523,
											"end": 577,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"example-2/evm/src/contracts/HubSpokeMessages.sol",
								"example-2/evm/src/contracts/HubSpokeStructs.sol",
								"example-2/evm/src/contracts/lendingSpoke/Spoke.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol",
								"example-2/evm/src/interfaces/ITokenBridge.sol",
								"example-2/evm/src/interfaces/IWETH.sol",
								"example-2/evm/src/interfaces/IWormhole.sol",
								"example-2/evm/src/libraries/external/BytesLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol\":\"SpokeState\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"example-2/evm/src/contracts/HubSpokeStructs.sol\":{\"keccak256\":\"0x24302b1f2d165f5b53d3bedd11aa1c367d30458bb93e0a34a79a939e753fd7dc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://11d40dd261195ea6fe19f0aa56d2aad5040cabd000041b250d3419985e9d6a9e\",\"dweb:/ipfs/Qmd59wjnwsyt2ave7vYQZQdPxk2AGHAvWVhQAUGAgxPMJ6\"]},\"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol\":{\"keccak256\":\"0xf80dacbb4d6dcdaf5e87cd345ce29cbbcd8de072a0afc52893a2afb62eee3e79\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://da38f2e7895e5a2cd7434bb9379c8e302e2d1332469e0981273acbad59613802\",\"dweb:/ipfs/QmYmEgB535PXwEywshC7PdbgxiT2Av1MstdUnttHWgq4SM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1334,
								"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol:SpokeState",
								"label": "_state",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(State)1330_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_struct(Provider)1316_storage": {
								"encoding": "inplace",
								"label": "struct SpokeStorage.Provider",
								"members": [
									{
										"astId": 1311,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol:SpokeState",
										"label": "chainId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint16"
									},
									{
										"astId": 1313,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol:SpokeState",
										"label": "wormhole",
										"offset": 2,
										"slot": "0",
										"type": "t_address_payable"
									},
									{
										"astId": 1315,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol:SpokeState",
										"label": "tokenBridge",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(State)1330_storage": {
								"encoding": "inplace",
								"label": "struct SpokeStorage.State",
								"members": [
									{
										"astId": 1319,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol:SpokeState",
										"label": "provider",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Provider)1316_storage"
									},
									{
										"astId": 1321,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol:SpokeState",
										"label": "consistencyLevel",
										"offset": 0,
										"slot": "2",
										"type": "t_uint8"
									},
									{
										"astId": 1323,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol:SpokeState",
										"label": "hubChainId",
										"offset": 1,
										"slot": "2",
										"type": "t_uint16"
									},
									{
										"astId": 1325,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol:SpokeState",
										"label": "hubContractAddress",
										"offset": 3,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 1329,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol:SpokeState",
										"label": "______gap",
										"offset": 0,
										"slot": "3",
										"type": "t_array(t_uint256)50_storage"
									}
								],
								"numberOfBytes": "1696"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SpokeStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol\":98:521  contract SpokeStorage is HubSpokeStructs {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol\":98:521  contract SpokeStorage is HubSpokeStructs {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203d91fb5854f6198ca069f204e69ef907247cc9d1dd59fc2204b29aa0535d68eb64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea26469706673582212203d91fb5854f6198ca069f204e69ef907247cc9d1dd59fc2204b29aa0535d68eb64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE SWAP2 0xFB PC SLOAD 0xF6 NOT DUP13 LOG0 PUSH10 0xF204E69EF907247CC9D1 0xDD MSIZE 0xFC 0x22 DIV 0xB2 SWAP11 LOG0 MSTORE8 0x5D PUSH9 0xEB64736F6C63430008 OR STOP CALLER ",
							"sourceMap": "98:423:9:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea26469706673582212203d91fb5854f6198ca069f204e69ef907247cc9d1dd59fc2204b29aa0535d68eb64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE SWAP2 0xFB PC SLOAD 0xF6 NOT DUP13 LOG0 PUSH10 0xF204E69EF907247CC9D1 0xDD MSIZE 0xFC 0x22 DIV 0xB2 SWAP11 LOG0 MSTORE8 0x5D PUSH9 0xEB64736F6C63430008 OR STOP CALLER ",
							"sourceMap": "98:423:9:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 98,
									"end": 521,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 98,
									"end": 521,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 98,
									"end": 521,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 98,
									"end": 521,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 98,
									"end": 521,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 98,
									"end": 521,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 98,
									"end": 521,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 98,
									"end": 521,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 98,
									"end": 521,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 521,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 98,
									"end": 521,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 98,
									"end": 521,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 98,
									"end": 521,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 98,
									"end": 521,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 98,
									"end": 521,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 521,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 98,
									"end": 521,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 521,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 521,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 98,
									"end": 521,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 521,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203d91fb5854f6198ca069f204e69ef907247cc9d1dd59fc2204b29aa0535d68eb64736f6c63430008170033",
									".code": [
										{
											"begin": 98,
											"end": 521,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 98,
											"end": 521,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 98,
											"end": 521,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 98,
											"end": 521,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 521,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 98,
											"end": 521,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"example-2/evm/src/contracts/HubSpokeMessages.sol",
								"example-2/evm/src/contracts/HubSpokeStructs.sol",
								"example-2/evm/src/contracts/lendingSpoke/Spoke.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol",
								"example-2/evm/src/interfaces/ITokenBridge.sol",
								"example-2/evm/src/interfaces/IWETH.sol",
								"example-2/evm/src/interfaces/IWormhole.sol",
								"example-2/evm/src/libraries/external/BytesLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol\":\"SpokeStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"example-2/evm/src/contracts/HubSpokeStructs.sol\":{\"keccak256\":\"0x24302b1f2d165f5b53d3bedd11aa1c367d30458bb93e0a34a79a939e753fd7dc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://11d40dd261195ea6fe19f0aa56d2aad5040cabd000041b250d3419985e9d6a9e\",\"dweb:/ipfs/Qmd59wjnwsyt2ave7vYQZQdPxk2AGHAvWVhQAUGAgxPMJ6\"]},\"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol\":{\"keccak256\":\"0xf80dacbb4d6dcdaf5e87cd345ce29cbbcd8de072a0afc52893a2afb62eee3e79\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://da38f2e7895e5a2cd7434bb9379c8e302e2d1332469e0981273acbad59613802\",\"dweb:/ipfs/QmYmEgB535PXwEywshC7PdbgxiT2Av1MstdUnttHWgq4SM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol": {
				"SpokeUtilities": {
					"abi": [
						{
							"inputs": [],
							"name": "chainId",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenBridge",
							"outputs": [
								{
									"internalType": "contract ITokenBridge",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenBridgeAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":338:2358  contract SpokeUtilities is HubSpokeStructs, SpokeState, SpokeGetters, SpokeSetters {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":338:2358  contract SpokeUtilities is HubSpokeStructs, SpokeState, SpokeGetters, SpokeSetters {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9a8a0592\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xc6328a46\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe1884919\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":269:364  function chainId() public view returns (uint16) {... */\n    tag_3:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":309:315  uint16 */\n      0x00\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":334:357  _state.provider.chainId */\n      sload\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":269:364  function chainId() public view returns (uint16) {... */\n      mload(0x40)\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":334:357  _state.provider.chainId */\n      0xffff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":158:196   */\n      dup2\n      mstore\n        /* \"#utility.yul\":146:148   */\n      0x20\n        /* \"#utility.yul\":131:149   */\n      add\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":269:364  function chainId() public view returns (uint16) {... */\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":489:621  function tokenBridge() public view returns (ITokenBridge) {... */\n    tag_4:\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":585:612  _state.provider.tokenBridge */\n      sload(0x01)\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":489:621  function tokenBridge() public view returns (ITokenBridge) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":585:612  _state.provider.tokenBridge */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":374:425   */\n      dup2\n      mstore\n        /* \"#utility.yul\":362:364   */\n      0x20\n        /* \"#utility.yul\":347:365   */\n      add\n        /* \"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":489:621  function tokenBridge() public view returns (ITokenBridge) {... */\n      tag_8\n        /* \"#utility.yul\":207:431   */\n      jump\n\n    auxdata: 0xa26469706673582212209ad68ba389d7bd22965e945cb89e030c6a4a8356acf0eecee60909a22d1027cd64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5060a88061001b5f395ff3fe6080604052348015600e575f80fd5b5060043610603a575f3560e01c80639a8a059214603e578063c6328a46146058578063e1884919146058575b5f80fd5b5f5460405161ffff90911681526020015b60405180910390f35b6001546040516001600160a01b039091168152602001604f56fea26469706673582212209ad68ba389d7bd22965e945cb89e030c6a4a8356acf0eecee60909a22d1027cd64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xA8 DUP1 PUSH2 0x1B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A8A0592 EQ PUSH1 0x3E JUMPI DUP1 PUSH4 0xC6328A46 EQ PUSH1 0x58 JUMPI DUP1 PUSH4 0xE1884919 EQ PUSH1 0x58 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xD6 DUP12 LOG3 DUP10 0xD7 0xBD 0x22 SWAP7 0x5E SWAP5 0x5C 0xB8 SWAP15 SUB 0xC PUSH11 0x4A8356ACF0EECEE60909A2 0x2D LT 0x27 0xCD PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "338:2020:10:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@chainId_1159": {
									"entryPoint": null,
									"id": 1159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenBridgeAddress_1198": {
									"entryPoint": null,
									"id": 1198,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenBridge_1188": {
									"entryPoint": null,
									"id": 1188,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ITokenBridge_$1962__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:641:15",
										"nodeType": "YulBlock",
										"src": "0:641:15",
										"statements": [
											{
												"nativeSrc": "6:3:15",
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "113:89:15",
													"nodeType": "YulBlock",
													"src": "113:89:15",
													"statements": [
														{
															"nativeSrc": "123:26:15",
															"nodeType": "YulAssignment",
															"src": "123:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "135:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "135:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "146:2:15",
																		"nodeType": "YulLiteral",
																		"src": "146:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "131:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:15"
																},
																"nativeSrc": "131:18:15",
																"nodeType": "YulFunctionCall",
																"src": "131:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "123:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "123:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "165:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "165:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "180:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "180:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "188:6:15",
																				"nodeType": "YulLiteral",
																				"src": "188:6:15",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "176:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "176:3:15"
																		},
																		"nativeSrc": "176:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "176:19:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "158:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "158:6:15"
																},
																"nativeSrc": "158:38:15",
																"nodeType": "YulFunctionCall",
																"src": "158:38:15"
															},
															"nativeSrc": "158:38:15",
															"nodeType": "YulExpressionStatement",
															"src": "158:38:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nativeSrc": "14:188:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "82:9:15",
														"nodeType": "YulTypedName",
														"src": "82:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "93:6:15",
														"nodeType": "YulTypedName",
														"src": "93:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "104:4:15",
														"nodeType": "YulTypedName",
														"src": "104:4:15",
														"type": ""
													}
												],
												"src": "14:188:15"
											},
											{
												"body": {
													"nativeSrc": "329:102:15",
													"nodeType": "YulBlock",
													"src": "329:102:15",
													"statements": [
														{
															"nativeSrc": "339:26:15",
															"nodeType": "YulAssignment",
															"src": "339:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "351:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "351:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "362:2:15",
																		"nodeType": "YulLiteral",
																		"src": "362:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "347:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "347:3:15"
																},
																"nativeSrc": "347:18:15",
																"nodeType": "YulFunctionCall",
																"src": "347:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "339:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "339:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "381:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "381:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "396:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "396:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "412:3:15",
																								"nodeType": "YulLiteral",
																								"src": "412:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "417:1:15",
																								"nodeType": "YulLiteral",
																								"src": "417:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "408:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "408:3:15"
																						},
																						"nativeSrc": "408:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "408:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "421:1:15",
																						"nodeType": "YulLiteral",
																						"src": "421:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "404:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "404:3:15"
																				},
																				"nativeSrc": "404:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "404:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "392:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "392:3:15"
																		},
																		"nativeSrc": "392:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "392:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "374:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:15"
																},
																"nativeSrc": "374:51:15",
																"nodeType": "YulFunctionCall",
																"src": "374:51:15"
															},
															"nativeSrc": "374:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "374:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ITokenBridge_$1962__to_t_address__fromStack_reversed",
												"nativeSrc": "207:224:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "298:9:15",
														"nodeType": "YulTypedName",
														"src": "298:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "309:6:15",
														"nodeType": "YulTypedName",
														"src": "309:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "320:4:15",
														"nodeType": "YulTypedName",
														"src": "320:4:15",
														"type": ""
													}
												],
												"src": "207:224:15"
											},
											{
												"body": {
													"nativeSrc": "537:102:15",
													"nodeType": "YulBlock",
													"src": "537:102:15",
													"statements": [
														{
															"nativeSrc": "547:26:15",
															"nodeType": "YulAssignment",
															"src": "547:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "559:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "559:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "570:2:15",
																		"nodeType": "YulLiteral",
																		"src": "570:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "555:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:15"
																},
																"nativeSrc": "555:18:15",
																"nodeType": "YulFunctionCall",
																"src": "555:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "547:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "547:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "589:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "589:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "604:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "604:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "620:3:15",
																								"nodeType": "YulLiteral",
																								"src": "620:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "625:1:15",
																								"nodeType": "YulLiteral",
																								"src": "625:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "616:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "616:3:15"
																						},
																						"nativeSrc": "616:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "616:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "629:1:15",
																						"nodeType": "YulLiteral",
																						"src": "629:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "612:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "612:3:15"
																				},
																				"nativeSrc": "612:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "612:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "600:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "600:3:15"
																		},
																		"nativeSrc": "600:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "600:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "582:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "582:6:15"
																},
																"nativeSrc": "582:51:15",
																"nodeType": "YulFunctionCall",
																"src": "582:51:15"
															},
															"nativeSrc": "582:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "582:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "436:203:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "506:9:15",
														"nodeType": "YulTypedName",
														"src": "506:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "517:6:15",
														"nodeType": "YulTypedName",
														"src": "517:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "528:4:15",
														"nodeType": "YulTypedName",
														"src": "528:4:15",
														"type": ""
													}
												],
												"src": "436:203:15"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_encode_tuple_t_contract$_ITokenBridge_$1962__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5060043610603a575f3560e01c80639a8a059214603e578063c6328a46146058578063e1884919146058575b5f80fd5b5f5460405161ffff90911681526020015b60405180910390f35b6001546040516001600160a01b039091168152602001604f56fea26469706673582212209ad68ba389d7bd22965e945cb89e030c6a4a8356acf0eecee60909a22d1027cd64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A8A0592 EQ PUSH1 0x3E JUMPI DUP1 PUSH4 0xC6328A46 EQ PUSH1 0x58 JUMPI DUP1 PUSH4 0xE1884919 EQ PUSH1 0x58 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xD6 DUP12 LOG3 DUP10 0xD7 0xBD 0x22 SWAP7 0x5E SWAP5 0x5C 0xB8 SWAP15 SUB 0xC PUSH11 0x4A8356ACF0EECEE60909A2 0x2D LT 0x27 0xCD PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "338:2020:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;269:95:7;309:6;334:23;269:95;;334:23;;;;158:38:15;;146:2;131:18;269:95:7;;;;;;;;489:132;585:27;;489:132;;-1:-1:-1;;;;;585:27:7;;;374:51:15;;362:2;347:18;489:132:7;207:224:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "33600",
								"executionCost": "85",
								"totalCost": "33685"
							},
							"external": {
								"chainId()": "2254",
								"tokenBridge()": "2300",
								"tokenBridgeAddress()": "2322"
							},
							"internal": {
								"deNormalizeAmount(uint256,uint8)": "infinite",
								"normalizeAmount(uint256,uint8)": "infinite",
								"requireAssetAmountValidForTokenBridge(address,uint256)": "infinite",
								"sendTokenBridgeMessage(address,uint256,bytes memory)": "infinite",
								"sendTokenBridgeMessageNative(uint256,bytes memory)": "infinite",
								"sendWormholeMessage(bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 338,
									"end": 2358,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 338,
									"end": 2358,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209ad68ba389d7bd22965e945cb89e030c6a4a8356acf0eecee60909a22d1027cd64736f6c63430008170033",
									".code": [
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH",
											"source": 10,
											"value": "9A8A0592"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH",
											"source": 10,
											"value": "C6328A46"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH",
											"source": 10,
											"value": "E1884919"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 338,
											"end": 2358,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 269,
											"end": 364,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 309,
											"end": 315,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 357,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 269,
											"end": 364,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 334,
											"end": 357,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 334,
											"end": 357,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 357,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 357,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 158,
											"end": 196,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 158,
											"end": 196,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 146,
											"end": 148,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 131,
											"end": 149,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 269,
											"end": 364,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 269,
											"end": 364,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 269,
											"end": 364,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 269,
											"end": 364,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 269,
											"end": 364,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 269,
											"end": 364,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 269,
											"end": 364,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 269,
											"end": 364,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 489,
											"end": 621,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 489,
											"end": 621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 585,
											"end": 612,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 489,
											"end": 621,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 489,
											"end": 621,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 585,
											"end": 612,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 585,
											"end": 612,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 425,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 374,
											"end": 425,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 362,
											"end": 364,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 347,
											"end": 365,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 489,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 207,
											"end": 431,
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"example-2/evm/src/contracts/HubSpokeMessages.sol",
								"example-2/evm/src/contracts/HubSpokeStructs.sol",
								"example-2/evm/src/contracts/lendingSpoke/Spoke.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol",
								"example-2/evm/src/interfaces/ITokenBridge.sol",
								"example-2/evm/src/interfaces/IWETH.sol",
								"example-2/evm/src/interfaces/IWormhole.sol",
								"example-2/evm/src/libraries/external/BytesLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"chainId()": "9a8a0592",
							"tokenBridge()": "c6328a46",
							"tokenBridgeAddress()": "e1884919"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridge\",\"outputs\":[{\"internalType\":\"contract ITokenBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridgeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":\"SpokeUtilities\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"example-2/evm/src/contracts/HubSpokeStructs.sol\":{\"keccak256\":\"0x24302b1f2d165f5b53d3bedd11aa1c367d30458bb93e0a34a79a939e753fd7dc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://11d40dd261195ea6fe19f0aa56d2aad5040cabd000041b250d3419985e9d6a9e\",\"dweb:/ipfs/Qmd59wjnwsyt2ave7vYQZQdPxk2AGHAvWVhQAUGAgxPMJ6\"]},\"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol\":{\"keccak256\":\"0xb997dc0290213b1a75e59c29dd4a2528d203bc6c2f511db26e07c9e7e4795d4b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fe39567ca05eca938a1a173c036a348bc0abde7af35227d5fa38a7e173813166\",\"dweb:/ipfs/QmPU7NnzM1MLPHFH9rpxT9PU8Xn3kpw9beyaxfbi4hcf3V\"]},\"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol\":{\"keccak256\":\"0x9ac8f289c14b91bfa37e3e4e52de2b7b045ac8b18881600e94f9177e7339180a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://775105aa5cc5315e82d9b7ce6c9ad1c52bf5fb0659ec6f03b3f76339f1ffed78\",\"dweb:/ipfs/QmfWXxyrasDjtXLD1fAvytQe6tQL5cJGsqQUUxhdS3orFu\"]},\"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol\":{\"keccak256\":\"0xf80dacbb4d6dcdaf5e87cd345ce29cbbcd8de072a0afc52893a2afb62eee3e79\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://da38f2e7895e5a2cd7434bb9379c8e302e2d1332469e0981273acbad59613802\",\"dweb:/ipfs/QmYmEgB535PXwEywshC7PdbgxiT2Av1MstdUnttHWgq4SM\"]},\"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol\":{\"keccak256\":\"0x28456218c7446312a4c0e94a6262751885d52fff0f84053afb68437b048b072f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://588616d0c5273159b65efe2d50f0d9d657903cdc9cee5d4e04c7d8406e18bf7b\",\"dweb:/ipfs/QmenVkBzENXjWnGmeTC1p6J7NwzhitbYhhsSaXE5e4grfY\"]},\"example-2/evm/src/interfaces/ITokenBridge.sol\":{\"keccak256\":\"0x4c464b3e06d31406bd5c777cf8cc985a2f61ce363b6b8f1471c6b5c5da85bf17\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://acb5d5fc309b2cb1db62e1a8b9b3a1cb30b66f6b92b39477beb7a6bc61e0a4ae\",\"dweb:/ipfs/QmakrPQL2o7uVBYenB4wf1rth1JwKRoo7rJdXx7EPKczva\"]},\"example-2/evm/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xecabfd3b5626aaac6da21213b966a2aac8380f4fec739f84ffe08b29006d134e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://912a0accde3c2d18f8d268726ec16b9dfa0f24522e66e7d88c9ed368f3db7d60\",\"dweb:/ipfs/Qmf2V8YhAXRSYVFKuCeCViYAnnWtPi9GTL7w4zRPtMvGTT\"]},\"example-2/evm/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x8547d11f760ad248fe6620e146ed7756654f26b769f9deebdbb84d534144e216\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://5ac7aae1f4c9fbf06056856e854ba7ab14a5c7a487618f0a5a752e25d8d36563\",\"dweb:/ipfs/QmNf2aFrp4tgEGd1AvaSJTMHb72RVgw1TBfvNp5tQ2TZH8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1334,
								"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol:SpokeUtilities",
								"label": "_state",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(State)1330_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_struct(Provider)1316_storage": {
								"encoding": "inplace",
								"label": "struct SpokeStorage.Provider",
								"members": [
									{
										"astId": 1311,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol:SpokeUtilities",
										"label": "chainId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint16"
									},
									{
										"astId": 1313,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol:SpokeUtilities",
										"label": "wormhole",
										"offset": 2,
										"slot": "0",
										"type": "t_address_payable"
									},
									{
										"astId": 1315,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol:SpokeUtilities",
										"label": "tokenBridge",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(State)1330_storage": {
								"encoding": "inplace",
								"label": "struct SpokeStorage.State",
								"members": [
									{
										"astId": 1319,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol:SpokeUtilities",
										"label": "provider",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Provider)1316_storage"
									},
									{
										"astId": 1321,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol:SpokeUtilities",
										"label": "consistencyLevel",
										"offset": 0,
										"slot": "2",
										"type": "t_uint8"
									},
									{
										"astId": 1323,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol:SpokeUtilities",
										"label": "hubChainId",
										"offset": 1,
										"slot": "2",
										"type": "t_uint16"
									},
									{
										"astId": 1325,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol:SpokeUtilities",
										"label": "hubContractAddress",
										"offset": 3,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 1329,
										"contract": "example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol:SpokeUtilities",
										"label": "______gap",
										"offset": 0,
										"slot": "3",
										"type": "t_array(t_uint256)50_storage"
									}
								],
								"numberOfBytes": "1696"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"example-2/evm/src/interfaces/ITokenBridge.sol": {
				"ITokenBridge": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldContract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newContract",
									"type": "address"
								}
							],
							"name": "ContractUpgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "contract IWETH",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "_parseTransferCommon",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "to",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "toChain",
											"type": "uint16"
										},
										{
											"internalType": "uint256",
											"name": "fee",
											"type": "uint256"
										}
									],
									"internalType": "struct ITokenBridge.Transfer",
									"name": "transfer",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								}
							],
							"name": "attestToken",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "chainId_",
									"type": "uint16"
								}
							],
							"name": "bridgeContracts",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "chainId",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVm",
									"type": "bytes"
								}
							],
							"name": "completeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVm",
									"type": "bytes"
								}
							],
							"name": "completeTransferAndUnwrapETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVm",
									"type": "bytes"
								}
							],
							"name": "completeTransferAndUnwrapETHWithPayload",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVm",
									"type": "bytes"
								}
							],
							"name": "completeTransferWithPayload",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVm",
									"type": "bytes"
								}
							],
							"name": "createWrapped",
							"outputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "symbol",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "name",
											"type": "bytes32"
										}
									],
									"internalType": "struct ITokenBridge.AssetMeta",
									"name": "meta",
									"type": "tuple"
								}
							],
							"name": "encodeAssetMeta",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "to",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "toChain",
											"type": "uint16"
										},
										{
											"internalType": "uint256",
											"name": "fee",
											"type": "uint256"
										}
									],
									"internalType": "struct ITokenBridge.Transfer",
									"name": "transfer",
									"type": "tuple"
								}
							],
							"name": "encodeTransfer",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "to",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "toChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "fromAddress",
											"type": "bytes32"
										},
										{
											"internalType": "bytes",
											"name": "payload",
											"type": "bytes"
										}
									],
									"internalType": "struct ITokenBridge.TransferWithPayload",
									"name": "transfer",
									"type": "tuple"
								}
							],
							"name": "encodeTransferWithPayload",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "evmChainId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finality",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								}
							],
							"name": "governanceActionIsConsumed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governanceChainId",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governanceContract",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isFork",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "impl",
									"type": "address"
								}
							],
							"name": "isInitialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								}
							],
							"name": "isTransferCompleted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "isWrappedAsset",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "outstandingBridged",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "parseAssetMeta",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "symbol",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "name",
											"type": "bytes32"
										}
									],
									"internalType": "struct ITokenBridge.AssetMeta",
									"name": "meta",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "parsePayloadID",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "payloadID",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedRecoverChainId",
									"type": "bytes"
								}
							],
							"name": "parseRecoverChainId",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "evmChainId",
											"type": "uint256"
										},
										{
											"internalType": "uint16",
											"name": "newChainId",
											"type": "uint16"
										}
									],
									"internalType": "struct ITokenBridge.RecoverChainId",
									"name": "rci",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "parseRegisterChain",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "uint16",
											"name": "emitterChainID",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										}
									],
									"internalType": "struct ITokenBridge.RegisterChain",
									"name": "chain",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "parseTransfer",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "to",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "toChain",
											"type": "uint16"
										},
										{
											"internalType": "uint256",
											"name": "fee",
											"type": "uint256"
										}
									],
									"internalType": "struct ITokenBridge.Transfer",
									"name": "transfer",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "parseTransferWithPayload",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "to",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "toChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "fromAddress",
											"type": "bytes32"
										},
										{
											"internalType": "bytes",
											"name": "payload",
											"type": "bytes"
										}
									],
									"internalType": "struct ITokenBridge.TransferWithPayload",
									"name": "transfer",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "parseUpgrade",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "newContract",
											"type": "bytes32"
										}
									],
									"internalType": "struct ITokenBridge.UpgradeContract",
									"name": "chain",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVM",
									"type": "bytes"
								}
							],
							"name": "registerChain",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVM",
									"type": "bytes"
								}
							],
							"name": "submitRecoverChainId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "recipientChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "arbiterFee",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								}
							],
							"name": "transferTokens",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "recipientChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								}
							],
							"name": "transferTokensWithPayload",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVm",
									"type": "bytes"
								}
							],
							"name": "updateWrapped",
							"outputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVM",
									"type": "bytes"
								}
							],
							"name": "upgrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "recipientChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "arbiterFee",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								}
							],
							"name": "wrapAndTransferETH",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "recipientChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								}
							],
							"name": "wrapAndTransferETHWithPayload",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "tokenChainId",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "tokenAddress",
									"type": "bytes32"
								}
							],
							"name": "wrappedAsset",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"_parseTransferCommon(bytes)": "e89bc401",
							"attestToken(address,uint32)": "c48fa115",
							"bridgeContracts(uint16)": "ad66a5f1",
							"chainId()": "9a8a0592",
							"completeTransfer(bytes)": "c6878519",
							"completeTransferAndUnwrapETH(bytes)": "ff200cde",
							"completeTransferAndUnwrapETHWithPayload(bytes)": "1c8475e4",
							"completeTransferWithPayload(bytes)": "c3f511c1",
							"createWrapped(bytes)": "e8059810",
							"encodeAssetMeta((uint8,bytes32,uint16,uint8,bytes32,bytes32))": "b046223b",
							"encodeTransfer((uint8,uint256,bytes32,uint16,bytes32,uint16,uint256))": "5f854266",
							"encodeTransferWithPayload((uint8,uint256,bytes32,uint16,bytes32,uint16,bytes32,bytes))": "d56e2e24",
							"evmChainId()": "64d42b17",
							"finality()": "739fc8d1",
							"governanceActionIsConsumed(bytes32)": "2c3c02a4",
							"governanceChainId()": "fbe3c2cd",
							"governanceContract()": "b172b222",
							"implementation()": "5c60da1b",
							"initialize()": "8129fc1c",
							"isFork()": "e039f224",
							"isInitialized(address)": "d60b347f",
							"isTransferCompleted(bytes32)": "aa4efa5b",
							"isWrappedAsset(address)": "1a2be4da",
							"outstandingBridged(address)": "b96c7e4d",
							"parseAssetMeta(bytes)": "07dfd8fb",
							"parsePayloadID(bytes)": "0f509008",
							"parseRecoverChainId(bytes)": "cb4cfea8",
							"parseRegisterChain(bytes)": "01f53255",
							"parseTransfer(bytes)": "2b511375",
							"parseTransferWithPayload(bytes)": "ea63738d",
							"parseUpgrade(bytes)": "fbeeacd9",
							"registerChain(bytes)": "a5799f93",
							"submitRecoverChainId(bytes)": "178149e7",
							"tokenImplementation()": "2f3a3d5d",
							"transferTokens(address,uint256,uint16,bytes32,uint256,uint32)": "0f5287b0",
							"transferTokensWithPayload(address,uint256,uint16,bytes32,uint32,bytes)": "c5a5ebda",
							"updateWrapped(bytes)": "f768441f",
							"upgrade(bytes)": "25394645",
							"wormhole()": "84acd1bb",
							"wrapAndTransferETH(uint16,bytes32,uint256,uint32)": "9981509f",
							"wrapAndTransferETHWithPayload(uint16,bytes32,uint32,bytes)": "bee9cdfc",
							"wrappedAsset(uint16,bytes32)": "1ff1e286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractUpgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"_parseTransferCommon\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"toChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenBridge.Transfer\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"attestToken\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId_\",\"type\":\"uint16\"}],\"name\":\"bridgeContracts\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"completeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"completeTransferAndUnwrapETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"completeTransferAndUnwrapETHWithPayload\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"completeTransferWithPayload\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"createWrapped\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"symbol\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"internalType\":\"struct ITokenBridge.AssetMeta\",\"name\":\"meta\",\"type\":\"tuple\"}],\"name\":\"encodeAssetMeta\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"toChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenBridge.Transfer\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"name\":\"encodeTransfer\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"toChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"fromAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct ITokenBridge.TransferWithPayload\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"name\":\"encodeTransferWithPayload\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"evmChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finality\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"governanceActionIsConsumed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFork\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"isTransferCompleted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isWrappedAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"outstandingBridged\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parseAssetMeta\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"symbol\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"internalType\":\"struct ITokenBridge.AssetMeta\",\"name\":\"meta\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parsePayloadID\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedRecoverChainId\",\"type\":\"bytes\"}],\"name\":\"parseRecoverChainId\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"evmChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"newChainId\",\"type\":\"uint16\"}],\"internalType\":\"struct ITokenBridge.RecoverChainId\",\"name\":\"rci\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parseRegisterChain\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"emitterChainID\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"}],\"internalType\":\"struct ITokenBridge.RegisterChain\",\"name\":\"chain\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parseTransfer\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"toChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenBridge.Transfer\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parseTransferWithPayload\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"toChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"fromAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct ITokenBridge.TransferWithPayload\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parseUpgrade\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"newContract\",\"type\":\"bytes32\"}],\"internalType\":\"struct ITokenBridge.UpgradeContract\",\"name\":\"chain\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVM\",\"type\":\"bytes\"}],\"name\":\"registerChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVM\",\"type\":\"bytes\"}],\"name\":\"submitRecoverChainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"recipientChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"arbiterFee\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"transferTokens\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"recipientChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"transferTokensWithPayload\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"updateWrapped\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVM\",\"type\":\"bytes\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"recipientChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"arbiterFee\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"wrapAndTransferETH\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"recipientChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"wrapAndTransferETHWithPayload\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"tokenChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"}],\"name\":\"wrappedAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"example-2/evm/src/interfaces/ITokenBridge.sol\":\"ITokenBridge\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"example-2/evm/src/interfaces/ITokenBridge.sol\":{\"keccak256\":\"0x4c464b3e06d31406bd5c777cf8cc985a2f61ce363b6b8f1471c6b5c5da85bf17\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://acb5d5fc309b2cb1db62e1a8b9b3a1cb30b66f6b92b39477beb7a6bc61e0a4ae\",\"dweb:/ipfs/QmakrPQL2o7uVBYenB4wf1rth1JwKRoo7rJdXx7EPKczva\"]},\"example-2/evm/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xecabfd3b5626aaac6da21213b966a2aac8380f4fec739f84ffe08b29006d134e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://912a0accde3c2d18f8d268726ec16b9dfa0f24522e66e7d88c9ed368f3db7d60\",\"dweb:/ipfs/Qmf2V8YhAXRSYVFKuCeCViYAnnWtPi9GTL7w4zRPtMvGTT\"]},\"example-2/evm/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x8547d11f760ad248fe6620e146ed7756654f26b769f9deebdbb84d534144e216\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://5ac7aae1f4c9fbf06056856e854ba7ab14a5c7a487618f0a5a752e25d8d36563\",\"dweb:/ipfs/QmNf2aFrp4tgEGd1AvaSJTMHb72RVgw1TBfvNp5tQ2TZH8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"example-2/evm/src/interfaces/IWETH.sol": {
				"IWETH": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"deposit()": "d0e30db0",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"example-2/evm/src/interfaces/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"example-2/evm/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xecabfd3b5626aaac6da21213b966a2aac8380f4fec739f84ffe08b29006d134e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://912a0accde3c2d18f8d268726ec16b9dfa0f24522e66e7d88c9ed368f3db7d60\",\"dweb:/ipfs/Qmf2V8YhAXRSYVFKuCeCViYAnnWtPi9GTL7w4zRPtMvGTT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"example-2/evm/src/interfaces/IWormhole.sol": {
				"IWormhole": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "LogMessagePublished",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "chainId",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentGuardianSetIndex",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "guardianSetIndex",
									"type": "uint32"
								}
							],
							"name": "getGuardianSet",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address[]",
											"name": "keys",
											"type": "address[]"
										},
										{
											"internalType": "uint32",
											"name": "expirationTime",
											"type": "uint32"
										}
									],
									"internalType": "struct IWormhole.GuardianSet",
									"name": "guardians",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "messageFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVM",
									"type": "bytes"
								}
							],
							"name": "parseAndVerifyVM",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "version",
											"type": "uint8"
										},
										{
											"internalType": "uint32",
											"name": "timestamp",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "nonce",
											"type": "uint32"
										},
										{
											"internalType": "uint16",
											"name": "emitterChainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										},
										{
											"internalType": "uint8",
											"name": "consistencyLevel",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "payload",
											"type": "bytes"
										},
										{
											"internalType": "uint32",
											"name": "guardianSetIndex",
											"type": "uint32"
										},
										{
											"components": [
												{
													"internalType": "bytes32",
													"name": "r",
													"type": "bytes32"
												},
												{
													"internalType": "bytes32",
													"name": "s",
													"type": "bytes32"
												},
												{
													"internalType": "uint8",
													"name": "v",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "guardianIndex",
													"type": "uint8"
												}
											],
											"internalType": "struct IWormhole.Signature[]",
											"name": "signatures",
											"type": "tuple[]"
										},
										{
											"internalType": "bytes32",
											"name": "hash",
											"type": "bytes32"
										}
									],
									"internalType": "struct IWormhole.VM",
									"name": "vm",
									"type": "tuple"
								},
								{
									"internalType": "bool",
									"name": "valid",
									"type": "bool"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVM",
									"type": "bytes"
								}
							],
							"name": "parseVM",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "version",
											"type": "uint8"
										},
										{
											"internalType": "uint32",
											"name": "timestamp",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "nonce",
											"type": "uint32"
										},
										{
											"internalType": "uint16",
											"name": "emitterChainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										},
										{
											"internalType": "uint8",
											"name": "consistencyLevel",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "payload",
											"type": "bytes"
										},
										{
											"internalType": "uint32",
											"name": "guardianSetIndex",
											"type": "uint32"
										},
										{
											"components": [
												{
													"internalType": "bytes32",
													"name": "r",
													"type": "bytes32"
												},
												{
													"internalType": "bytes32",
													"name": "s",
													"type": "bytes32"
												},
												{
													"internalType": "uint8",
													"name": "v",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "guardianIndex",
													"type": "uint8"
												}
											],
											"internalType": "struct IWormhole.Signature[]",
											"name": "signatures",
											"type": "tuple[]"
										},
										{
											"internalType": "bytes32",
											"name": "hash",
											"type": "bytes32"
										}
									],
									"internalType": "struct IWormhole.VM",
									"name": "vm",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "publishMessage",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"chainId()": "9a8a0592",
							"getCurrentGuardianSetIndex()": "1cfe7951",
							"getGuardianSet(uint32)": "f951975a",
							"messageFee()": "1a90a219",
							"parseAndVerifyVM(bytes)": "c0fd8bde",
							"parseVM(bytes)": "a9e11893",
							"publishMessage(uint32,bytes,uint8)": "b19a437e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"LogMessagePublished\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentGuardianSetIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"guardianSetIndex\",\"type\":\"uint32\"}],\"name\":\"getGuardianSet\",\"outputs\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"keys\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"expirationTime\",\"type\":\"uint32\"}],\"internalType\":\"struct IWormhole.GuardianSet\",\"name\":\"guardians\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVM\",\"type\":\"bytes\"}],\"name\":\"parseAndVerifyVM\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"emitterChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"guardianSetIndex\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"guardianIndex\",\"type\":\"uint8\"}],\"internalType\":\"struct IWormhole.Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IWormhole.VM\",\"name\":\"vm\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVM\",\"type\":\"bytes\"}],\"name\":\"parseVM\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"emitterChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"guardianSetIndex\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"guardianIndex\",\"type\":\"uint8\"}],\"internalType\":\"struct IWormhole.Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IWormhole.VM\",\"name\":\"vm\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"publishMessage\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"example-2/evm/src/interfaces/IWormhole.sol\":\"IWormhole\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"example-2/evm/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x8547d11f760ad248fe6620e146ed7756654f26b769f9deebdbb84d534144e216\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://5ac7aae1f4c9fbf06056856e854ba7ab14a5c7a487618f0a5a752e25d8d36563\",\"dweb:/ipfs/QmNf2aFrp4tgEGd1AvaSJTMHb72RVgw1TBfvNp5tQ2TZH8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"example-2/evm/src/libraries/external/BytesLib.sol": {
				"BytesLib": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"example-2/evm/src/libraries/external/BytesLib.sol\":370:19274  library BytesLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"example-2/evm/src/libraries/external/BytesLib.sol\":370:19274  library BytesLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220931259a5b1ae11a8dbde81f4fe6ce7cf1e89e78ae96942400312cf109e6c60b864736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220931259a5b1ae11a8dbde81f4fe6ce7cf1e89e78ae96942400312cf109e6c60b864736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 SLT MSIZE 0xA5 0xB1 0xAE GT 0xA8 0xDB 0xDE DUP2 DELEGATECALL INVALID PUSH13 0xE7CF1E89E78AE96942400312CF LT SWAP15 PUSH13 0x60B864736F6C63430008170033 ",
							"sourceMap": "370:18904:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;370:18904:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220931259a5b1ae11a8dbde81f4fe6ce7cf1e89e78ae96942400312cf109e6c60b864736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 SLT MSIZE 0xA5 0xB1 0xAE GT 0xA8 0xDB 0xDE DUP2 DELEGATECALL INVALID PUSH13 0xE7CF1E89E78AE96942400312CF LT SWAP15 PUSH13 0x60B864736F6C63430008170033 ",
							"sourceMap": "370:18904:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"concat(bytes memory,bytes memory)": "infinite",
								"concatStorage(bytes storage pointer,bytes memory)": "infinite",
								"equal(bytes memory,bytes memory)": "infinite",
								"equalStorage(bytes storage pointer,bytes memory)": "infinite",
								"slice(bytes memory,uint256,uint256)": "infinite",
								"toAddress(bytes memory,uint256)": "infinite",
								"toBytes32(bytes memory,uint256)": "infinite",
								"toUint128(bytes memory,uint256)": "infinite",
								"toUint16(bytes memory,uint256)": "infinite",
								"toUint256(bytes memory,uint256)": "infinite",
								"toUint32(bytes memory,uint256)": "infinite",
								"toUint64(bytes memory,uint256)": "infinite",
								"toUint8(bytes memory,uint256)": "infinite",
								"toUint96(bytes memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 370,
									"end": 19274,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 370,
									"end": 19274,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220931259a5b1ae11a8dbde81f4fe6ce7cf1e89e78ae96942400312cf109e6c60b864736f6c63430008170033",
									".code": [
										{
											"begin": 370,
											"end": 19274,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 370,
											"end": 19274,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 370,
											"end": 19274,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 370,
											"end": 19274,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 370,
											"end": 19274,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 370,
											"end": 19274,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 370,
											"end": 19274,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 19274,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 19274,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"example-2/evm/src/contracts/HubSpokeMessages.sol",
								"example-2/evm/src/contracts/HubSpokeStructs.sol",
								"example-2/evm/src/contracts/lendingSpoke/Spoke.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
								"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol",
								"example-2/evm/src/interfaces/ITokenBridge.sol",
								"example-2/evm/src/interfaces/IWETH.sol",
								"example-2/evm/src/interfaces/IWormhole.sol",
								"example-2/evm/src/libraries/external/BytesLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"example-2/evm/src/libraries/external/BytesLib.sol\":\"BytesLib\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"example-2/evm/src/libraries/external/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:1",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:1",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3022:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3045:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3070:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3093:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3119:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 90,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3136:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3155:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:1"
									},
									"scope": 113,
									"src": "2997:183:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:1",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3501:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3539:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:1"
									},
									"scope": 113,
									"src": "3485:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:1",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3791:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:1"
									},
									"scope": 113,
									"src": "3740:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "2113:1689:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							403
						]
					},
					"id": 404,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 78,
							"src": "141:37:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 116,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 77,
										"src": "149:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 114,
							"src": "179:60:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 118,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 113,
										"src": "187:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 121,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 657,
							"src": "240:51:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 120,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 656,
										"src": "248:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 403,
							"linearizedBaseContracts": [
								403
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 125,
									"libraryName": {
										"id": 123,
										"name": "Address",
										"nameLocations": [
											"781:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 656,
										"src": "781:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:2",
									"typeName": {
										"id": 124,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:2",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 130,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "907:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:2"
									},
									"src": "876:46:2"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:2",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 139,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1043:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1060:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1086:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:2"
									},
									"src": "1004:109:2"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1375:88:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "1405:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 154,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "1427:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:2",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "1427:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 156,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 145,
																			"src": "1444:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 157,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "1448:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 158,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 152,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 150,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1385:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:2"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:2",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1325:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 142,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 141,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1325:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1325:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1339:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1351:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:2"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:2"
									},
									"scope": 403,
									"src": "1303:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1792:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 177,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1822:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 180,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "1844:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:2",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "1844:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 182,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 169,
																			"src": "1865:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 183,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "1871:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 184,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 173,
																			"src": "1875:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 185,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 178,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 176,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1802:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:2"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:2",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1728:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 165,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1728:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1728:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1742:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1756:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1768:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:2"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:2"
									},
									"scope": 403,
									"src": "1702:188:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2167:139:2",
										"statements": [
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "2177:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 201,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 211,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 207,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 205,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 209,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2231:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 203,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2200:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:2",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "2200:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2262:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 214,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2269:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 215,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "2278:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 216,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "2293:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "2249:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:2"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:2",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2112:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 193,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 192,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2112:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2112:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2126:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2143:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:2"
									},
									"scope": 403,
									"src": "2081:225:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "2607:370:2",
										"statements": [
											{
												"id": 262,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:2",
												"statements": [
													{
														"assignments": [
															233
														],
														"declarations": [
															{
																"constant": false,
																"id": 233,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:2",
																"nodeType": "VariableDeclaration",
																"scope": 262,
																"src": "2641:24:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 232,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 242,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 238,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 236,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 240,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2699:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 234,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2668:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:2",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "2668:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 243,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "2725:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 244,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2744:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 253,
														"nodeType": "IfStatement",
														"src": "2721:160:2",
														"trueBody": {
															"id": 252,
															"nodeType": "Block",
															"src": "2763:118:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 247,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 227,
																				"src": "2821:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 248,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 233,
																				"src": "2830:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 249,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 229,
																				"src": "2848:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 246,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 139,
																			"src": "2788:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 251,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:2"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 255,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2907:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 256,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2914:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 257,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "2923:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 258,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "2942:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 254,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2894:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 261,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:2",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2540:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 224,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 223,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2540:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2540:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2554:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2571:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:2"
									},
									"scope": 403,
									"src": "2509:468:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "3373:303:2",
										"statements": [
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "3383:25:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 275,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 285,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 279,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3426:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:2",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 64,
															"src": "3426:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 281,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "3442:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 282,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "3451:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 283,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 277,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:2",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:2"
											},
											{
												"condition": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:2",
													"subExpression": {
														"arguments": [
															{
																"id": 287,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3498:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 288,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "3505:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 286,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "3474:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "IfStatement",
												"src": "3469:201:2",
												"trueBody": {
													"id": 308,
													"nodeType": "Block",
													"src": "3520:150:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 292,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3554:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 295,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 268,
																					"src": "3576:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:2",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "3576:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 297,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 270,
																						"src": "3592:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 298,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 299,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 293,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:2",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 291,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3534:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 304,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3639:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 305,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "3646:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 303,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3619:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:2",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3318:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 267,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 266,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3318:6:2"
													},
													"referencedDeclaration": 77,
													"src": "3318:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3332:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3349:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:2"
									},
									"scope": 403,
									"src": "3296:380:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "4129:559:2",
										"statements": [
											{
												"assignments": [
													321
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 352,
														"src": "4478:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 320,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": {
													"arguments": [
														{
															"id": 327,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "4532:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 324,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "4512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 322,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:2",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 477,
														"src": "4504:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 330,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4551:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 336,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "4589:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 337,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:2",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 339,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 334,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:2",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 351,
												"nodeType": "IfStatement",
												"src": "4547:135:2",
												"trueBody": {
													"id": 350,
													"nodeType": "Block",
													"src": "4610:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 346,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 315,
																				"src": "4664:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 344,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 343,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "4631:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 349,
															"nodeType": "RevertStatement",
															"src": "4624:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4088:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "4088:6:2"
													},
													"referencedDeclaration": 77,
													"src": "4088:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4102:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:2"
									},
									"scope": 403,
									"src": "4059:629:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "5278:489:2",
										"statements": [
											{
												"assignments": [
													365,
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5574:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 364,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5588:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 366,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 375,
												"initialValue": {
													"arguments": [
														{
															"id": 373,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5635:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 370,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "5623:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 368,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:2",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 376,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "5657:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 377,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5669:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:2",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 383,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5706:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 385,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 384,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 386,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 381,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:2",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 389,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 393,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "5738:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 391,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:2",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 363,
												"id": 400,
												"nodeType": "Return",
												"src": "5650:110:2"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5222:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 356,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 355,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "5222:6:2"
													},
													"referencedDeclaration": 77,
													"src": "5222:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5236:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5272:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:2"
									},
									"scope": 403,
									"src": "5189:578:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 404,
							"src": "751:5018:2",
							"usedErrors": [
								130,
								139
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							656
						]
					},
					"id": 657,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 405,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 406,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 656,
							"linearizedBaseContracts": [
								656
							],
							"name": "Address",
							"nameLocation": "203:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:3",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 411,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "349:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:3"
									},
									"src": "316:50:3"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:3",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 416,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "475:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:3"
									},
									"src": "452:39:3"
								},
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:3",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 419,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:3"
									},
									"src": "591:24:3"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "1602:260:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 429,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 427,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 432,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "1640:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 442,
												"nodeType": "IfStatement",
												"src": "1612:109:3",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "1648:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 437,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 435,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 434,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "1669:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 440,
															"nodeType": "RevertStatement",
															"src": "1662:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													444,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "1732:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 443,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 451,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 445,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "1750:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 447,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "1772:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:3"
											},
											{
												"condition": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:3",
													"subExpression": {
														"id": 452,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "1798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 458,
												"nodeType": "IfStatement",
												"src": "1793:63:3",
												"trueBody": {
													"id": 457,
													"nodeType": "Block",
													"src": "1807:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 454,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "1828:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 456,
															"nodeType": "RevertStatement",
															"src": "1821:24:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1550:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1577:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:3"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:3"
									},
									"scope": 656,
									"src": "1531:331:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "2794:62:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 471,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "2833:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "2841:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 470,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "2811:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 469,
												"id": 475,
												"nodeType": "Return",
												"src": "2804:45:3"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2727:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2743:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2780:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:3"
									},
									"scope": 656,
									"src": "2705:151:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "3293:279:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 491,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 494,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "3331:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "3303:108:3",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "3338:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 499,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 497,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 496,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "3359:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 502,
															"nodeType": "RevertStatement",
															"src": "3352:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													506,
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3421:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 505,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3435:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 507,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"arguments": [
														{
															"id": 513,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3488:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 509,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "3462:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 511,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "3481:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3537:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3545:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 519,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3554:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 516,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3510:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 488,
												"id": 521,
												"nodeType": "Return",
												"src": "3503:62:3"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3211:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3227:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3246:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3279:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:3"
									},
									"scope": 656,
									"src": "3180:392:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "3811:154:3",
										"statements": [
											{
												"assignments": [
													534,
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 534,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3822:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 533,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3836:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 535,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"arguments": [
														{
															"id": 539,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3881:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 537,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3863:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3930:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "3938:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 545,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "3947:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3903:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 532,
												"id": 547,
												"nodeType": "Return",
												"src": "3896:62:3"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3739:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3755:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:3"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3797:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:3"
									},
									"scope": 656,
									"src": "3711:254:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "4203:156:3",
										"statements": [
											{
												"assignments": [
													560,
													562
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4214:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 559,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 562,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4228:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 561,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 567,
												"initialValue": {
													"arguments": [
														{
															"id": 565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4275:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 563,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4255:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4324:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4332:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 571,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4341:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 568,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4297:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 558,
												"id": 573,
												"nodeType": "Return",
												"src": "4290:62:3"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4136:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4152:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:3"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4189:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:3"
									},
									"scope": 656,
									"src": "4106:253:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "4783:424:3",
										"statements": [
											{
												"condition": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:3",
													"subExpression": {
														"id": 587,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "4798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 612,
													"nodeType": "Block",
													"src": "4857:344:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 594,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "5045:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 598,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 578,
																				"src": "5071:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:3",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 609,
															"nodeType": "IfStatement",
															"src": "5041:119:3",
															"trueBody": {
																"id": 608,
																"nodeType": "Block",
																"src": "5096:64:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 605,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 578,
																					"src": "5138:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 604,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 416,
																				"src": "5121:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 607,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 610,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "5180:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 586,
															"id": 611,
															"nodeType": "Return",
															"src": "5173:17:3"
														}
													]
												},
												"id": 613,
												"nodeType": "IfStatement",
												"src": "4793:408:3",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "4807:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 590,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "4829:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 589,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "4821:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 592,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4670:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4694:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4716:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:3"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4769:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:3"
									},
									"scope": 656,
									"src": "4625:582:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "5509:122:3",
										"statements": [
											{
												"condition": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:3",
													"subExpression": {
														"id": 625,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "5524:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 634,
													"nodeType": "Block",
													"src": "5583:42:3",
													"statements": [
														{
															"expression": {
																"id": 632,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "5604:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 624,
															"id": 633,
															"nodeType": "Return",
															"src": "5597:17:3"
														}
													]
												},
												"id": 635,
												"nodeType": "IfStatement",
												"src": "5519:106:3",
												"trueBody": {
													"id": 631,
													"nodeType": "Block",
													"src": "5533:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "5555:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 627,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "5547:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 630,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:3",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5433:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5447:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 619,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:3"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5495:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:3"
									},
									"scope": 656,
									"src": "5407:224:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "5798:461:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 643,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "5874:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "6204:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 649,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6225:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 651,
															"nodeType": "RevertStatement",
															"src": "6218:24:3"
														}
													]
												},
												"id": 653,
												"nodeType": "IfStatement",
												"src": "5870:383:3",
												"trueBody": {
													"id": 648,
													"nodeType": "Block",
													"src": "5897:301:3",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:3",
																"nodeType": "YulBlock",
																"src": "6055:133:3",
																"statements": [
																	{
																		"nativeSrc": "6073:40:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:3",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:3"
																			},
																			"nativeSrc": "6096:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:3",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:3",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:3",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:3"
																					},
																					"nativeSrc": "6137:19:3",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:3",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:3"
																			},
																			"nativeSrc": "6130:44:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:3"
																		},
																		"nativeSrc": "6130:44:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:3",
																	"valueSize": 1
																}
															],
															"id": 647,
															"nodeType": "InlineAssembly",
															"src": "6046:142:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:3",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "5760:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:3"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:3"
									},
									"scope": 656,
									"src": "5743:516:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 657,
							"src": "195:6066:3",
							"usedErrors": [
								411,
								416,
								419
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:3"
				},
				"id": 3
			},
			"example-2/evm/src/contracts/HubSpokeMessages.sol": {
				"ast": {
					"absolutePath": "example-2/evm/src/contracts/HubSpokeMessages.sol",
					"exportedSymbols": {
						"BytesLib": [
							2431
						],
						"HubSpokeMessages": [
							753
						],
						"HubSpokeStructs": [
							833
						]
					},
					"id": 754,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 658,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:4"
						},
						{
							"absolutePath": "example-2/evm/src/libraries/external/BytesLib.sol",
							"file": "../libraries/external/BytesLib.sol",
							"id": 659,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 754,
							"sourceUnit": 2432,
							"src": "64:44:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "example-2/evm/src/contracts/HubSpokeStructs.sol",
							"file": "./HubSpokeStructs.sol",
							"id": 660,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 754,
							"sourceUnit": 834,
							"src": "110:31:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 661,
										"name": "HubSpokeStructs",
										"nameLocations": [
											"172:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 833,
										"src": "172:15:4"
									},
									"id": 662,
									"nodeType": "InheritanceSpecifier",
									"src": "172:15:4"
								}
							],
							"canonicalName": "HubSpokeMessages",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 753,
							"linearizedBaseContracts": [
								753,
								833
							],
							"name": "HubSpokeMessages",
							"nameLocation": "152:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 665,
									"libraryName": {
										"id": 663,
										"name": "BytesLib",
										"nameLocations": [
											"200:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2431,
										"src": "200:8:4"
									},
									"nodeType": "UsingForDirective",
									"src": "194:25:4",
									"typeName": {
										"id": 664,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "213:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									}
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "321:122:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 677,
																		"name": "payload",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 668,
																		"src": "361:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ActionPayload_$823_memory_ptr",
																			"typeString": "struct HubSpokeStructs.ActionPayload memory"
																		}
																	},
																	"id": 678,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "369:6:4",
																	"memberName": "action",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 816,
																	"src": "361:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Action_$810",
																		"typeString": "enum HubSpokeStructs.Action"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Action_$810",
																		"typeString": "enum HubSpokeStructs.Action"
																	}
																],
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "355:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 675,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "355:5:4",
																	"typeDescriptions": {}
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "355:21:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"expression": {
																"id": 680,
																"name": "payload",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "378:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ActionPayload_$823_memory_ptr",
																	"typeString": "struct HubSpokeStructs.ActionPayload memory"
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "386:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 818,
															"src": "378:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 682,
																"name": "payload",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "394:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ActionPayload_$823_memory_ptr",
																	"typeString": "struct HubSpokeStructs.ActionPayload memory"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "402:12:4",
															"memberName": "assetAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 820,
															"src": "394:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 684,
																"name": "payload",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "416:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ActionPayload_$823_memory_ptr",
																	"typeString": "struct HubSpokeStructs.ActionPayload memory"
																}
															},
															"id": 685,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "424:11:4",
															"memberName": "assetAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 822,
															"src": "416:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 673,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "338:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "342:12:4",
														"memberName": "encodePacked",
														"nodeType": "MemberAccess",
														"src": "338:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "338:98:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 672,
												"id": 687,
												"nodeType": "Return",
												"src": "331:105:4"
											}
										]
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encodeActionPayload",
									"nameLocation": "234:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "275:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "254:28:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ActionPayload_$823_memory_ptr",
													"typeString": "struct HubSpokeStructs.ActionPayload"
												},
												"typeName": {
													"id": 667,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 666,
														"name": "ActionPayload",
														"nameLocations": [
															"254:13:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 823,
														"src": "254:13:4"
													},
													"referencedDeclaration": 823,
													"src": "254:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ActionPayload_$823_storage_ptr",
														"typeString": "struct HubSpokeStructs.ActionPayload"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:30:4"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "307:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 670,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "307:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:14:4"
									},
									"scope": 753,
									"src": "225:218:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "555:329:4",
										"statements": [
											{
												"assignments": [
													698
												],
												"declarations": [
													{
														"constant": false,
														"id": 698,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "573:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 751,
														"src": "565:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 697,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "565:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 700,
												"initialValue": {
													"hexValue": "30",
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "581:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "565:17:4"
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 701,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "593:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ActionPayload_$823_memory_ptr",
																"typeString": "struct HubSpokeStructs.ActionPayload memory"
															}
														},
														"id": 703,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "600:6:4",
														"memberName": "action",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 816,
														"src": "593:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Action_$810",
															"typeString": "enum HubSpokeStructs.Action"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 707,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 698,
																		"src": "635:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 705,
																		"name": "serialized",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 691,
																		"src": "616:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "627:7:4",
																	"memberName": "toUint8",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2214,
																	"src": "616:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint8_$attached_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory,uint256) pure returns (uint8)"
																	}
																},
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "616:25:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 704,
															"name": "Action",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "609:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Action_$810_$",
																"typeString": "type(enum HubSpokeStructs.Action)"
															}
														},
														"id": 709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "609:33:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Action_$810",
															"typeString": "enum HubSpokeStructs.Action"
														}
													},
													"src": "593:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Action_$810",
														"typeString": "enum HubSpokeStructs.Action"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "593:49:4"
											},
											{
												"expression": {
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 712,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "652:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "661:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "652:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "652:10:4"
											},
											{
												"expression": {
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 716,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "673:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ActionPayload_$823_memory_ptr",
																"typeString": "struct HubSpokeStructs.ActionPayload memory"
															}
														},
														"id": 718,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "680:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 818,
														"src": "673:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 721,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "710:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 719,
																"name": "serialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "689:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "700:9:4",
															"memberName": "toAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2188,
															"src": "689:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (address)"
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "689:27:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "673:43:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "673:43:4"
											},
											{
												"expression": {
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 725,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "726:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "3230",
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "735:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "726:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 728,
												"nodeType": "ExpressionStatement",
												"src": "726:11:4"
											},
											{
												"expression": {
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 729,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "748:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ActionPayload_$823_memory_ptr",
																"typeString": "struct HubSpokeStructs.ActionPayload memory"
															}
														},
														"id": 731,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "755:12:4",
														"memberName": "assetAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 820,
														"src": "748:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 734,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "791:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 732,
																"name": "serialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "770:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "781:9:4",
															"memberName": "toAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2188,
															"src": "770:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (address)"
															}
														},
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "770:27:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "748:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "748:49:4"
											},
											{
												"expression": {
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 738,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "807:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "3230",
														"id": 739,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "816:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "807:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 741,
												"nodeType": "ExpressionStatement",
												"src": "807:11:4"
											},
											{
												"expression": {
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 742,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "829:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ActionPayload_$823_memory_ptr",
																"typeString": "struct HubSpokeStructs.ActionPayload memory"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "836:11:4",
														"memberName": "assetAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 822,
														"src": "829:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 747,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "871:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 745,
																"name": "serialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "850:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "861:9:4",
															"memberName": "toUint256",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2370,
															"src": "850:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint256)"
															}
														},
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "850:27:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "829:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 750,
												"nodeType": "ExpressionStatement",
												"src": "829:48:4"
											}
										]
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeActionPayload",
									"nameLocation": "458:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "serialized",
												"nameLocation": "491:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "478:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 690,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "478:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:25:4"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "547:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "526:27:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ActionPayload_$823_memory_ptr",
													"typeString": "struct HubSpokeStructs.ActionPayload"
												},
												"typeName": {
													"id": 694,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 693,
														"name": "ActionPayload",
														"nameLocations": [
															"526:13:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 823,
														"src": "526:13:4"
													},
													"referencedDeclaration": 823,
													"src": "526:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ActionPayload_$823_storage_ptr",
														"typeString": "struct HubSpokeStructs.ActionPayload"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:29:4"
									},
									"scope": 753,
									"src": "449:435:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 754,
							"src": "143:743:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:848:4"
				},
				"id": 4
			},
			"example-2/evm/src/contracts/HubSpokeStructs.sol": {
				"ast": {
					"absolutePath": "example-2/evm/src/contracts/HubSpokeStructs.sol",
					"exportedSymbols": {
						"HubSpokeStructs": [
							833
						]
					},
					"id": 834,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 755,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "HubSpokeStructs",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 833,
							"linearizedBaseContracts": [
								833
							],
							"name": "HubSpokeStructs",
							"nameLocation": "73:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "HubSpokeStructs.VaultAmount",
									"id": 760,
									"members": [
										{
											"constant": false,
											"id": 757,
											"mutability": "mutable",
											"name": "deposited",
											"nameLocation": "132:9:5",
											"nodeType": "VariableDeclaration",
											"scope": 760,
											"src": "124:17:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 756,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "124:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 759,
											"mutability": "mutable",
											"name": "borrowed",
											"nameLocation": "159:8:5",
											"nodeType": "VariableDeclaration",
											"scope": 760,
											"src": "151:16:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 758,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "151:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "VaultAmount",
									"nameLocation": "102:11:5",
									"nodeType": "StructDefinition",
									"scope": 833,
									"src": "95:79:5",
									"visibility": "public"
								},
								{
									"canonicalName": "HubSpokeStructs.AccrualIndices",
									"id": 765,
									"members": [
										{
											"constant": false,
											"id": 762,
											"mutability": "mutable",
											"name": "deposited",
											"nameLocation": "220:9:5",
											"nodeType": "VariableDeclaration",
											"scope": 765,
											"src": "212:17:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 761,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "212:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 764,
											"mutability": "mutable",
											"name": "borrowed",
											"nameLocation": "247:8:5",
											"nodeType": "VariableDeclaration",
											"scope": 765,
											"src": "239:16:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 763,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "239:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AccrualIndices",
									"nameLocation": "187:14:5",
									"nodeType": "StructDefinition",
									"scope": 833,
									"src": "180:82:5",
									"visibility": "public"
								},
								{
									"canonicalName": "HubSpokeStructs.AssetInfo",
									"id": 779,
									"members": [
										{
											"constant": false,
											"id": 767,
											"mutability": "mutable",
											"name": "collateralizationRatioDeposit",
											"nameLocation": "303:29:5",
											"nodeType": "VariableDeclaration",
											"scope": 779,
											"src": "295:37:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 766,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "295:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 769,
											"mutability": "mutable",
											"name": "collateralizationRatioBorrow",
											"nameLocation": "350:28:5",
											"nodeType": "VariableDeclaration",
											"scope": 779,
											"src": "342:36:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 768,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "342:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 771,
											"mutability": "mutable",
											"name": "pythId",
											"nameLocation": "396:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 779,
											"src": "388:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 770,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "388:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 773,
											"mutability": "mutable",
											"name": "decimals",
											"nameLocation": "442:8:5",
											"nodeType": "VariableDeclaration",
											"scope": 779,
											"src": "436:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 772,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "436:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 776,
											"mutability": "mutable",
											"name": "interestRateModel",
											"nameLocation": "487:17:5",
											"nodeType": "VariableDeclaration",
											"scope": 779,
											"src": "460:44:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PiecewiseInterestRateModel_$803_storage_ptr",
												"typeString": "struct HubSpokeStructs.PiecewiseInterestRateModel"
											},
											"typeName": {
												"id": 775,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 774,
													"name": "PiecewiseInterestRateModel",
													"nameLocations": [
														"460:26:5"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 803,
													"src": "460:26:5"
												},
												"referencedDeclaration": 803,
												"src": "460:26:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PiecewiseInterestRateModel_$803_storage_ptr",
													"typeString": "struct HubSpokeStructs.PiecewiseInterestRateModel"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 778,
											"mutability": "mutable",
											"name": "exists",
											"nameLocation": "519:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 779,
											"src": "514:11:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 777,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "514:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AssetInfo",
									"nameLocation": "275:9:5",
									"nodeType": "StructDefinition",
									"scope": 833,
									"src": "268:264:5",
									"visibility": "public"
								},
								{
									"canonicalName": "HubSpokeStructs.InterestRateModel",
									"id": 790,
									"members": [
										{
											"constant": false,
											"id": 781,
											"mutability": "mutable",
											"name": "ratePrecision",
											"nameLocation": "580:13:5",
											"nodeType": "VariableDeclaration",
											"scope": 790,
											"src": "573:20:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 780,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "573:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 783,
											"mutability": "mutable",
											"name": "rateIntercept",
											"nameLocation": "610:13:5",
											"nodeType": "VariableDeclaration",
											"scope": 790,
											"src": "603:20:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 782,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "603:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 785,
											"mutability": "mutable",
											"name": "rateCoefficientA",
											"nameLocation": "640:16:5",
											"nodeType": "VariableDeclaration",
											"scope": 790,
											"src": "633:23:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 784,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "633:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 787,
											"mutability": "mutable",
											"name": "reserveFactor",
											"nameLocation": "674:13:5",
											"nodeType": "VariableDeclaration",
											"scope": 790,
											"src": "666:21:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 786,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "666:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 789,
											"mutability": "mutable",
											"name": "reservePrecision",
											"nameLocation": "705:16:5",
											"nodeType": "VariableDeclaration",
											"scope": 790,
											"src": "697:24:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 788,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "697:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InterestRateModel",
									"nameLocation": "545:17:5",
									"nodeType": "StructDefinition",
									"scope": 833,
									"src": "538:190:5",
									"visibility": "public"
								},
								{
									"canonicalName": "HubSpokeStructs.PiecewiseInterestRateModel",
									"id": 803,
									"members": [
										{
											"constant": false,
											"id": 792,
											"mutability": "mutable",
											"name": "ratePrecision",
											"nameLocation": "785:13:5",
											"nodeType": "VariableDeclaration",
											"scope": 803,
											"src": "778:20:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 791,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "778:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 795,
											"mutability": "mutable",
											"name": "kinks",
											"nameLocation": "818:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 803,
											"src": "808:15:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "808:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 794,
												"nodeType": "ArrayTypeName",
												"src": "808:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 798,
											"mutability": "mutable",
											"name": "rates",
											"nameLocation": "843:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 803,
											"src": "833:15:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 797,
												"nodeType": "ArrayTypeName",
												"src": "833:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 800,
											"mutability": "mutable",
											"name": "reserveFactor",
											"nameLocation": "866:13:5",
											"nodeType": "VariableDeclaration",
											"scope": 803,
											"src": "858:21:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 799,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "858:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 802,
											"mutability": "mutable",
											"name": "reservePrecision",
											"nameLocation": "897:16:5",
											"nodeType": "VariableDeclaration",
											"scope": 803,
											"src": "889:24:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 801,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "889:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PiecewiseInterestRateModel",
									"nameLocation": "741:26:5",
									"nodeType": "StructDefinition",
									"scope": 833,
									"src": "734:186:5",
									"visibility": "public"
								},
								{
									"canonicalName": "HubSpokeStructs.Action",
									"id": 810,
									"members": [
										{
											"id": 804,
											"name": "Deposit",
											"nameLocation": "948:7:5",
											"nodeType": "EnumValue",
											"src": "948:7:5"
										},
										{
											"id": 805,
											"name": "Borrow",
											"nameLocation": "965:6:5",
											"nodeType": "EnumValue",
											"src": "965:6:5"
										},
										{
											"id": 806,
											"name": "Withdraw",
											"nameLocation": "981:8:5",
											"nodeType": "EnumValue",
											"src": "981:8:5"
										},
										{
											"id": 807,
											"name": "Repay",
											"nameLocation": "999:5:5",
											"nodeType": "EnumValue",
											"src": "999:5:5"
										},
										{
											"id": 808,
											"name": "DepositNative",
											"nameLocation": "1014:13:5",
											"nodeType": "EnumValue",
											"src": "1014:13:5"
										},
										{
											"id": 809,
											"name": "RepayNative",
											"nameLocation": "1037:11:5",
											"nodeType": "EnumValue",
											"src": "1037:11:5"
										}
									],
									"name": "Action",
									"nameLocation": "931:6:5",
									"nodeType": "EnumDefinition",
									"src": "926:128:5"
								},
								{
									"canonicalName": "HubSpokeStructs.Round",
									"id": 813,
									"members": [
										{
											"id": 811,
											"name": "UP",
											"nameLocation": "1081:2:5",
											"nodeType": "EnumValue",
											"src": "1081:2:5"
										},
										{
											"id": 812,
											"name": "DOWN",
											"nameLocation": "1093:4:5",
											"nodeType": "EnumValue",
											"src": "1093:4:5"
										}
									],
									"name": "Round",
									"nameLocation": "1065:5:5",
									"nodeType": "EnumDefinition",
									"src": "1060:43:5"
								},
								{
									"canonicalName": "HubSpokeStructs.ActionPayload",
									"id": 823,
									"members": [
										{
											"constant": false,
											"id": 816,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "1147:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 823,
											"src": "1140:13:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Action_$810",
												"typeString": "enum HubSpokeStructs.Action"
											},
											"typeName": {
												"id": 815,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 814,
													"name": "Action",
													"nameLocations": [
														"1140:6:5"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 810,
													"src": "1140:6:5"
												},
												"referencedDeclaration": 810,
												"src": "1140:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Action_$810",
													"typeString": "enum HubSpokeStructs.Action"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 818,
											"mutability": "mutable",
											"name": "sender",
											"nameLocation": "1171:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 823,
											"src": "1163:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 817,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 820,
											"mutability": "mutable",
											"name": "assetAddress",
											"nameLocation": "1195:12:5",
											"nodeType": "VariableDeclaration",
											"scope": 823,
											"src": "1187:20:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 819,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1187:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 822,
											"mutability": "mutable",
											"name": "assetAmount",
											"nameLocation": "1225:11:5",
											"nodeType": "VariableDeclaration",
											"scope": 823,
											"src": "1217:19:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 821,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1217:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ActionPayload",
									"nameLocation": "1116:13:5",
									"nodeType": "StructDefinition",
									"scope": 833,
									"src": "1109:134:5",
									"visibility": "public"
								},
								{
									"canonicalName": "HubSpokeStructs.Price",
									"id": 832,
									"members": [
										{
											"constant": false,
											"id": 825,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "1314:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 832,
											"src": "1308:11:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int64",
												"typeString": "int64"
											},
											"typeName": {
												"id": 824,
												"name": "int64",
												"nodeType": "ElementaryTypeName",
												"src": "1308:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 827,
											"mutability": "mutable",
											"name": "conf",
											"nameLocation": "1336:4:5",
											"nodeType": "VariableDeclaration",
											"scope": 832,
											"src": "1329:11:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 826,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1329:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 829,
											"mutability": "mutable",
											"name": "expo",
											"nameLocation": "1356:4:5",
											"nodeType": "VariableDeclaration",
											"scope": 832,
											"src": "1350:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int32",
												"typeString": "int32"
											},
											"typeName": {
												"id": 828,
												"name": "int32",
												"nodeType": "ElementaryTypeName",
												"src": "1350:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 831,
											"mutability": "mutable",
											"name": "publishTime",
											"nameLocation": "1378:11:5",
											"nodeType": "VariableDeclaration",
											"scope": 832,
											"src": "1370:19:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 830,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1370:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Price",
									"nameLocation": "1292:5:5",
									"nodeType": "StructDefinition",
									"scope": 833,
									"src": "1285:111:5",
									"visibility": "public"
								}
							],
							"scope": 834,
							"src": "64:1334:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:1360:5"
				},
				"id": 5
			},
			"example-2/evm/src/contracts/lendingSpoke/Spoke.sol": {
				"ast": {
					"absolutePath": "example-2/evm/src/contracts/lendingSpoke/Spoke.sol",
					"exportedSymbols": {
						"BytesLib": [
							2431
						],
						"HubSpokeMessages": [
							753
						],
						"HubSpokeStructs": [
							833
						],
						"IERC20": [
							77
						],
						"ITokenBridge": [
							1962
						],
						"IWETH": [
							1976
						],
						"IWormhole": [
							2098
						],
						"SafeERC20": [
							403
						],
						"Spoke": [
							1139
						],
						"SpokeGetters": [
							1226
						],
						"SpokeSetters": [
							1304
						],
						"SpokeState": [
							1335
						],
						"SpokeStorage": [
							1331
						],
						"SpokeUtilities": [
							1562
						]
					},
					"id": 1140,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 835,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:6"
						},
						{
							"absolutePath": "example-2/evm/src/interfaces/IWormhole.sol",
							"file": "../../interfaces/IWormhole.sol",
							"id": 836,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1140,
							"sourceUnit": 2099,
							"src": "64:40:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol",
							"file": "./SpokeSetters.sol",
							"id": 837,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1140,
							"sourceUnit": 1305,
							"src": "106:28:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "example-2/evm/src/contracts/HubSpokeStructs.sol",
							"file": "../HubSpokeStructs.sol",
							"id": 838,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1140,
							"sourceUnit": 834,
							"src": "136:32:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "example-2/evm/src/contracts/HubSpokeMessages.sol",
							"file": "../HubSpokeMessages.sol",
							"id": 839,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1140,
							"sourceUnit": 754,
							"src": "169:33:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol",
							"file": "./SpokeGetters.sol",
							"id": 840,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1140,
							"sourceUnit": 1227,
							"src": "203:28:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol",
							"file": "./SpokeUtilities.sol",
							"id": 841,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1140,
							"sourceUnit": 1563,
							"src": "232:30:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 842,
										"name": "HubSpokeStructs",
										"nameLocations": [
											"282:15:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 833,
										"src": "282:15:6"
									},
									"id": 843,
									"nodeType": "InheritanceSpecifier",
									"src": "282:15:6"
								},
								{
									"baseName": {
										"id": 844,
										"name": "HubSpokeMessages",
										"nameLocations": [
											"299:16:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 753,
										"src": "299:16:6"
									},
									"id": 845,
									"nodeType": "InheritanceSpecifier",
									"src": "299:16:6"
								},
								{
									"baseName": {
										"id": 846,
										"name": "SpokeGetters",
										"nameLocations": [
											"317:12:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1226,
										"src": "317:12:6"
									},
									"id": 847,
									"nodeType": "InheritanceSpecifier",
									"src": "317:12:6"
								},
								{
									"baseName": {
										"id": 848,
										"name": "SpokeSetters",
										"nameLocations": [
											"331:12:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1304,
										"src": "331:12:6"
									},
									"id": 849,
									"nodeType": "InheritanceSpecifier",
									"src": "331:12:6"
								},
								{
									"baseName": {
										"id": 850,
										"name": "SpokeUtilities",
										"nameLocations": [
											"345:14:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1562,
										"src": "345:14:6"
									},
									"id": 851,
									"nodeType": "InheritanceSpecifier",
									"src": "345:14:6"
								}
							],
							"canonicalName": "Spoke",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1139,
							"linearizedBaseContracts": [
								1139,
								1562,
								1304,
								1226,
								1335,
								753,
								833
							],
							"name": "Spoke",
							"nameLocation": "273:5:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "1003:190:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 866,
															"name": "chainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "1024:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 865,
														"name": "setChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "1013:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$returns$__$",
															"typeString": "function (uint16)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1013:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "1013:19:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 870,
															"name": "wormhole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "1054:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 869,
														"name": "setWormhole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "1042:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1042:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "1042:21:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 874,
															"name": "tokenBridge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "1088:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 873,
														"name": "setTokenBridge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "1073:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1073:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "1073:27:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 878,
															"name": "hubChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "1124:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 877,
														"name": "setHubChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "1110:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$returns$__$",
															"typeString": "function (uint16)"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1110:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "1110:25:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 882,
															"name": "hubContractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "1167:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 881,
														"name": "setHubContractAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "1145:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1145:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "1145:41:6"
											}
										]
									},
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "366:472:6",
										"text": " @notice Spoke constructor - Initializes a new spoke with given parameters\n \n @param chainId: Chain ID of the chain that this Spoke is deployed on\n @param wormhole: Address of the Wormhole contract on this Spoke chain\n @param tokenBridge: Address of the TokenBridge contract on this Spoke chain\n @param hubChainId: Chain ID of the Hub\n @param hubContractAddress: Contract address of the Hub contract (on the Hub chain)"
									},
									"id": 886,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "871:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "864:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 853,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "864:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "wormhole",
												"nameLocation": "896:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "888:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "tokenBridge",
												"nameLocation": "922:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "914:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "hubChainId",
												"nameLocation": "950:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "943:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 859,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "943:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "hubContractAddress",
												"nameLocation": "978:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "970:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:148:6"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1003:0:6"
									},
									"scope": 1139,
									"src": "843:350:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "1302:79:6",
										"statements": [
											{
												"expression": {
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 895,
														"name": "sequence",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "1312:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 897,
																	"name": "Action",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "1332:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Action_$810_$",
																		"typeString": "type(enum HubSpokeStructs.Action)"
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1339:7:6",
																"memberName": "Deposit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 804,
																"src": "1332:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Action_$810",
																	"typeString": "enum HubSpokeStructs.Action"
																}
															},
															{
																"id": 899,
																"name": "assetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "1348:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 900,
																"name": "assetAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "1362:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Action_$810",
																	"typeString": "enum HubSpokeStructs.Action"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 896,
															"name": "doAction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "1323:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Action_$810_$_t_address_$_t_uint256_$returns$_t_uint64_$",
																"typeString": "function (enum HubSpokeStructs.Action,address,uint256) returns (uint64)"
															}
														},
														"id": 901,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1323:51:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "1312:62:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "1312:62:6"
											}
										]
									},
									"functionSelector": "a5d5db0c",
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositCollateral",
									"nameLocation": "1208:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "assetAddress",
												"nameLocation": "1234:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "1226:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1226:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "assetAmount",
												"nameLocation": "1256:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "1248:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1248:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1225:43:6"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1292:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "1285:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 892,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1285:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1284:17:6"
									},
									"scope": 1139,
									"src": "1199:182:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "1491:80:6",
										"statements": [
											{
												"expression": {
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 914,
														"name": "sequence",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "1501:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 916,
																	"name": "Action",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "1521:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Action_$810_$",
																		"typeString": "type(enum HubSpokeStructs.Action)"
																	}
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1528:8:6",
																"memberName": "Withdraw",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 806,
																"src": "1521:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Action_$810",
																	"typeString": "enum HubSpokeStructs.Action"
																}
															},
															{
																"id": 918,
																"name": "assetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "1538:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 919,
																"name": "assetAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "1552:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Action_$810",
																	"typeString": "enum HubSpokeStructs.Action"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 915,
															"name": "doAction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "1512:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Action_$810_$_t_address_$_t_uint256_$returns$_t_uint64_$",
																"typeString": "function (enum HubSpokeStructs.Action,address,uint256) returns (uint64)"
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1512:52:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "1501:63:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "1501:63:6"
											}
										]
									},
									"functionSelector": "350c35e9",
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawCollateral",
									"nameLocation": "1396:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "assetAddress",
												"nameLocation": "1423:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "1415:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1415:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "assetAmount",
												"nameLocation": "1445:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "1437:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1437:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1414:43:6"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1481:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "1474:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 911,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1474:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1473:17:6"
									},
									"scope": 1139,
									"src": "1387:184:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "1669:78:6",
										"statements": [
											{
												"expression": {
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 933,
														"name": "sequence",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "1679:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 935,
																	"name": "Action",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "1699:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Action_$810_$",
																		"typeString": "type(enum HubSpokeStructs.Action)"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1706:6:6",
																"memberName": "Borrow",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 805,
																"src": "1699:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Action_$810",
																	"typeString": "enum HubSpokeStructs.Action"
																}
															},
															{
																"id": 937,
																"name": "assetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "1714:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 938,
																"name": "assetAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "1728:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Action_$810",
																	"typeString": "enum HubSpokeStructs.Action"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 934,
															"name": "doAction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "1690:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Action_$810_$_t_address_$_t_uint256_$returns$_t_uint64_$",
																"typeString": "function (enum HubSpokeStructs.Action,address,uint256) returns (uint64)"
															}
														},
														"id": 939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1690:50:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "1679:61:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "1679:61:6"
											}
										]
									},
									"functionSelector": "4b8a3529",
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "borrow",
									"nameLocation": "1586:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "assetAddress",
												"nameLocation": "1601:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "1593:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1593:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "assetAmount",
												"nameLocation": "1623:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "1615:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1615:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:43:6"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1659:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "1652:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 930,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1652:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1651:17:6"
									},
									"scope": 1139,
									"src": "1577:170:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "1844:77:6",
										"statements": [
											{
												"expression": {
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 952,
														"name": "sequence",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "1854:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 954,
																	"name": "Action",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "1874:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Action_$810_$",
																		"typeString": "type(enum HubSpokeStructs.Action)"
																	}
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1881:5:6",
																"memberName": "Repay",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 807,
																"src": "1874:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Action_$810",
																	"typeString": "enum HubSpokeStructs.Action"
																}
															},
															{
																"id": 956,
																"name": "assetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "1888:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 957,
																"name": "assetAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "1902:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Action_$810",
																	"typeString": "enum HubSpokeStructs.Action"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 953,
															"name": "doAction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "1865:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Action_$810_$_t_address_$_t_uint256_$returns$_t_uint64_$",
																"typeString": "function (enum HubSpokeStructs.Action,address,uint256) returns (uint64)"
															}
														},
														"id": 958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1865:49:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "1854:60:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "1854:60:6"
											}
										]
									},
									"functionSelector": "22867d78",
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "repay",
									"nameLocation": "1762:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "assetAddress",
												"nameLocation": "1776:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1768:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "assetAmount",
												"nameLocation": "1798:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1790:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1767:43:6"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1834:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1827:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 949,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1827:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:17:6"
									},
									"scope": 1139,
									"src": "1753:168:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "2003:126:6",
										"statements": [
											{
												"expression": {
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 967,
														"name": "sequence",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "2013:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 969,
																	"name": "Action",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "2033:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Action_$810_$",
																		"typeString": "type(enum HubSpokeStructs.Action)"
																	}
																},
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2040:13:6",
																"memberName": "DepositNative",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 808,
																"src": "2033:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Action_$810",
																	"typeString": "enum HubSpokeStructs.Action"
																}
															},
															{
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 973,
																					"name": "tokenBridge",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1188,
																					"src": "2063:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ITokenBridge_$1962_$",
																						"typeString": "function () view returns (contract ITokenBridge)"
																					}
																				},
																				"id": 974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2063:13:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ITokenBridge_$1962",
																					"typeString": "contract ITokenBridge"
																				}
																			},
																			"id": 975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2077:4:6",
																			"memberName": "WETH",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1895,
																			"src": "2063:18:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IWETH_$1976_$",
																				"typeString": "function () view external returns (contract IWETH)"
																			}
																		},
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2063:20:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWETH_$1976",
																			"typeString": "contract IWETH"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IWETH_$1976",
																			"typeString": "contract IWETH"
																		}
																	],
																	"id": 972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2055:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 971,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2055:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2055:29:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 978,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2086:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2090:5:6",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "2086:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 980,
																				"name": "wormhole",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1172,
																				"src": "2098:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IWormhole_$2098_$",
																					"typeString": "function () view returns (contract IWormhole)"
																				}
																			},
																			"id": 981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2098:10:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IWormhole_$2098",
																				"typeString": "contract IWormhole"
																			}
																		},
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2109:10:6",
																		"memberName": "messageFee",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2070,
																		"src": "2098:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2098:23:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2086:35:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Action_$810",
																	"typeString": "enum HubSpokeStructs.Action"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 968,
															"name": "doAction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "2024:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Action_$810_$_t_address_$_t_uint256_$returns$_t_uint64_$",
																"typeString": "function (enum HubSpokeStructs.Action,address,uint256) returns (uint64)"
															}
														},
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2024:98:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "2013:109:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "2013:109:6"
											}
										]
									},
									"functionSelector": "00470257",
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositCollateralNative",
									"nameLocation": "1936:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1959:2:6"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1993:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "1986:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 964,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1986:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1985:17:6"
									},
									"scope": 1139,
									"src": "1927:202:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "2199:124:6",
										"statements": [
											{
												"expression": {
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 994,
														"name": "sequence",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "2209:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 996,
																	"name": "Action",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "2229:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Action_$810_$",
																		"typeString": "type(enum HubSpokeStructs.Action)"
																	}
																},
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2236:11:6",
																"memberName": "RepayNative",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 809,
																"src": "2229:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Action_$810",
																	"typeString": "enum HubSpokeStructs.Action"
																}
															},
															{
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1000,
																					"name": "tokenBridge",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1188,
																					"src": "2257:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ITokenBridge_$1962_$",
																						"typeString": "function () view returns (contract ITokenBridge)"
																					}
																				},
																				"id": 1001,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2257:13:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ITokenBridge_$1962",
																					"typeString": "contract ITokenBridge"
																				}
																			},
																			"id": 1002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2271:4:6",
																			"memberName": "WETH",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1895,
																			"src": "2257:18:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IWETH_$1976_$",
																				"typeString": "function () view external returns (contract IWETH)"
																			}
																		},
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2257:20:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWETH_$1976",
																			"typeString": "contract IWETH"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IWETH_$1976",
																			"typeString": "contract IWETH"
																		}
																	],
																	"id": 999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 998,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:29:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1005,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2280:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2284:5:6",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "2280:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1007,
																				"name": "wormhole",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1172,
																				"src": "2292:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IWormhole_$2098_$",
																					"typeString": "function () view returns (contract IWormhole)"
																				}
																			},
																			"id": 1008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2292:10:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IWormhole_$2098",
																				"typeString": "contract IWormhole"
																			}
																		},
																		"id": 1009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2303:10:6",
																		"memberName": "messageFee",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2070,
																		"src": "2292:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 1010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2292:23:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2280:35:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Action_$810",
																	"typeString": "enum HubSpokeStructs.Action"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 995,
															"name": "doAction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "2220:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Action_$810_$_t_address_$_t_uint256_$returns$_t_uint64_$",
																"typeString": "function (enum HubSpokeStructs.Action,address,uint256) returns (uint64)"
															}
														},
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2220:96:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "2209:107:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "2209:107:6"
											}
										]
									},
									"functionSelector": "edba8209",
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "repayNative",
									"nameLocation": "2144:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2155:2:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "2189:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "2182:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 991,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2182:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2181:17:6"
									},
									"scope": 1139,
									"src": "2135:188:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1137,
										"nodeType": "Block",
										"src": "2846:1014:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1030,
															"name": "assetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "2894:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1031,
															"name": "assetAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "2908:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1029,
														"name": "requireAssetAmountValidForTokenBridge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1509,
														"src": "2856:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2856:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "2856:64:6"
											},
											{
												"assignments": [
													1036
												],
												"declarations": [
													{
														"constant": false,
														"id": 1036,
														"mutability": "mutable",
														"name": "hubAction",
														"nameLocation": "2937:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1137,
														"src": "2930:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Action_$810",
															"typeString": "enum HubSpokeStructs.Action"
														},
														"typeName": {
															"id": 1035,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1034,
																"name": "Action",
																"nameLocations": [
																	"2930:6:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 810,
																"src": "2930:6:6"
															},
															"referencedDeclaration": 810,
															"src": "2930:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Action_$810",
																"typeString": "enum HubSpokeStructs.Action"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1038,
												"initialValue": {
													"id": 1037,
													"name": "action",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1020,
													"src": "2949:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Action_$810",
														"typeString": "enum HubSpokeStructs.Action"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2930:25:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Action_$810",
														"typeString": "enum HubSpokeStructs.Action"
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1039,
														"name": "action",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "2969:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Action_$810",
															"typeString": "enum HubSpokeStructs.Action"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1040,
															"name": "Action",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "2979:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Action_$810_$",
																"typeString": "type(enum HubSpokeStructs.Action)"
															}
														},
														"id": 1041,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2986:13:6",
														"memberName": "DepositNative",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 808,
														"src": "2979:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Action_$810",
															"typeString": "enum HubSpokeStructs.Action"
														}
													},
													"src": "2969:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1049,
												"nodeType": "IfStatement",
												"src": "2965:87:6",
												"trueBody": {
													"id": 1048,
													"nodeType": "Block",
													"src": "3001:51:6",
													"statements": [
														{
															"expression": {
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1043,
																	"name": "hubAction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1036,
																	"src": "3015:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Action_$810",
																		"typeString": "enum HubSpokeStructs.Action"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1044,
																		"name": "Action",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "3027:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Action_$810_$",
																			"typeString": "type(enum HubSpokeStructs.Action)"
																		}
																	},
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3034:7:6",
																	"memberName": "Deposit",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 804,
																	"src": "3027:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Action_$810",
																		"typeString": "enum HubSpokeStructs.Action"
																	}
																},
																"src": "3015:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Action_$810",
																	"typeString": "enum HubSpokeStructs.Action"
																}
															},
															"id": 1047,
															"nodeType": "ExpressionStatement",
															"src": "3015:26:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Action_$810",
														"typeString": "enum HubSpokeStructs.Action"
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1050,
														"name": "action",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "3065:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Action_$810",
															"typeString": "enum HubSpokeStructs.Action"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1051,
															"name": "Action",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "3075:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Action_$810_$",
																"typeString": "type(enum HubSpokeStructs.Action)"
															}
														},
														"id": 1052,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3082:11:6",
														"memberName": "RepayNative",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 809,
														"src": "3075:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Action_$810",
															"typeString": "enum HubSpokeStructs.Action"
														}
													},
													"src": "3065:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1060,
												"nodeType": "IfStatement",
												"src": "3061:83:6",
												"trueBody": {
													"id": 1059,
													"nodeType": "Block",
													"src": "3095:49:6",
													"statements": [
														{
															"expression": {
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1054,
																	"name": "hubAction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1036,
																	"src": "3109:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Action_$810",
																		"typeString": "enum HubSpokeStructs.Action"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1055,
																		"name": "Action",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "3121:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Action_$810_$",
																			"typeString": "type(enum HubSpokeStructs.Action)"
																		}
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3128:5:6",
																	"memberName": "Repay",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 807,
																	"src": "3121:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Action_$810",
																		"typeString": "enum HubSpokeStructs.Action"
																	}
																},
																"src": "3109:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Action_$810",
																	"typeString": "enum HubSpokeStructs.Action"
																}
															},
															"id": 1058,
															"nodeType": "ExpressionStatement",
															"src": "3109:24:6"
														}
													]
												}
											},
											{
												"assignments": [
													1063
												],
												"declarations": [
													{
														"constant": false,
														"id": 1063,
														"mutability": "mutable",
														"name": "payload",
														"nameLocation": "3175:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1137,
														"src": "3154:28:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ActionPayload_$823_memory_ptr",
															"typeString": "struct HubSpokeStructs.ActionPayload"
														},
														"typeName": {
															"id": 1062,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1061,
																"name": "ActionPayload",
																"nameLocations": [
																	"3154:13:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 823,
																"src": "3154:13:6"
															},
															"referencedDeclaration": 823,
															"src": "3154:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ActionPayload_$823_storage_ptr",
																"typeString": "struct HubSpokeStructs.ActionPayload"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1071,
												"initialValue": {
													"arguments": [
														{
															"id": 1065,
															"name": "hubAction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "3220:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Action_$810",
																"typeString": "enum HubSpokeStructs.Action"
															}
														},
														{
															"expression": {
																"id": 1066,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3239:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3243:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3239:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1068,
															"name": "assetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "3265:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1069,
															"name": "assetAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "3292:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_Action_$810",
																"typeString": "enum HubSpokeStructs.Action"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1064,
														"name": "ActionPayload",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "3197:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ActionPayload_$823_storage_ptr_$",
															"typeString": "type(struct HubSpokeStructs.ActionPayload storage pointer)"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"3212:6:6",
														"3231:6:6",
														"3251:12:6",
														"3279:11:6"
													],
													"names": [
														"action",
														"sender",
														"assetAddress",
														"assetAmount"
													],
													"nodeType": "FunctionCall",
													"src": "3197:108:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ActionPayload_$823_memory_ptr",
														"typeString": "struct HubSpokeStructs.ActionPayload memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3154:151:6"
											},
											{
												"assignments": [
													1073
												],
												"declarations": [
													{
														"constant": false,
														"id": 1073,
														"mutability": "mutable",
														"name": "serialized",
														"nameLocation": "3329:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1137,
														"src": "3316:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1072,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3316:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1077,
												"initialValue": {
													"arguments": [
														{
															"id": 1075,
															"name": "payload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "3362:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ActionPayload_$823_memory_ptr",
																"typeString": "struct HubSpokeStructs.ActionPayload memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ActionPayload_$823_memory_ptr",
																"typeString": "struct HubSpokeStructs.ActionPayload memory"
															}
														],
														"id": 1074,
														"name": "encodeActionPayload",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "3342:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_ActionPayload_$823_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (struct HubSpokeStructs.ActionPayload memory) pure returns (bytes memory)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3342:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3316:54:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Action_$810",
															"typeString": "enum HubSpokeStructs.Action"
														},
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1078,
															"name": "action",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "3385:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Action_$810",
																"typeString": "enum HubSpokeStructs.Action"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1079,
																"name": "Action",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "3395:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Action_$810_$",
																	"typeString": "type(enum HubSpokeStructs.Action)"
																}
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3402:7:6",
															"memberName": "Deposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 804,
															"src": "3395:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Action_$810",
																"typeString": "enum HubSpokeStructs.Action"
															}
														},
														"src": "3385:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Action_$810",
															"typeString": "enum HubSpokeStructs.Action"
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1082,
															"name": "action",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "3413:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Action_$810",
																"typeString": "enum HubSpokeStructs.Action"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1083,
																"name": "Action",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "3423:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Action_$810_$",
																	"typeString": "type(enum HubSpokeStructs.Action)"
																}
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3430:5:6",
															"memberName": "Repay",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 807,
															"src": "3423:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Action_$810",
																"typeString": "enum HubSpokeStructs.Action"
															}
														},
														"src": "3413:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3385:50:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_enum$_Action_$810",
																"typeString": "enum HubSpokeStructs.Action"
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1096,
																"name": "action",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "3544:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Action_$810",
																	"typeString": "enum HubSpokeStructs.Action"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1097,
																	"name": "Action",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "3554:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Action_$810_$",
																		"typeString": "type(enum HubSpokeStructs.Action)"
																	}
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3561:8:6",
																"memberName": "Withdraw",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 806,
																"src": "3554:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Action_$810",
																	"typeString": "enum HubSpokeStructs.Action"
																}
															},
															"src": "3544:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_enum$_Action_$810",
																"typeString": "enum HubSpokeStructs.Action"
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1100,
																"name": "action",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "3573:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Action_$810",
																	"typeString": "enum HubSpokeStructs.Action"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1101,
																	"name": "Action",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "3583:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Action_$810_$",
																		"typeString": "type(enum HubSpokeStructs.Action)"
																	}
																},
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3590:6:6",
																"memberName": "Borrow",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 805,
																"src": "3583:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Action_$810",
																	"typeString": "enum HubSpokeStructs.Action"
																}
															},
															"src": "3573:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "3544:52:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Action_$810",
																	"typeString": "enum HubSpokeStructs.Action"
																},
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1112,
																	"name": "action",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1020,
																	"src": "3675:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Action_$810",
																		"typeString": "enum HubSpokeStructs.Action"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1113,
																		"name": "Action",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "3685:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Action_$810_$",
																			"typeString": "type(enum HubSpokeStructs.Action)"
																		}
																	},
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3692:13:6",
																	"memberName": "DepositNative",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 808,
																	"src": "3685:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Action_$810",
																		"typeString": "enum HubSpokeStructs.Action"
																	}
																},
																"src": "3675:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Action_$810",
																	"typeString": "enum HubSpokeStructs.Action"
																},
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1116,
																	"name": "action",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1020,
																	"src": "3709:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Action_$810",
																		"typeString": "enum HubSpokeStructs.Action"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1117,
																		"name": "Action",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "3719:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Action_$810_$",
																			"typeString": "type(enum HubSpokeStructs.Action)"
																		}
																	},
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3726:11:6",
																	"memberName": "RepayNative",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 809,
																	"src": "3719:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Action_$810",
																		"typeString": "enum HubSpokeStructs.Action"
																	}
																},
																"src": "3709:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3675:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1134,
														"nodeType": "IfStatement",
														"src": "3671:183:6",
														"trueBody": {
															"id": 1133,
															"nodeType": "Block",
															"src": "3739:115:6",
															"statements": [
																{
																	"expression": {
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1121,
																			"name": "sequence",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1027,
																			"src": "3753:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1128,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1123,
																						"name": "assetAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1024,
																						"src": "3793:11:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"expression": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 1124,
																									"name": "wormhole",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1172,
																									"src": "3807:8:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IWormhole_$2098_$",
																										"typeString": "function () view returns (contract IWormhole)"
																									}
																								},
																								"id": 1125,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3807:10:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IWormhole_$2098",
																									"typeString": "contract IWormhole"
																								}
																							},
																							"id": 1126,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "3818:10:6",
																							"memberName": "messageFee",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2070,
																							"src": "3807:21:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																								"typeString": "function () view external returns (uint256)"
																							}
																						},
																						"id": 1127,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3807:23:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3793:37:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1129,
																					"name": "serialized",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1073,
																					"src": "3832:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 1122,
																				"name": "sendTokenBridgeMessageNative",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1468,
																				"src": "3764:28:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint64_$",
																					"typeString": "function (uint256,bytes memory) returns (uint64)"
																				}
																			},
																			"id": 1130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3764:79:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"src": "3753:90:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"id": 1132,
																	"nodeType": "ExpressionStatement",
																	"src": "3753:90:6"
																}
															]
														}
													},
													"id": 1135,
													"nodeType": "IfStatement",
													"src": "3540:314:6",
													"trueBody": {
														"id": 1111,
														"nodeType": "Block",
														"src": "3598:67:6",
														"statements": [
															{
																"expression": {
																	"id": 1109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1105,
																		"name": "sequence",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1027,
																		"src": "3612:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 1107,
																				"name": "serialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1073,
																				"src": "3643:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1106,
																			"name": "sendWormholeMessage",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "3623:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_uint64_$",
																				"typeString": "function (bytes memory) returns (uint64)"
																			}
																		},
																		"id": 1108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3623:31:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"src": "3612:42:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"id": 1110,
																"nodeType": "ExpressionStatement",
																"src": "3612:42:6"
															}
														]
													}
												},
												"id": 1136,
												"nodeType": "IfStatement",
												"src": "3381:473:6",
												"trueBody": {
													"id": 1095,
													"nodeType": "Block",
													"src": "3437:97:6",
													"statements": [
														{
															"expression": {
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1087,
																	"name": "sequence",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "3451:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1089,
																			"name": "assetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1022,
																			"src": "3485:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1090,
																			"name": "assetAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1024,
																			"src": "3499:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1091,
																			"name": "serialized",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1073,
																			"src": "3512:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1088,
																		"name": "sendTokenBridgeMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1434,
																		"src": "3462:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint64_$",
																			"typeString": "function (address,uint256,bytes memory) returns (uint64)"
																		}
																	},
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3462:61:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "3451:72:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 1094,
															"nodeType": "ExpressionStatement",
															"src": "3451:72:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "2329:401:6",
										"text": " @notice Initiates an action (deposit, borrow, withdraw, or repay) on the spoke by sending a Wormhole message (potentially a TokenBridge message with tokens) to the Hub\n \n @param action - the action (either Deposit, Borrow, Withdraw, or Repay)\n @param assetAddress - the address of the relevant asset\n @param assetAmount - the amount of the asset assetAddress"
									},
									"id": 1138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "doAction",
									"nameLocation": "2744:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "action",
												"nameLocation": "2760:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "2753:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Action_$810",
													"typeString": "enum HubSpokeStructs.Action"
												},
												"typeName": {
													"id": 1019,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1018,
														"name": "Action",
														"nameLocations": [
															"2753:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 810,
														"src": "2753:6:6"
													},
													"referencedDeclaration": 810,
													"src": "2753:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Action_$810",
														"typeString": "enum HubSpokeStructs.Action"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "assetAddress",
												"nameLocation": "2776:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "2768:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "assetAmount",
												"nameLocation": "2798:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "2790:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2790:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2752:58:6"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "2836:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "2829:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1026,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2829:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2828:17:6"
									},
									"scope": 1139,
									"src": "2735:1125:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1140,
							"src": "264:3598:6",
							"usedErrors": [
								130,
								411,
								416,
								419
							],
							"usedEvents": []
						}
					],
					"src": "39:3824:6"
				},
				"id": 6
			},
			"example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol": {
				"ast": {
					"absolutePath": "example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol",
					"exportedSymbols": {
						"HubSpokeStructs": [
							833
						],
						"IERC20": [
							77
						],
						"ITokenBridge": [
							1962
						],
						"IWETH": [
							1976
						],
						"IWormhole": [
							2098
						],
						"SpokeGetters": [
							1226
						],
						"SpokeState": [
							1335
						],
						"SpokeStorage": [
							1331
						]
					},
					"id": 1227,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1141,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:7"
						},
						{
							"absolutePath": "example-2/evm/src/interfaces/IWormhole.sol",
							"file": "../../interfaces/IWormhole.sol",
							"id": 1142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1227,
							"sourceUnit": 2099,
							"src": "64:40:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "example-2/evm/src/interfaces/ITokenBridge.sol",
							"file": "../../interfaces/ITokenBridge.sol",
							"id": 1143,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1227,
							"sourceUnit": 1963,
							"src": "105:43:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
							"file": "./SpokeState.sol",
							"id": 1144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1227,
							"sourceUnit": 1336,
							"src": "149:26:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "example-2/evm/src/contracts/HubSpokeStructs.sol",
							"file": "../HubSpokeStructs.sol",
							"id": 1145,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1227,
							"sourceUnit": 834,
							"src": "176:32:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1146,
										"name": "HubSpokeStructs",
										"nameLocations": [
											"235:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 833,
										"src": "235:15:7"
									},
									"id": 1147,
									"nodeType": "InheritanceSpecifier",
									"src": "235:15:7"
								},
								{
									"baseName": {
										"id": 1148,
										"name": "SpokeState",
										"nameLocations": [
											"252:10:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1335,
										"src": "252:10:7"
									},
									"id": 1149,
									"nodeType": "InheritanceSpecifier",
									"src": "252:10:7"
								}
							],
							"canonicalName": "SpokeGetters",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1226,
							"linearizedBaseContracts": [
								1226,
								1335,
								833
							],
							"name": "SpokeGetters",
							"nameLocation": "219:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "317:47:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1154,
															"name": "_state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "334:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_State_$1330_storage",
																"typeString": "struct SpokeStorage.State storage ref"
															}
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "341:8:7",
														"memberName": "provider",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1319,
														"src": "334:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Provider_$1316_storage",
															"typeString": "struct SpokeStorage.Provider storage ref"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "350:7:7",
													"memberName": "chainId",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1311,
													"src": "334:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 1153,
												"id": 1157,
												"nodeType": "Return",
												"src": "327:30:7"
											}
										]
									},
									"functionSelector": "9a8a0592",
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "chainId",
									"nameLocation": "278:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "285:2:7"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "309:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1151,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "309:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:8:7"
									},
									"scope": 1226,
									"src": "269:95:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "424:59:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 1166,
																	"name": "_state",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "451:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_State_$1330_storage",
																		"typeString": "struct SpokeStorage.State storage ref"
																	}
																},
																"id": 1167,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "458:8:7",
																"memberName": "provider",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1319,
																"src": "451:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Provider_$1316_storage",
																	"typeString": "struct SpokeStorage.Provider storage ref"
																}
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "467:8:7",
															"memberName": "wormhole",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1313,
															"src": "451:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1165,
														"name": "IWormhole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2098,
														"src": "441:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IWormhole_$2098_$",
															"typeString": "type(contract IWormhole)"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "441:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWormhole_$2098",
														"typeString": "contract IWormhole"
													}
												},
												"functionReturnParameters": 1164,
												"id": 1170,
												"nodeType": "Return",
												"src": "434:42:7"
											}
										]
									},
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "wormhole",
									"nameLocation": "379:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "387:2:7"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "413:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IWormhole_$2098",
													"typeString": "contract IWormhole"
												},
												"typeName": {
													"id": 1162,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1161,
														"name": "IWormhole",
														"nameLocations": [
															"413:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2098,
														"src": "413:9:7"
													},
													"referencedDeclaration": 2098,
													"src": "413:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWormhole_$2098",
														"typeString": "contract IWormhole"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "412:11:7"
									},
									"scope": 1226,
									"src": "370:113:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "547:74:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1181,
																			"name": "_state",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1334,
																			"src": "585:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_State_$1330_storage",
																				"typeString": "struct SpokeStorage.State storage ref"
																			}
																		},
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "592:8:7",
																		"memberName": "provider",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1319,
																		"src": "585:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Provider_$1316_storage",
																			"typeString": "struct SpokeStorage.Provider storage ref"
																		}
																	},
																	"id": 1183,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "601:11:7",
																	"memberName": "tokenBridge",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1315,
																	"src": "585:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "577:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1179,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "577:8:7",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "577:36:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1178,
														"name": "ITokenBridge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1962,
														"src": "564:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ITokenBridge_$1962_$",
															"typeString": "type(contract ITokenBridge)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "564:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITokenBridge_$1962",
														"typeString": "contract ITokenBridge"
													}
												},
												"functionReturnParameters": 1177,
												"id": 1186,
												"nodeType": "Return",
												"src": "557:57:7"
											}
										]
									},
									"functionSelector": "c6328a46",
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenBridge",
									"nameLocation": "498:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "509:2:7"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "533:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ITokenBridge_$1962",
													"typeString": "contract ITokenBridge"
												},
												"typeName": {
													"id": 1175,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1174,
														"name": "ITokenBridge",
														"nameLocations": [
															"533:12:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1962,
														"src": "533:12:7"
													},
													"referencedDeclaration": 1962,
													"src": "533:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITokenBridge_$1962",
														"typeString": "contract ITokenBridge"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:14:7"
									},
									"scope": 1226,
									"src": "489:132:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1197,
										"nodeType": "Block",
										"src": "687:51:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1193,
															"name": "_state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "704:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_State_$1330_storage",
																"typeString": "struct SpokeStorage.State storage ref"
															}
														},
														"id": 1194,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "711:8:7",
														"memberName": "provider",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1319,
														"src": "704:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Provider_$1316_storage",
															"typeString": "struct SpokeStorage.Provider storage ref"
														}
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "720:11:7",
													"memberName": "tokenBridge",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1315,
													"src": "704:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1192,
												"id": 1196,
												"nodeType": "Return",
												"src": "697:34:7"
											}
										]
									},
									"functionSelector": "e1884919",
									"id": 1198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenBridgeAddress",
									"nameLocation": "636:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "654:2:7"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "678:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "677:9:7"
									},
									"scope": 1226,
									"src": "627:111:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1206,
										"nodeType": "Block",
										"src": "802:47:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1203,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "819:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_State_$1330_storage",
															"typeString": "struct SpokeStorage.State storage ref"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "826:16:7",
													"memberName": "consistencyLevel",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1321,
													"src": "819:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1202,
												"id": 1205,
												"nodeType": "Return",
												"src": "812:30:7"
											}
										]
									},
									"id": 1207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "consistencyLevel",
									"nameLocation": "753:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "769:2:7"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "795:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1200,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "795:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "794:7:7"
									},
									"scope": 1226,
									"src": "744:105:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "908:41:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1212,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "925:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_State_$1330_storage",
															"typeString": "struct SpokeStorage.State storage ref"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "932:10:7",
													"memberName": "hubChainId",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1323,
													"src": "925:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 1211,
												"id": 1214,
												"nodeType": "Return",
												"src": "918:24:7"
											}
										]
									},
									"id": 1216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hubChainId",
									"nameLocation": "864:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:2:7"
									},
									"returnParameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "900:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1209,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "900:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "899:8:7"
									},
									"scope": 1226,
									"src": "855:94:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1224,
										"nodeType": "Block",
										"src": "1017:49:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1221,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "1034:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_State_$1330_storage",
															"typeString": "struct SpokeStorage.State storage ref"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1041:18:7",
													"memberName": "hubContractAddress",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1325,
													"src": "1034:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1220,
												"id": 1223,
												"nodeType": "Return",
												"src": "1027:32:7"
											}
										]
									},
									"id": 1225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hubContractAddress",
									"nameLocation": "964:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "982:2:7"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "1008:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1007:9:7"
									},
									"scope": 1226,
									"src": "955:111:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1227,
							"src": "210:858:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:1030:7"
				},
				"id": 7
			},
			"example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol": {
				"ast": {
					"absolutePath": "example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol",
					"exportedSymbols": {
						"HubSpokeStructs": [
							833
						],
						"SpokeSetters": [
							1304
						],
						"SpokeState": [
							1335
						],
						"SpokeStorage": [
							1331
						]
					},
					"id": 1305,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1228,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:8"
						},
						{
							"absolutePath": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
							"file": "./SpokeState.sol",
							"id": 1229,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1305,
							"sourceUnit": 1336,
							"src": "64:26:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "example-2/evm/src/contracts/HubSpokeStructs.sol",
							"file": "../HubSpokeStructs.sol",
							"id": 1230,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1305,
							"sourceUnit": 834,
							"src": "91:32:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1231,
										"name": "HubSpokeStructs",
										"nameLocations": [
											"150:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 833,
										"src": "150:15:8"
									},
									"id": 1232,
									"nodeType": "InheritanceSpecifier",
									"src": "150:15:8"
								},
								{
									"baseName": {
										"id": 1233,
										"name": "SpokeState",
										"nameLocations": [
											"167:10:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1335,
										"src": "167:10:8"
									},
									"id": 1234,
									"nodeType": "InheritanceSpecifier",
									"src": "167:10:8"
								}
							],
							"canonicalName": "SpokeSetters",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1304,
							"linearizedBaseContracts": [
								1304,
								1335,
								833
							],
							"name": "SpokeSetters",
							"nameLocation": "134:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "229:50:8",
										"statements": [
											{
												"expression": {
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1239,
																"name": "_state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1334,
																"src": "239:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_State_$1330_storage",
																	"typeString": "struct SpokeStorage.State storage ref"
																}
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "246:8:8",
															"memberName": "provider",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1319,
															"src": "239:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Provider_$1316_storage",
																"typeString": "struct SpokeStorage.Provider storage ref"
															}
														},
														"id": 1243,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "255:7:8",
														"memberName": "chainId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1311,
														"src": "239:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1244,
														"name": "chainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1236,
														"src": "265:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "239:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 1246,
												"nodeType": "ExpressionStatement",
												"src": "239:33:8"
											}
										]
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setChainId",
									"nameLocation": "193:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "211:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "204:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1235,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "204:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:16:8"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "229:0:8"
									},
									"scope": 1304,
									"src": "184:95:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1264,
										"nodeType": "Block",
										"src": "340:68:8",
										"statements": [
											{
												"expression": {
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1253,
																"name": "_state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1334,
																"src": "350:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_State_$1330_storage",
																	"typeString": "struct SpokeStorage.State storage ref"
																}
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "357:8:8",
															"memberName": "provider",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1319,
															"src": "350:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Provider_$1316_storage",
																"typeString": "struct SpokeStorage.Provider storage ref"
															}
														},
														"id": 1257,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "366:8:8",
														"memberName": "wormhole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1313,
														"src": "350:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1260,
																"name": "wormholeAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1250,
																"src": "385:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "377:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 1258,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "377:8:8",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "377:24:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "350:51:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "350:51:8"
											}
										]
									},
									"id": 1265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setWormhole",
									"nameLocation": "294:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "wormholeAddress",
												"nameLocation": "314:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "306:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "306:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "305:25:8"
									},
									"returnParameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "340:0:8"
									},
									"scope": 1304,
									"src": "285:123:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "475:65:8",
										"statements": [
											{
												"expression": {
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1270,
																"name": "_state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1334,
																"src": "485:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_State_$1330_storage",
																	"typeString": "struct SpokeStorage.State storage ref"
																}
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "492:8:8",
															"memberName": "provider",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1319,
															"src": "485:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Provider_$1316_storage",
																"typeString": "struct SpokeStorage.Provider storage ref"
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "501:11:8",
														"memberName": "tokenBridge",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1315,
														"src": "485:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1275,
														"name": "tokenBridgeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "515:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "485:48:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1277,
												"nodeType": "ExpressionStatement",
												"src": "485:48:8"
											}
										]
									},
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setTokenBridge",
									"nameLocation": "423:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "tokenBridgeAddress",
												"nameLocation": "446:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "438:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:28:8"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "475:0:8"
									},
									"scope": 1304,
									"src": "414:126:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1290,
										"nodeType": "Block",
										"src": "597:47:8",
										"statements": [
											{
												"expression": {
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1284,
															"name": "_state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "607:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_State_$1330_storage",
																"typeString": "struct SpokeStorage.State storage ref"
															}
														},
														"id": 1286,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "614:10:8",
														"memberName": "hubChainId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1323,
														"src": "607:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1287,
														"name": "hubChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1281,
														"src": "627:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "607:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 1289,
												"nodeType": "ExpressionStatement",
												"src": "607:30:8"
											}
										]
									},
									"id": 1291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setHubChainId",
									"nameLocation": "555:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "hubChainId",
												"nameLocation": "576:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "569:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1280,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:19:8"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "597:0:8"
									},
									"scope": 1304,
									"src": "546:98:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "718:63:8",
										"statements": [
											{
												"expression": {
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1296,
															"name": "_state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "728:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_State_$1330_storage",
																"typeString": "struct SpokeStorage.State storage ref"
															}
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "735:18:8",
														"memberName": "hubContractAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1325,
														"src": "728:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1299,
														"name": "hubContractAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "756:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "728:46:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1301,
												"nodeType": "ExpressionStatement",
												"src": "728:46:8"
											}
										]
									},
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setHubContractAddress",
									"nameLocation": "659:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "hubContractAddress",
												"nameLocation": "689:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "681:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "680:28:8"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "718:0:8"
									},
									"scope": 1304,
									"src": "650:131:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1305,
							"src": "125:658:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:745:8"
				},
				"id": 8
			},
			"example-2/evm/src/contracts/lendingSpoke/SpokeState.sol": {
				"ast": {
					"absolutePath": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
					"exportedSymbols": {
						"HubSpokeStructs": [
							833
						],
						"SpokeState": [
							1335
						],
						"SpokeStorage": [
							1331
						]
					},
					"id": 1336,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1306,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:9"
						},
						{
							"absolutePath": "example-2/evm/src/contracts/HubSpokeStructs.sol",
							"file": "../HubSpokeStructs.sol",
							"id": 1307,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 834,
							"src": "64:32:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1308,
										"name": "HubSpokeStructs",
										"nameLocations": [
											"123:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 833,
										"src": "123:15:9"
									},
									"id": 1309,
									"nodeType": "InheritanceSpecifier",
									"src": "123:15:9"
								}
							],
							"canonicalName": "SpokeStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1331,
							"linearizedBaseContracts": [
								1331,
								833
							],
							"name": "SpokeStorage",
							"nameLocation": "107:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "SpokeStorage.Provider",
									"id": 1316,
									"members": [
										{
											"constant": false,
											"id": 1311,
											"mutability": "mutable",
											"name": "chainId",
											"nameLocation": "178:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1316,
											"src": "171:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1310,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "171:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1313,
											"mutability": "mutable",
											"name": "wormhole",
											"nameLocation": "211:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 1316,
											"src": "195:24:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 1312,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "195:15:9",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1315,
											"mutability": "mutable",
											"name": "tokenBridge",
											"nameLocation": "237:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 1316,
											"src": "229:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1314,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "229:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Provider",
									"nameLocation": "152:8:9",
									"nodeType": "StructDefinition",
									"scope": 1331,
									"src": "145:110:9",
									"visibility": "public"
								},
								{
									"canonicalName": "SpokeStorage.State",
									"id": 1330,
									"members": [
										{
											"constant": false,
											"id": 1319,
											"mutability": "mutable",
											"name": "provider",
											"nameLocation": "293:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 1330,
											"src": "284:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Provider_$1316_storage_ptr",
												"typeString": "struct SpokeStorage.Provider"
											},
											"typeName": {
												"id": 1318,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1317,
													"name": "Provider",
													"nameLocations": [
														"284:8:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1316,
													"src": "284:8:9"
												},
												"referencedDeclaration": 1316,
												"src": "284:8:9",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Provider_$1316_storage_ptr",
													"typeString": "struct SpokeStorage.Provider"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1321,
											"mutability": "mutable",
											"name": "consistencyLevel",
											"nameLocation": "374:16:9",
											"nodeType": "VariableDeclaration",
											"scope": 1330,
											"src": "368:22:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1320,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "368:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1323,
											"mutability": "mutable",
											"name": "hubChainId",
											"nameLocation": "407:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1330,
											"src": "400:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1322,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "400:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1325,
											"mutability": "mutable",
											"name": "hubContractAddress",
											"nameLocation": "435:18:9",
											"nodeType": "VariableDeclaration",
											"scope": 1330,
											"src": "427:26:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1324,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "427:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1329,
											"mutability": "mutable",
											"name": "______gap",
											"nameLocation": "503:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1330,
											"src": "491:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
												"typeString": "uint256[50]"
											},
											"typeName": {
												"baseType": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "491:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1328,
												"length": {
													"hexValue": "3530",
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "499:2:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_50_by_1",
														"typeString": "int_const 50"
													},
													"value": "50"
												},
												"nodeType": "ArrayTypeName",
												"src": "491:11:9",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
													"typeString": "uint256[50]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "State",
									"nameLocation": "268:5:9",
									"nodeType": "StructDefinition",
									"scope": 1331,
									"src": "261:258:9",
									"visibility": "public"
								}
							],
							"scope": 1336,
							"src": "98:423:9",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SpokeState",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1335,
							"linearizedBaseContracts": [
								1335
							],
							"name": "SpokeState",
							"nameLocation": "532:10:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1334,
									"mutability": "mutable",
									"name": "_state",
									"nameLocation": "568:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "549:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_State_$1330_storage",
										"typeString": "struct SpokeStorage.State"
									},
									"typeName": {
										"id": 1333,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1332,
											"name": "SpokeStorage.State",
											"nameLocations": [
												"549:12:9",
												"562:5:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1330,
											"src": "549:18:9"
										},
										"referencedDeclaration": 1330,
										"src": "549:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_State_$1330_storage_ptr",
											"typeString": "struct SpokeStorage.State"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 1336,
							"src": "523:54:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:539:9"
				},
				"id": 9
			},
			"example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol": {
				"ast": {
					"absolutePath": "example-2/evm/src/contracts/lendingSpoke/SpokeUtilities.sol",
					"exportedSymbols": {
						"HubSpokeStructs": [
							833
						],
						"IERC20": [
							77
						],
						"ITokenBridge": [
							1962
						],
						"IWETH": [
							1976
						],
						"IWormhole": [
							2098
						],
						"SafeERC20": [
							403
						],
						"SpokeGetters": [
							1226
						],
						"SpokeSetters": [
							1304
						],
						"SpokeState": [
							1335
						],
						"SpokeStorage": [
							1331
						],
						"SpokeUtilities": [
							1562
						]
					},
					"id": 1563,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1337,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:10"
						},
						{
							"absolutePath": "example-2/evm/src/contracts/HubSpokeStructs.sol",
							"file": "../HubSpokeStructs.sol",
							"id": 1338,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1563,
							"sourceUnit": 834,
							"src": "64:32:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "example-2/evm/src/contracts/lendingSpoke/SpokeState.sol",
							"file": "./SpokeState.sol",
							"id": 1339,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1563,
							"sourceUnit": 1336,
							"src": "97:26:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "example-2/evm/src/contracts/lendingSpoke/SpokeGetters.sol",
							"file": "./SpokeGetters.sol",
							"id": 1340,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1563,
							"sourceUnit": 1227,
							"src": "124:28:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "example-2/evm/src/contracts/lendingSpoke/SpokeSetters.sol",
							"file": "./SpokeSetters.sol",
							"id": 1341,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1563,
							"sourceUnit": 1305,
							"src": "153:28:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1343,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1563,
							"sourceUnit": 404,
							"src": "183:82:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1342,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 403,
										"src": "191:9:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1345,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1563,
							"sourceUnit": 78,
							"src": "266:70:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1344,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 77,
										"src": "274:6:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1346,
										"name": "HubSpokeStructs",
										"nameLocations": [
											"365:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 833,
										"src": "365:15:10"
									},
									"id": 1347,
									"nodeType": "InheritanceSpecifier",
									"src": "365:15:10"
								},
								{
									"baseName": {
										"id": 1348,
										"name": "SpokeState",
										"nameLocations": [
											"382:10:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1335,
										"src": "382:10:10"
									},
									"id": 1349,
									"nodeType": "InheritanceSpecifier",
									"src": "382:10:10"
								},
								{
									"baseName": {
										"id": 1350,
										"name": "SpokeGetters",
										"nameLocations": [
											"394:12:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1226,
										"src": "394:12:10"
									},
									"id": 1351,
									"nodeType": "InheritanceSpecifier",
									"src": "394:12:10"
								},
								{
									"baseName": {
										"id": 1352,
										"name": "SpokeSetters",
										"nameLocations": [
											"408:12:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1304,
										"src": "408:12:10"
									},
									"id": 1353,
									"nodeType": "InheritanceSpecifier",
									"src": "408:12:10"
								}
							],
							"canonicalName": "SpokeUtilities",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1562,
							"linearizedBaseContracts": [
								1562,
								1304,
								1226,
								1335,
								833
							],
							"name": "SpokeUtilities",
							"nameLocation": "347:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1371,
										"nodeType": "Block",
										"src": "513:140:10",
										"statements": [
											{
												"expression": {
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1360,
														"name": "sequence",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "523:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "573:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 1365,
																"name": "payload",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "597:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1366,
																	"name": "consistencyLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1207,
																	"src": "618:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																		"typeString": "function () view returns (uint8)"
																	}
																},
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "618:18:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1361,
																	"name": "wormhole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "534:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IWormhole_$2098_$",
																		"typeString": "function () view returns (contract IWormhole)"
																	}
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "534:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWormhole_$2098",
																	"typeString": "contract IWormhole"
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "545:14:10",
															"memberName": "publishMessage",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2048,
															"src": "534:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint32_$_t_bytes_memory_ptr_$_t_uint8_$returns$_t_uint64_$",
																"typeString": "function (uint32,bytes memory,uint8) payable external returns (uint64)"
															}
														},
														"id": 1368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "534:112:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "523:123:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1370,
												"nodeType": "ExpressionStatement",
												"src": "523:123:10"
											}
										]
									},
									"id": 1372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendWormholeMessage",
									"nameLocation": "436:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "469:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "456:20:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1354,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "456:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "455:22:10"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "503:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "496:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1357,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:17:10"
									},
									"scope": 1562,
									"src": "427:226:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1433,
										"nodeType": "Block",
										"src": "811:380:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1387,
																	"name": "assetAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1374,
																	"src": "855:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1386,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "848:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "848:20:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"expression": {
																"id": 1389,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "870:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "874:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "870:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1393,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "890:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SpokeUtilities_$1562",
																		"typeString": "contract SpokeUtilities"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SpokeUtilities_$1562",
																		"typeString": "contract SpokeUtilities"
																	}
																],
																"id": 1392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "882:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1391,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "882:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "882:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1395,
															"name": "assetAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "897:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1383,
															"name": "SafeERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "821:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeERC20_$403_$",
																"typeString": "type(library SafeERC20)"
															}
														},
														"id": 1385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "831:16:10",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "821:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "821:88:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1397,
												"nodeType": "ExpressionStatement",
												"src": "821:88:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1402,
																	"name": "assetAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1374,
																	"src": "950:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1401,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "943:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "943:20:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1404,
																"name": "tokenBridgeAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1198,
																"src": "965:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "965:20:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1406,
															"name": "assetAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "987:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1398,
															"name": "SafeERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "920:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeERC20_$403_$",
																"typeString": "type(library SafeERC20)"
															}
														},
														"id": 1400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "930:12:10",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 163,
														"src": "920:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "920:79:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "920:79:10"
											},
											{
												"expression": {
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1409,
														"name": "sequence",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "1010:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1413,
																"name": "assetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1374,
																"src": "1074:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1414,
																"name": "assetAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1376,
																"src": "1088:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1415,
																	"name": "hubChainId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "1101:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint16_$",
																		"typeString": "function () view returns (uint16)"
																	}
																},
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1101:12:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 1423,
																							"name": "hubContractAddress",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1225,
																							"src": "1139:18:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																								"typeString": "function () view returns (address)"
																							}
																						},
																						"id": 1424,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1139:20:10",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1422,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1131:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint160_$",
																						"typeString": "type(uint160)"
																					},
																					"typeName": {
																						"id": 1421,
																						"name": "uint160",
																						"nodeType": "ElementaryTypeName",
																						"src": "1131:7:10",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1425,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1131:29:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			],
																			"id": 1420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1123:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1419,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1123:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1123:38:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1115:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 1417,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1115:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1115:47:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"hexValue": "30",
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1164:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 1429,
																"name": "payload",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1378,
																"src": "1167:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1410,
																	"name": "tokenBridge",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "1021:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ITokenBridge_$1962_$",
																		"typeString": "function () view returns (contract ITokenBridge)"
																	}
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1021:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ITokenBridge_$1962",
																	"typeString": "contract ITokenBridge"
																}
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1035:25:10",
															"memberName": "transferTokensWithPayload",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1723,
															"src": "1021:39:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint16_$_t_bytes32_$_t_uint32_$_t_bytes_memory_ptr_$returns$_t_uint64_$",
																"typeString": "function (address,uint256,uint16,bytes32,uint32,bytes memory) payable external returns (uint64)"
															}
														},
														"id": 1430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1021:163:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "1010:174:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1432,
												"nodeType": "ExpressionStatement",
												"src": "1010:174:10"
											}
										]
									},
									"id": 1434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendTokenBridgeMessage",
									"nameLocation": "668:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "assetAddress",
												"nameLocation": "699:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "691:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "assetAmount",
												"nameLocation": "721:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "713:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "713:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "747:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "734:20:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1377,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "734:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "690:65:10"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "797:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "790:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1380,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:17:10"
									},
									"scope": 1562,
									"src": "659:532:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "1308:183:10",
										"statements": [
											{
												"expression": {
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1443,
														"name": "sequence",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "1318:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1449,
																	"name": "hubChainId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "1401:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint16_$",
																		"typeString": "function () view returns (uint16)"
																	}
																},
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1401:12:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 1457,
																							"name": "hubContractAddress",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1225,
																							"src": "1439:18:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																								"typeString": "function () view returns (address)"
																							}
																						},
																						"id": 1458,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1439:20:10",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1456,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1431:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint160_$",
																						"typeString": "type(uint160)"
																					},
																					"typeName": {
																						"id": 1455,
																						"name": "uint160",
																						"nodeType": "ElementaryTypeName",
																						"src": "1431:7:10",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1431:29:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			],
																			"id": 1454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1423:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1453,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1423:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1423:38:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1415:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 1451,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1415:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1415:47:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"hexValue": "30",
																"id": 1462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1464:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 1463,
																"name": "payload",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1438,
																"src": "1467:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1444,
																		"name": "tokenBridge",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1188,
																		"src": "1329:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ITokenBridge_$1962_$",
																			"typeString": "function () view returns (contract ITokenBridge)"
																		}
																	},
																	"id": 1445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1329:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ITokenBridge_$1962",
																		"typeString": "contract ITokenBridge"
																	}
																},
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1343:29:10",
																"memberName": "wrapAndTransferETHWithPayload",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1689,
																"src": "1329:43:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_bytes32_$_t_uint32_$_t_bytes_memory_ptr_$returns$_t_uint64_$",
																	"typeString": "function (uint16,bytes32,uint32,bytes memory) payable external returns (uint64)"
																}
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"names": [
																"value"
															],
															"nodeType": "FunctionCallOptions",
															"options": [
																{
																	"id": 1447,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1436,
																	"src": "1380:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"src": "1329:58:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_bytes32_$_t_uint32_$_t_bytes_memory_ptr_$returns$_t_uint64_$value",
																"typeString": "function (uint16,bytes32,uint32,bytes memory) payable external returns (uint64)"
															}
														},
														"id": 1464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1329:155:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "1318:166:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1466,
												"nodeType": "ExpressionStatement",
												"src": "1318:166:10"
											}
										]
									},
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendTokenBridgeMessageNative",
									"nameLocation": "1206:28:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1243:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "1235:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "1264:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "1251:20:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1437,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1251:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:38:10"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1298:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "1291:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1440,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1291:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1290:17:10"
									},
									"scope": 1562,
									"src": "1197:294:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "1601:339:10",
										"statements": [
											{
												"assignments": [
													null,
													1476
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1476,
														"mutability": "mutable",
														"name": "queriedDecimals",
														"nameLocation": "1627:15:10",
														"nodeType": "VariableDeclaration",
														"scope": 1508,
														"src": "1614:28:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1475,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1614:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1484,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "646563696d616c732829",
																	"id": 1481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1694:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_313ce567add4d438edf58b94ff345d7d38c45b17dfc0f947988d7819dca364f9",
																		"typeString": "literal_string \"decimals()\""
																	},
																	"value": "decimals()"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_313ce567add4d438edf58b94ff345d7d38c45b17dfc0f947988d7819dca364f9",
																		"typeString": "literal_string \"decimals()\""
																	}
																],
																"expression": {
																	"id": 1479,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1670:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1674:19:10",
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "1670:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1670:37:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1477,
															"name": "assetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "1646:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1659:10:10",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "1646:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1646:62:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1611:97:10"
											},
											{
												"assignments": [
													1486
												],
												"declarations": [
													{
														"constant": false,
														"id": 1486,
														"mutability": "mutable",
														"name": "decimals",
														"nameLocation": "1724:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 1508,
														"src": "1718:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1485,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1718:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1494,
												"initialValue": {
													"arguments": [
														{
															"id": 1489,
															"name": "queriedDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "1746:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 1491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1764:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 1490,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "1764:5:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 1492,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1763:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															}
														],
														"expression": {
															"id": 1487,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "1735:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1739:6:10",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "1735:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1735:36:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1718:53:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1498,
																				"name": "assetAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1472,
																				"src": "1836:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1499,
																				"name": "decimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1486,
																				"src": "1849:8:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"id": 1497,
																			"name": "normalizeAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1535,
																			"src": "1820:15:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint8) pure returns (uint256)"
																			}
																		},
																		"id": 1500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1820:38:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1501,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1486,
																		"src": "1860:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1496,
																	"name": "deNormalizeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1561,
																	"src": "1802:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint8) pure returns (uint256)"
																	}
																},
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1802:67:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1503,
																"name": "assetAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1472,
																"src": "1873:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1802:82:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6f206d616e7920646563696d616c20706c61636573",
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1898:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f980939fccf74afb41aae851bf3fecac407639d4d59480a38f30e6ca14fe2c59",
																"typeString": "literal_string \"Too many decimal places\""
															},
															"value": "Too many decimal places"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f980939fccf74afb41aae851bf3fecac407639d4d59480a38f30e6ca14fe2c59",
																"typeString": "literal_string \"Too many decimal places\""
															}
														],
														"id": 1495,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1781:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1781:152:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1507,
												"nodeType": "ExpressionStatement",
												"src": "1781:152:10"
											}
										]
									},
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requireAssetAmountValidForTokenBridge",
									"nameLocation": "1506:37:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "assetAddress",
												"nameLocation": "1552:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "1544:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "assetAmount",
												"nameLocation": "1574:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "1566:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:43:10"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1601:0:10"
									},
									"scope": 1562,
									"src": "1497:443:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "2035:112:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1518,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1513,
														"src": "2049:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "38",
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2060:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "2049:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1531,
												"nodeType": "IfStatement",
												"src": "2045:73:10",
												"trueBody": {
													"id": 1530,
													"nodeType": "Block",
													"src": "2063:55:10",
													"statements": [
														{
															"expression": {
																"id": 1528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1521,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1511,
																	"src": "2077:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2087:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 1525,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1523,
																					"name": "decimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1513,
																					"src": "2094:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "38",
																					"id": 1524,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2105:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_8_by_1",
																						"typeString": "int_const 8"
																					},
																					"value": "8"
																				},
																				"src": "2094:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 1526,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2093:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "2087:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2077:30:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1529,
															"nodeType": "ExpressionStatement",
															"src": "2077:30:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1532,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1511,
													"src": "2134:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1517,
												"id": 1533,
												"nodeType": "Return",
												"src": "2127:13:10"
											}
										]
									},
									"id": 1535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "normalizeAmount",
									"nameLocation": "1955:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1979:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1971:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1971:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "1993:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1987:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1512,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1987:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1970:32:10"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2026:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:9:10"
									},
									"scope": 1562,
									"src": "1946:201:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1560,
										"nodeType": "Block",
										"src": "2244:112:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1544,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1539,
														"src": "2258:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "38",
														"id": 1545,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2269:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "2258:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1557,
												"nodeType": "IfStatement",
												"src": "2254:73:10",
												"trueBody": {
													"id": 1556,
													"nodeType": "Block",
													"src": "2272:55:10",
													"statements": [
														{
															"expression": {
																"id": 1554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1547,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1537,
																	"src": "2286:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "*=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2296:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 1551,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1549,
																					"name": "decimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1539,
																					"src": "2303:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "38",
																					"id": 1550,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2314:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_8_by_1",
																						"typeString": "int_const 8"
																					},
																					"value": "8"
																				},
																				"src": "2303:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 1552,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2302:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "2296:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2286:30:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1555,
															"nodeType": "ExpressionStatement",
															"src": "2286:30:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1558,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1537,
													"src": "2343:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1543,
												"id": 1559,
												"nodeType": "Return",
												"src": "2336:13:10"
											}
										]
									},
									"id": 1561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deNormalizeAmount",
									"nameLocation": "2162:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2188:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "2180:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2180:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "2202:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "2196:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1538,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2196:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:32:10"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "2235:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2235:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2234:9:10"
									},
									"scope": 1562,
									"src": "2153:203:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1563,
							"src": "338:2020:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:2320:10"
				},
				"id": 10
			},
			"example-2/evm/src/interfaces/ITokenBridge.sol": {
				"ast": {
					"absolutePath": "example-2/evm/src/interfaces/ITokenBridge.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"ITokenBridge": [
							1962
						],
						"IWETH": [
							1976
						],
						"IWormhole": [
							2098
						]
					},
					"id": 1963,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1564,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "62:23:11"
						},
						{
							"absolutePath": "example-2/evm/src/interfaces/IWETH.sol",
							"file": "./IWETH.sol",
							"id": 1565,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1963,
							"sourceUnit": 1977,
							"src": "87:21:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "example-2/evm/src/interfaces/IWormhole.sol",
							"file": "./IWormhole.sol",
							"id": 1566,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1963,
							"sourceUnit": 2099,
							"src": "109:25:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITokenBridge",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1962,
							"linearizedBaseContracts": [
								1962
							],
							"name": "ITokenBridge",
							"nameLocation": "146:12:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ITokenBridge.Transfer",
									"id": 1581,
									"members": [
										{
											"constant": false,
											"id": 1568,
											"mutability": "mutable",
											"name": "payloadID",
											"nameLocation": "197:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 1581,
											"src": "191:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1567,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "191:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1570,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "224:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1581,
											"src": "216:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1569,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "216:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1572,
											"mutability": "mutable",
											"name": "tokenAddress",
											"nameLocation": "248:12:11",
											"nodeType": "VariableDeclaration",
											"scope": 1581,
											"src": "240:20:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1571,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "240:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1574,
											"mutability": "mutable",
											"name": "tokenChain",
											"nameLocation": "277:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 1581,
											"src": "270:17:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1573,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "270:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1576,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "305:2:11",
											"nodeType": "VariableDeclaration",
											"scope": 1581,
											"src": "297:10:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1575,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "297:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1578,
											"mutability": "mutable",
											"name": "toChain",
											"nameLocation": "324:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 1581,
											"src": "317:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1577,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "317:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1580,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "349:3:11",
											"nodeType": "VariableDeclaration",
											"scope": 1581,
											"src": "341:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1579,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "341:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Transfer",
									"nameLocation": "172:8:11",
									"nodeType": "StructDefinition",
									"scope": 1962,
									"src": "165:194:11",
									"visibility": "public"
								},
								{
									"canonicalName": "ITokenBridge.TransferWithPayload",
									"id": 1598,
									"members": [
										{
											"constant": false,
											"id": 1583,
											"mutability": "mutable",
											"name": "payloadID",
											"nameLocation": "408:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 1598,
											"src": "402:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1582,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "402:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1585,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "435:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1598,
											"src": "427:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1584,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "427:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1587,
											"mutability": "mutable",
											"name": "tokenAddress",
											"nameLocation": "459:12:11",
											"nodeType": "VariableDeclaration",
											"scope": 1598,
											"src": "451:20:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1586,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "451:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1589,
											"mutability": "mutable",
											"name": "tokenChain",
											"nameLocation": "488:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 1598,
											"src": "481:17:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1588,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "481:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1591,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "516:2:11",
											"nodeType": "VariableDeclaration",
											"scope": 1598,
											"src": "508:10:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1590,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "508:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1593,
											"mutability": "mutable",
											"name": "toChain",
											"nameLocation": "535:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 1598,
											"src": "528:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1592,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "528:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1595,
											"mutability": "mutable",
											"name": "fromAddress",
											"nameLocation": "560:11:11",
											"nodeType": "VariableDeclaration",
											"scope": 1598,
											"src": "552:19:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1594,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "552:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1597,
											"mutability": "mutable",
											"name": "payload",
											"nameLocation": "587:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 1598,
											"src": "581:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1596,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "581:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TransferWithPayload",
									"nameLocation": "372:19:11",
									"nodeType": "StructDefinition",
									"scope": 1962,
									"src": "365:236:11",
									"visibility": "public"
								},
								{
									"canonicalName": "ITokenBridge.AssetMeta",
									"id": 1611,
									"members": [
										{
											"constant": false,
											"id": 1600,
											"mutability": "mutable",
											"name": "payloadID",
											"nameLocation": "640:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 1611,
											"src": "634:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1599,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "634:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1602,
											"mutability": "mutable",
											"name": "tokenAddress",
											"nameLocation": "667:12:11",
											"nodeType": "VariableDeclaration",
											"scope": 1611,
											"src": "659:20:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1601,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "659:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1604,
											"mutability": "mutable",
											"name": "tokenChain",
											"nameLocation": "696:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 1611,
											"src": "689:17:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1603,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "689:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1606,
											"mutability": "mutable",
											"name": "decimals",
											"nameLocation": "722:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 1611,
											"src": "716:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1605,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "716:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1608,
											"mutability": "mutable",
											"name": "symbol",
											"nameLocation": "748:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1611,
											"src": "740:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1607,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "740:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1610,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "772:4:11",
											"nodeType": "VariableDeclaration",
											"scope": 1611,
											"src": "764:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1609,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "764:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AssetMeta",
									"nameLocation": "614:9:11",
									"nodeType": "StructDefinition",
									"scope": 1962,
									"src": "607:176:11",
									"visibility": "public"
								},
								{
									"canonicalName": "ITokenBridge.RegisterChain",
									"id": 1622,
									"members": [
										{
											"constant": false,
											"id": 1613,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "828:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1622,
											"src": "820:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1612,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "820:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1615,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "850:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1622,
											"src": "844:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1614,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "844:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1617,
											"mutability": "mutable",
											"name": "chainId",
											"nameLocation": "873:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 1622,
											"src": "866:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1616,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "866:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1619,
											"mutability": "mutable",
											"name": "emitterChainID",
											"nameLocation": "898:14:11",
											"nodeType": "VariableDeclaration",
											"scope": 1622,
											"src": "891:21:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1618,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "891:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1621,
											"mutability": "mutable",
											"name": "emitterAddress",
											"nameLocation": "930:14:11",
											"nodeType": "VariableDeclaration",
											"scope": 1622,
											"src": "922:22:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1620,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "922:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RegisterChain",
									"nameLocation": "796:13:11",
									"nodeType": "StructDefinition",
									"scope": 1962,
									"src": "789:162:11",
									"visibility": "public"
								},
								{
									"canonicalName": "ITokenBridge.UpgradeContract",
									"id": 1631,
									"members": [
										{
											"constant": false,
											"id": 1624,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "999:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1631,
											"src": "991:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1623,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "991:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1626,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "1021:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1631,
											"src": "1015:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1625,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1015:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1628,
											"mutability": "mutable",
											"name": "chainId",
											"nameLocation": "1044:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 1631,
											"src": "1037:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1627,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "1037:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1630,
											"mutability": "mutable",
											"name": "newContract",
											"nameLocation": "1070:11:11",
											"nodeType": "VariableDeclaration",
											"scope": 1631,
											"src": "1062:19:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1629,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1062:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UpgradeContract",
									"nameLocation": "965:15:11",
									"nodeType": "StructDefinition",
									"scope": 1962,
									"src": "958:130:11",
									"visibility": "public"
								},
								{
									"canonicalName": "ITokenBridge.RecoverChainId",
									"id": 1640,
									"members": [
										{
											"constant": false,
											"id": 1633,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "1134:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1640,
											"src": "1126:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1632,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1126:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1635,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "1156:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1640,
											"src": "1150:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1634,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1150:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1637,
											"mutability": "mutable",
											"name": "evmChainId",
											"nameLocation": "1181:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 1640,
											"src": "1173:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1636,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1173:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1639,
											"mutability": "mutable",
											"name": "newChainId",
											"nameLocation": "1208:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 1640,
											"src": "1201:17:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1638,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "1201:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RecoverChainId",
									"nameLocation": "1101:14:11",
									"nodeType": "StructDefinition",
									"scope": 1962,
									"src": "1094:131:11",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "2e4cc16c100f0b55e2df82ab0b1a7e294aa9cbd01b48fbaf622683fbc0507a49",
									"id": 1646,
									"name": "ContractUpgraded",
									"nameLocation": "1237:16:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldContract",
												"nameLocation": "1270:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "1254:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"indexed": true,
												"mutability": "mutable",
												"name": "newContract",
												"nameLocation": "1299:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "1283:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:58:11"
									},
									"src": "1231:81:11"
								},
								{
									"functionSelector": "e89bc401",
									"id": 1654,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_parseTransferCommon",
									"nameLocation": "1327:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "1361:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "1348:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1647,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1348:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1347:22:11"
									},
									"returnParameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "transfer",
												"nameLocation": "1409:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "1393:24:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Transfer_$1581_memory_ptr",
													"typeString": "struct ITokenBridge.Transfer"
												},
												"typeName": {
													"id": 1651,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1650,
														"name": "Transfer",
														"nameLocations": [
															"1393:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1581,
														"src": "1393:8:11"
													},
													"referencedDeclaration": 1581,
													"src": "1393:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Transfer_$1581_storage_ptr",
														"typeString": "struct ITokenBridge.Transfer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:26:11"
									},
									"scope": 1962,
									"src": "1318:101:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c48fa115",
									"id": 1663,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "attestToken",
									"nameLocation": "1434:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "1454:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "1446:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1446:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1475:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "1468:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1657,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1468:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1445:36:11"
									},
									"returnParameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1515:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "1508:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1660,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1508:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1507:17:11"
									},
									"scope": 1962,
									"src": "1425:100:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9981509f",
									"id": 1676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "wrapAndTransferETH",
									"nameLocation": "1540:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "recipientChain",
												"nameLocation": "1566:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "1559:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1664,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1559:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1590:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "1582:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1666,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "arbiterFee",
												"nameLocation": "1609:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "1601:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1601:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1628:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "1621:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1670,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1621:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1558:76:11"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1668:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "1661:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1673,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1661:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:17:11"
									},
									"scope": 1962,
									"src": "1531:147:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bee9cdfc",
									"id": 1689,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "wrapAndTransferETHWithPayload",
									"nameLocation": "1693:29:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "recipientChain",
												"nameLocation": "1730:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "1723:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1677,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1723:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1754:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "1746:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1679,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1746:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1772:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "1765:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1681,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1765:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "1792:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "1779:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1779:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1722:78:11"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1834:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "1827:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1686,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1827:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:17:11"
									},
									"scope": 1962,
									"src": "1684:160:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0f5287b0",
									"id": 1706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokens",
									"nameLocation": "1859:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1882:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "1874:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1897:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "1889:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1889:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "recipientChain",
												"nameLocation": "1912:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "1905:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1694,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1905:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1936:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "1928:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1696,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "arbiterFee",
												"nameLocation": "1955:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "1947:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1947:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1974:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "1967:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1700,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1967:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1873:107:11"
									},
									"returnParameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "2014:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "2007:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1703,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2007:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2006:17:11"
									},
									"scope": 1962,
									"src": "1850:174:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c5a5ebda",
									"id": 1723,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokensWithPayload",
									"nameLocation": "2039:25:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2073:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "2065:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2065:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2088:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "2080:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2080:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "recipientChain",
												"nameLocation": "2103:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "2096:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1711,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2096:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2127:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "2119:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1713,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2119:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "2145:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "2138:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1715,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2138:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "2165:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "2152:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1717,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2152:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:109:11"
									},
									"returnParameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "2207:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "2200:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1720,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2200:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2199:17:11"
									},
									"scope": 1962,
									"src": "2030:187:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f768441f",
									"id": 1730,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateWrapped",
									"nameLocation": "2232:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "encodedVm",
												"nameLocation": "2259:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "2246:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1724,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2246:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2245:24:11"
									},
									"returnParameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2296:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "2288:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2288:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2287:15:11"
									},
									"scope": 1962,
									"src": "2223:80:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8059810",
									"id": 1737,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createWrapped",
									"nameLocation": "2318:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "encodedVm",
												"nameLocation": "2345:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "2332:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1731,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2332:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:24:11"
									},
									"returnParameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2382:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "2374:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2374:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2373:15:11"
									},
									"scope": 1962,
									"src": "2309:80:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c3f511c1",
									"id": 1744,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "completeTransferWithPayload",
									"nameLocation": "2404:27:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "encodedVm",
												"nameLocation": "2445:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "2432:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1738,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2432:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2431:24:11"
									},
									"returnParameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "2474:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1741,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2474:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2473:14:11"
									},
									"scope": 1962,
									"src": "2395:93:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1c8475e4",
									"id": 1751,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "completeTransferAndUnwrapETHWithPayload",
									"nameLocation": "2503:39:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "encodedVm",
												"nameLocation": "2556:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "2543:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1745,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2543:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2542:24:11"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "2585:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1748,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2585:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2584:14:11"
									},
									"scope": 1962,
									"src": "2494:105:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c6878519",
									"id": 1756,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "completeTransfer",
									"nameLocation": "2614:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "encodedVm",
												"nameLocation": "2644:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "2631:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1752,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2631:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2630:24:11"
									},
									"returnParameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2663:0:11"
									},
									"scope": 1962,
									"src": "2605:59:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ff200cde",
									"id": 1761,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "completeTransferAndUnwrapETH",
									"nameLocation": "2679:28:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "encodedVm",
												"nameLocation": "2721:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "2708:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1757,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2708:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2707:24:11"
									},
									"returnParameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2740:0:11"
									},
									"scope": 1962,
									"src": "2670:71:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b046223b",
									"id": 1769,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "encodeAssetMeta",
									"nameLocation": "2756:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "meta",
												"nameLocation": "2789:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "2772:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AssetMeta_$1611_memory_ptr",
													"typeString": "struct ITokenBridge.AssetMeta"
												},
												"typeName": {
													"id": 1763,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1762,
														"name": "AssetMeta",
														"nameLocations": [
															"2772:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1611,
														"src": "2772:9:11"
													},
													"referencedDeclaration": 1611,
													"src": "2772:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AssetMeta_$1611_storage_ptr",
														"typeString": "struct ITokenBridge.AssetMeta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:23:11"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "2831:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "2818:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1766,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2818:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2817:22:11"
									},
									"scope": 1962,
									"src": "2747:93:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5f854266",
									"id": 1777,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "encodeTransfer",
									"nameLocation": "2855:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "transfer",
												"nameLocation": "2886:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "2870:24:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Transfer_$1581_memory_ptr",
													"typeString": "struct ITokenBridge.Transfer"
												},
												"typeName": {
													"id": 1771,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1770,
														"name": "Transfer",
														"nameLocations": [
															"2870:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1581,
														"src": "2870:8:11"
													},
													"referencedDeclaration": 1581,
													"src": "2870:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Transfer_$1581_storage_ptr",
														"typeString": "struct ITokenBridge.Transfer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2869:26:11"
									},
									"returnParameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "2932:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "2919:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1774,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2919:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2918:22:11"
									},
									"scope": 1962,
									"src": "2846:95:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d56e2e24",
									"id": 1785,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "encodeTransferWithPayload",
									"nameLocation": "2956:25:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "transfer",
												"nameLocation": "3009:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "2982:35:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TransferWithPayload_$1598_memory_ptr",
													"typeString": "struct ITokenBridge.TransferWithPayload"
												},
												"typeName": {
													"id": 1779,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1778,
														"name": "TransferWithPayload",
														"nameLocations": [
															"2982:19:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1598,
														"src": "2982:19:11"
													},
													"referencedDeclaration": 1598,
													"src": "2982:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TransferWithPayload_$1598_storage_ptr",
														"typeString": "struct ITokenBridge.TransferWithPayload"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2981:37:11"
									},
									"returnParameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "3055:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "3042:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1782,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3042:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3041:22:11"
									},
									"scope": 1962,
									"src": "2947:117:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0f509008",
									"id": 1792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parsePayloadID",
									"nameLocation": "3079:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "3107:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "3094:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1786,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3094:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3093:22:11"
									},
									"returnParameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "payloadID",
												"nameLocation": "3145:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "3139:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1789,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3139:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3138:17:11"
									},
									"scope": 1962,
									"src": "3070:86:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "07dfd8fb",
									"id": 1800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseAssetMeta",
									"nameLocation": "3171:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "3199:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "3186:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3186:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3185:22:11"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "meta",
												"nameLocation": "3248:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "3231:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AssetMeta_$1611_memory_ptr",
													"typeString": "struct ITokenBridge.AssetMeta"
												},
												"typeName": {
													"id": 1797,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1796,
														"name": "AssetMeta",
														"nameLocations": [
															"3231:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1611,
														"src": "3231:9:11"
													},
													"referencedDeclaration": 1611,
													"src": "3231:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AssetMeta_$1611_storage_ptr",
														"typeString": "struct ITokenBridge.AssetMeta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3230:23:11"
									},
									"scope": 1962,
									"src": "3162:92:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2b511375",
									"id": 1808,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseTransfer",
									"nameLocation": "3269:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "3296:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "3283:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1801,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3283:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3282:22:11"
									},
									"returnParameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "transfer",
												"nameLocation": "3344:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "3328:24:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Transfer_$1581_memory_ptr",
													"typeString": "struct ITokenBridge.Transfer"
												},
												"typeName": {
													"id": 1805,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1804,
														"name": "Transfer",
														"nameLocations": [
															"3328:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1581,
														"src": "3328:8:11"
													},
													"referencedDeclaration": 1581,
													"src": "3328:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Transfer_$1581_storage_ptr",
														"typeString": "struct ITokenBridge.Transfer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3327:26:11"
									},
									"scope": 1962,
									"src": "3260:94:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ea63738d",
									"id": 1816,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseTransferWithPayload",
									"nameLocation": "3369:24:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "3407:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "3394:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1809,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3394:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3393:22:11"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "transfer",
												"nameLocation": "3466:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "3439:35:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TransferWithPayload_$1598_memory_ptr",
													"typeString": "struct ITokenBridge.TransferWithPayload"
												},
												"typeName": {
													"id": 1813,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1812,
														"name": "TransferWithPayload",
														"nameLocations": [
															"3439:19:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1598,
														"src": "3439:19:11"
													},
													"referencedDeclaration": 1598,
													"src": "3439:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TransferWithPayload_$1598_storage_ptr",
														"typeString": "struct ITokenBridge.TransferWithPayload"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3438:37:11"
									},
									"scope": 1962,
									"src": "3360:116:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2c3c02a4",
									"id": 1823,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governanceActionIsConsumed",
									"nameLocation": "3491:26:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3526:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "3518:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1817,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:14:11"
									},
									"returnParameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "3555:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1820,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3555:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3554:6:11"
									},
									"scope": 1962,
									"src": "3482:79:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d60b347f",
									"id": 1830,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isInitialized",
									"nameLocation": "3576:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "impl",
												"nameLocation": "3598:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "3590:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3590:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3589:14:11"
									},
									"returnParameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "3627:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3627:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3626:6:11"
									},
									"scope": 1962,
									"src": "3567:66:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aa4efa5b",
									"id": 1837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isTransferCompleted",
									"nameLocation": "3648:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3676:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "3668:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1831,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3668:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3667:14:11"
									},
									"returnParameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "3705:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1834,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3705:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3704:6:11"
									},
									"scope": 1962,
									"src": "3639:72:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "84acd1bb",
									"id": 1843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "wormhole",
									"nameLocation": "3726:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3734:2:11"
									},
									"returnParameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "3760:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IWormhole_$2098",
													"typeString": "contract IWormhole"
												},
												"typeName": {
													"id": 1840,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1839,
														"name": "IWormhole",
														"nameLocations": [
															"3760:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2098,
														"src": "3760:9:11"
													},
													"referencedDeclaration": 2098,
													"src": "3760:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWormhole_$2098",
														"typeString": "contract IWormhole"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:11:11"
									},
									"scope": 1962,
									"src": "3717:54:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a8a0592",
									"id": 1848,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "chainId",
									"nameLocation": "3786:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:2:11"
									},
									"returnParameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "3819:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1845,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3819:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:8:11"
									},
									"scope": 1962,
									"src": "3777:50:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "64d42b17",
									"id": 1853,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "evmChainId",
									"nameLocation": "3842:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3852:2:11"
									},
									"returnParameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "3878:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3878:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3877:9:11"
									},
									"scope": 1962,
									"src": "3833:54:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e039f224",
									"id": 1858,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isFork",
									"nameLocation": "3902:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3908:2:11"
									},
									"returnParameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "3934:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1855,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3934:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3933:6:11"
									},
									"scope": 1962,
									"src": "3893:47:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fbe3c2cd",
									"id": 1863,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governanceChainId",
									"nameLocation": "3955:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3972:2:11"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "3998:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1860,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3998:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3997:8:11"
									},
									"scope": 1962,
									"src": "3946:60:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b172b222",
									"id": 1868,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governanceContract",
									"nameLocation": "4021:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4039:2:11"
									},
									"returnParameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "4065:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1865,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4065:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4064:9:11"
									},
									"scope": 1962,
									"src": "4012:62:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1ff1e286",
									"id": 1877,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "wrappedAsset",
									"nameLocation": "4089:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "tokenChainId",
												"nameLocation": "4109:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "4102:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1869,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4102:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "4131:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "4123:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1871,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4123:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4101:43:11"
									},
									"returnParameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "4168:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:9:11"
									},
									"scope": 1962,
									"src": "4080:97:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad66a5f1",
									"id": 1884,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bridgeContracts",
									"nameLocation": "4192:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "chainId_",
												"nameLocation": "4215:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "4208:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1878,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4208:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4207:17:11"
									},
									"returnParameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "4248:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1881,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4248:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4247:9:11"
									},
									"scope": 1962,
									"src": "4183:74:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2f3a3d5d",
									"id": 1889,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenImplementation",
									"nameLocation": "4272:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4291:2:11"
									},
									"returnParameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "4317:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4317:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4316:9:11"
									},
									"scope": 1962,
									"src": "4263:63:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1895,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "4341:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4345:2:11"
									},
									"returnParameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "4371:5:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IWETH_$1976",
													"typeString": "contract IWETH"
												},
												"typeName": {
													"id": 1892,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1891,
														"name": "IWETH",
														"nameLocations": [
															"4371:5:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1976,
														"src": "4371:5:11"
													},
													"referencedDeclaration": 1976,
													"src": "4371:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWETH_$1976",
														"typeString": "contract IWETH"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4370:7:11"
									},
									"scope": 1962,
									"src": "4332:46:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b96c7e4d",
									"id": 1902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "outstandingBridged",
									"nameLocation": "4393:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4420:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "4412:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:15:11"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "4450:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:9:11"
									},
									"scope": 1962,
									"src": "4384:75:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1a2be4da",
									"id": 1909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isWrappedAsset",
									"nameLocation": "4474:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4497:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "4489:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4489:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:15:11"
									},
									"returnParameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "4527:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4527:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4526:6:11"
									},
									"scope": 1962,
									"src": "4465:68:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "739fc8d1",
									"id": 1914,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "finality",
									"nameLocation": "4548:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4556:2:11"
									},
									"returnParameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "4582:5:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1911,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4582:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4581:7:11"
									},
									"scope": 1962,
									"src": "4539:50:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c60da1b",
									"id": 1919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "4604:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4618:2:11"
									},
									"returnParameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "4644:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4643:9:11"
									},
									"scope": 1962,
									"src": "4595:58:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8129fc1c",
									"id": 1922,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "4668:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4678:2:11"
									},
									"returnParameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4689:0:11"
									},
									"scope": 1962,
									"src": "4659:31:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a5799f93",
									"id": 1927,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerChain",
									"nameLocation": "4705:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "encodedVM",
												"nameLocation": "4732:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "4719:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1923,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4719:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4718:24:11"
									},
									"returnParameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4751:0:11"
									},
									"scope": 1962,
									"src": "4696:56:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "25394645",
									"id": 1932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "upgrade",
									"nameLocation": "4767:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "encodedVM",
												"nameLocation": "4788:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "4775:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1928,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4775:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4774:24:11"
									},
									"returnParameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4807:0:11"
									},
									"scope": 1962,
									"src": "4758:50:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "178149e7",
									"id": 1937,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitRecoverChainId",
									"nameLocation": "4823:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "encodedVM",
												"nameLocation": "4857:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1937,
												"src": "4844:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1933,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4844:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:24:11"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4876:0:11"
									},
									"scope": 1962,
									"src": "4814:63:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "01f53255",
									"id": 1945,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseRegisterChain",
									"nameLocation": "4892:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "4924:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "4911:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1938,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4911:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4910:22:11"
									},
									"returnParameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "chain",
												"nameLocation": "4977:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "4956:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RegisterChain_$1622_memory_ptr",
													"typeString": "struct ITokenBridge.RegisterChain"
												},
												"typeName": {
													"id": 1942,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1941,
														"name": "RegisterChain",
														"nameLocations": [
															"4956:13:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1622,
														"src": "4956:13:11"
													},
													"referencedDeclaration": 1622,
													"src": "4956:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RegisterChain_$1622_storage_ptr",
														"typeString": "struct ITokenBridge.RegisterChain"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4955:28:11"
									},
									"scope": 1962,
									"src": "4883:101:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fbeeacd9",
									"id": 1953,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseUpgrade",
									"nameLocation": "4999:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "5025:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "5012:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1946,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5011:22:11"
									},
									"returnParameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "chain",
												"nameLocation": "5080:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "5057:28:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UpgradeContract_$1631_memory_ptr",
													"typeString": "struct ITokenBridge.UpgradeContract"
												},
												"typeName": {
													"id": 1950,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1949,
														"name": "UpgradeContract",
														"nameLocations": [
															"5057:15:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1631,
														"src": "5057:15:11"
													},
													"referencedDeclaration": 1631,
													"src": "5057:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UpgradeContract_$1631_storage_ptr",
														"typeString": "struct ITokenBridge.UpgradeContract"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5056:30:11"
									},
									"scope": 1962,
									"src": "4990:97:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cb4cfea8",
									"id": 1961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseRecoverChainId",
									"nameLocation": "5102:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "encodedRecoverChainId",
												"nameLocation": "5135:21:11",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "5122:34:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1954,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5122:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5121:36:11"
									},
									"returnParameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "rci",
												"nameLocation": "5203:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "5181:25:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RecoverChainId_$1640_memory_ptr",
													"typeString": "struct ITokenBridge.RecoverChainId"
												},
												"typeName": {
													"id": 1958,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1957,
														"name": "RecoverChainId",
														"nameLocations": [
															"5181:14:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1640,
														"src": "5181:14:11"
													},
													"referencedDeclaration": 1640,
													"src": "5181:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RecoverChainId_$1640_storage_ptr",
														"typeString": "struct ITokenBridge.RecoverChainId"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5180:27:11"
									},
									"scope": 1962,
									"src": "5093:115:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1963,
							"src": "136:5074:11",
							"usedErrors": [],
							"usedEvents": [
								1646
							]
						}
					],
					"src": "62:5148:11"
				},
				"id": 11
			},
			"example-2/evm/src/interfaces/IWETH.sol": {
				"ast": {
					"absolutePath": "example-2/evm/src/interfaces/IWETH.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IWETH": [
							1976
						]
					},
					"id": 1977,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1964,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "62:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1965,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1977,
							"sourceUnit": 78,
							"src": "87:56:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1966,
										"name": "IERC20",
										"nameLocations": [
											"164:6:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "164:6:12"
									},
									"id": 1967,
									"nodeType": "InheritanceSpecifier",
									"src": "164:6:12"
								}
							],
							"canonicalName": "IWETH",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1976,
							"linearizedBaseContracts": [
								1976,
								77
							],
							"name": "IWETH",
							"nameLocation": "155:5:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 1970,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "186:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "193:2:12"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "212:0:12"
									},
									"scope": 1976,
									"src": "177:36:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 1975,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "227:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "241:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "236:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1971,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "236:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "235:13:12"
									},
									"returnParameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "257:0:12"
									},
									"scope": 1976,
									"src": "218:40:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1977,
							"src": "145:115:12",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "62:198:12"
				},
				"id": 12
			},
			"example-2/evm/src/interfaces/IWormhole.sol": {
				"ast": {
					"absolutePath": "example-2/evm/src/interfaces/IWormhole.sol",
					"exportedSymbols": {
						"IWormhole": [
							2098
						]
					},
					"id": 2099,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1978,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "64:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWormhole",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2098,
							"linearizedBaseContracts": [
								2098
							],
							"name": "IWormhole",
							"nameLocation": "99:9:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IWormhole.Signature",
									"id": 1987,
									"members": [
										{
											"constant": false,
											"id": 1980,
											"mutability": "mutable",
											"name": "r",
											"nameLocation": "150:1:13",
											"nodeType": "VariableDeclaration",
											"scope": 1987,
											"src": "142:9:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1979,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "142:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1982,
											"mutability": "mutable",
											"name": "s",
											"nameLocation": "169:1:13",
											"nodeType": "VariableDeclaration",
											"scope": 1987,
											"src": "161:9:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1981,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "161:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1984,
											"mutability": "mutable",
											"name": "v",
											"nameLocation": "186:1:13",
											"nodeType": "VariableDeclaration",
											"scope": 1987,
											"src": "180:7:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1983,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "180:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1986,
											"mutability": "mutable",
											"name": "guardianIndex",
											"nameLocation": "203:13:13",
											"nodeType": "VariableDeclaration",
											"scope": 1987,
											"src": "197:19:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1985,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "197:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Signature",
									"nameLocation": "122:9:13",
									"nodeType": "StructDefinition",
									"scope": 2098,
									"src": "115:108:13",
									"visibility": "public"
								},
								{
									"canonicalName": "IWormhole.VM",
									"id": 2012,
									"members": [
										{
											"constant": false,
											"id": 1989,
											"mutability": "mutable",
											"name": "version",
											"nameLocation": "255:7:13",
											"nodeType": "VariableDeclaration",
											"scope": 2012,
											"src": "249:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1988,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "249:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1991,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "279:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 2012,
											"src": "272:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1990,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "272:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1993,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "305:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 2012,
											"src": "298:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1992,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "298:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1995,
											"mutability": "mutable",
											"name": "emitterChainId",
											"nameLocation": "327:14:13",
											"nodeType": "VariableDeclaration",
											"scope": 2012,
											"src": "320:21:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1994,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "320:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1997,
											"mutability": "mutable",
											"name": "emitterAddress",
											"nameLocation": "359:14:13",
											"nodeType": "VariableDeclaration",
											"scope": 2012,
											"src": "351:22:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1996,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "351:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1999,
											"mutability": "mutable",
											"name": "sequence",
											"nameLocation": "390:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 2012,
											"src": "383:15:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1998,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "383:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2001,
											"mutability": "mutable",
											"name": "consistencyLevel",
											"nameLocation": "414:16:13",
											"nodeType": "VariableDeclaration",
											"scope": 2012,
											"src": "408:22:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2000,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "408:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2003,
											"mutability": "mutable",
											"name": "payload",
											"nameLocation": "446:7:13",
											"nodeType": "VariableDeclaration",
											"scope": 2012,
											"src": "440:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2002,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "440:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2005,
											"mutability": "mutable",
											"name": "guardianSetIndex",
											"nameLocation": "470:16:13",
											"nodeType": "VariableDeclaration",
											"scope": 2012,
											"src": "463:23:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2004,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "463:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2009,
											"mutability": "mutable",
											"name": "signatures",
											"nameLocation": "508:10:13",
											"nodeType": "VariableDeclaration",
											"scope": 2012,
											"src": "496:22:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Signature_$1987_storage_$dyn_storage_ptr",
												"typeString": "struct IWormhole.Signature[]"
											},
											"typeName": {
												"baseType": {
													"id": 2007,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2006,
														"name": "Signature",
														"nameLocations": [
															"496:9:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1987,
														"src": "496:9:13"
													},
													"referencedDeclaration": 1987,
													"src": "496:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Signature_$1987_storage_ptr",
														"typeString": "struct IWormhole.Signature"
													}
												},
												"id": 2008,
												"nodeType": "ArrayTypeName",
												"src": "496:11:13",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Signature_$1987_storage_$dyn_storage_ptr",
													"typeString": "struct IWormhole.Signature[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2011,
											"mutability": "mutable",
											"name": "hash",
											"nameLocation": "536:4:13",
											"nodeType": "VariableDeclaration",
											"scope": 2012,
											"src": "528:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2010,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "528:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "VM",
									"nameLocation": "236:2:13",
									"nodeType": "StructDefinition",
									"scope": 2098,
									"src": "229:318:13",
									"visibility": "public"
								},
								{
									"canonicalName": "IWormhole.WormholeBodyParams",
									"id": 2025,
									"members": [
										{
											"constant": false,
											"id": 2014,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "596:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 2025,
											"src": "589:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2013,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "589:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2016,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "622:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 2025,
											"src": "615:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2015,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "615:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2018,
											"mutability": "mutable",
											"name": "emitterChainId",
											"nameLocation": "644:14:13",
											"nodeType": "VariableDeclaration",
											"scope": 2025,
											"src": "637:21:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2017,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "637:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2020,
											"mutability": "mutable",
											"name": "emitterAddress",
											"nameLocation": "676:14:13",
											"nodeType": "VariableDeclaration",
											"scope": 2025,
											"src": "668:22:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2019,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "668:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2022,
											"mutability": "mutable",
											"name": "sequence",
											"nameLocation": "707:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 2025,
											"src": "700:15:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2021,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "700:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2024,
											"mutability": "mutable",
											"name": "consistencyLevel",
											"nameLocation": "731:16:13",
											"nodeType": "VariableDeclaration",
											"scope": 2025,
											"src": "725:22:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2023,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "725:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "WormholeBodyParams",
									"nameLocation": "560:18:13",
									"nodeType": "StructDefinition",
									"scope": 2098,
									"src": "553:201:13",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "6eb224fb001ed210e379b335e35efe88672a8ce935d981a6896b27ffdf52a3b2",
									"id": 2037,
									"name": "LogMessagePublished",
									"nameLocation": "766:19:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "811:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "795:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2029,
												"indexed": false,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "826:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "819:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2028,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2031,
												"indexed": false,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "843:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "836:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2030,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "836:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2033,
												"indexed": false,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "856:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "850:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2032,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "850:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2035,
												"indexed": false,
												"mutability": "mutable",
												"name": "consistencyLevel",
												"nameLocation": "871:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "865:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2034,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "865:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "785:108:13"
									},
									"src": "760:134:13"
								},
								{
									"functionSelector": "b19a437e",
									"id": 2048,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "publishMessage",
									"nameLocation": "909:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "931:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "924:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2038,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "924:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "951:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "938:20:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2040,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "938:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "consistencyLevel",
												"nameLocation": "966:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "960:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2042,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "960:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:60:13"
									},
									"returnParameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1041:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "1034:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2045,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1034:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1033:17:13"
									},
									"scope": 2098,
									"src": "900:151:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c0fd8bde",
									"id": 2060,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseAndVerifyVM",
									"nameLocation": "1066:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "encodedVM",
												"nameLocation": "1098:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "1083:24:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2049,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1083:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1082:26:13"
									},
									"returnParameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "vm",
												"nameLocation": "1166:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "1156:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VM_$2012_memory_ptr",
													"typeString": "struct IWormhole.VM"
												},
												"typeName": {
													"id": 2053,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2052,
														"name": "VM",
														"nameLocations": [
															"1156:2:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2012,
														"src": "1156:2:13"
													},
													"referencedDeclaration": 2012,
													"src": "1156:2:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VM_$2012_storage_ptr",
														"typeString": "struct IWormhole.VM"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "valid",
												"nameLocation": "1175:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "1170:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2055,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "1196:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "1182:20:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2057,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1182:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1155:48:13"
									},
									"scope": 2098,
									"src": "1057:147:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a8a0592",
									"id": 2065,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "chainId",
									"nameLocation": "1219:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:13"
									},
									"returnParameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2065,
												"src": "1252:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2062,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1252:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1251:8:13"
									},
									"scope": 2098,
									"src": "1210:50:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1a90a219",
									"id": 2070,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "messageFee",
									"nameLocation": "1275:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1285:2:13"
									},
									"returnParameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "1311:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1310:9:13"
									},
									"scope": 2098,
									"src": "1266:54:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1cfe7951",
									"id": 2075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentGuardianSetIndex",
									"nameLocation": "1378:26:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:2:13"
									},
									"returnParameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "1430:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2072,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1430:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1429:8:13"
									},
									"scope": 2098,
									"src": "1369:69:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IWormhole.GuardianSet",
									"id": 2081,
									"members": [
										{
											"constant": false,
											"id": 2078,
											"mutability": "mutable",
											"name": "keys",
											"nameLocation": "1483:4:13",
											"nodeType": "VariableDeclaration",
											"scope": 2081,
											"src": "1473:14:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 2076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1473:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2077,
												"nodeType": "ArrayTypeName",
												"src": "1473:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2080,
											"mutability": "mutable",
											"name": "expirationTime",
											"nameLocation": "1504:14:13",
											"nodeType": "VariableDeclaration",
											"scope": 2081,
											"src": "1497:21:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2079,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "1497:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "GuardianSet",
									"nameLocation": "1451:11:13",
									"nodeType": "StructDefinition",
									"scope": 2098,
									"src": "1444:81:13",
									"visibility": "public"
								},
								{
									"functionSelector": "f951975a",
									"id": 2089,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getGuardianSet",
									"nameLocation": "1540:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "guardianSetIndex",
												"nameLocation": "1562:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "1555:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2082,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1555:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1554:25:13"
									},
									"returnParameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "guardians",
												"nameLocation": "1622:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "1603:28:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_GuardianSet_$2081_memory_ptr",
													"typeString": "struct IWormhole.GuardianSet"
												},
												"typeName": {
													"id": 2086,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2085,
														"name": "GuardianSet",
														"nameLocations": [
															"1603:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2081,
														"src": "1603:11:13"
													},
													"referencedDeclaration": 2081,
													"src": "1603:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_GuardianSet_$2081_storage_ptr",
														"typeString": "struct IWormhole.GuardianSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1602:30:13"
									},
									"scope": 2098,
									"src": "1531:102:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9e11893",
									"id": 2097,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseVM",
									"nameLocation": "1648:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "encodedVM",
												"nameLocation": "1669:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "1656:22:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2090,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1656:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1655:24:13"
									},
									"returnParameters": {
										"id": 2096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "vm",
												"nameLocation": "1713:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "1703:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VM_$2012_memory_ptr",
													"typeString": "struct IWormhole.VM"
												},
												"typeName": {
													"id": 2094,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2093,
														"name": "VM",
														"nameLocations": [
															"1703:2:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2012,
														"src": "1703:2:13"
													},
													"referencedDeclaration": 2012,
													"src": "1703:2:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VM_$2012_storage_ptr",
														"typeString": "struct IWormhole.VM"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1702:14:13"
									},
									"scope": 2098,
									"src": "1639:78:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2099,
							"src": "89:1630:13",
							"usedErrors": [],
							"usedEvents": [
								2037
							]
						}
					],
					"src": "64:1656:13"
				},
				"id": 13
			},
			"example-2/evm/src/libraries/external/BytesLib.sol": {
				"ast": {
					"absolutePath": "example-2/evm/src/libraries/external/BytesLib.sol",
					"exportedSymbols": {
						"BytesLib": [
							2431
						]
					},
					"id": 2432,
					"license": "Unlicense",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2100,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "336:31:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BytesLib",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2431,
							"linearizedBaseContracts": [
								2431
							],
							"name": "BytesLib",
							"nameLocation": "378:8:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2115,
										"nodeType": "Block",
										"src": "545:2803:14",
										"statements": [
											{
												"assignments": [
													2110
												],
												"declarations": [
													{
														"constant": false,
														"id": 2110,
														"mutability": "mutable",
														"name": "tempBytes",
														"nameLocation": "568:9:14",
														"nodeType": "VariableDeclaration",
														"scope": 2115,
														"src": "555:22:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2109,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "555:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2111,
												"nodeType": "VariableDeclarationStatement",
												"src": "555:22:14"
											},
											{
												"AST": {
													"nativeSrc": "597:2718:14",
													"nodeType": "YulBlock",
													"src": "597:2718:14",
													"statements": [
														{
															"nativeSrc": "741:24:14",
															"nodeType": "YulAssignment",
															"src": "741:24:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "760:4:14",
																		"nodeType": "YulLiteral",
																		"src": "760:4:14",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "754:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "754:5:14"
																},
																"nativeSrc": "754:11:14",
																"nodeType": "YulFunctionCall",
																"src": "754:11:14"
															},
															"variableNames": [
																{
																	"name": "tempBytes",
																	"nativeSrc": "741:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "741:9:14"
																}
															]
														},
														{
															"nativeSrc": "897:30:14",
															"nodeType": "YulVariableDeclaration",
															"src": "897:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "_preBytes",
																		"nativeSrc": "917:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "917:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "911:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "911:5:14"
																},
																"nativeSrc": "911:16:14",
																"nodeType": "YulFunctionCall",
																"src": "911:16:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "901:6:14",
																	"nodeType": "YulTypedName",
																	"src": "901:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tempBytes",
																		"nativeSrc": "947:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "947:9:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "958:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "958:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "940:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "940:6:14"
																},
																"nativeSrc": "940:25:14",
																"nodeType": "YulFunctionCall",
																"src": "940:25:14"
															},
															"nativeSrc": "940:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "940:25:14"
														},
														{
															"nativeSrc": "1175:30:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1175:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "tempBytes",
																		"nativeSrc": "1189:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1189:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1200:4:14",
																		"nodeType": "YulLiteral",
																		"src": "1200:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1185:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1185:3:14"
																},
																"nativeSrc": "1185:20:14",
																"nodeType": "YulFunctionCall",
																"src": "1185:20:14"
															},
															"variables": [
																{
																	"name": "mc",
																	"nativeSrc": "1179:2:14",
																	"nodeType": "YulTypedName",
																	"src": "1179:2:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1330:26:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1330:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "mc",
																		"nativeSrc": "1345:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "1345:2:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1349:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1349:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1341:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1341:3:14"
																},
																"nativeSrc": "1341:15:14",
																"nodeType": "YulFunctionCall",
																"src": "1341:15:14"
															},
															"variables": [
																{
																	"name": "end",
																	"nativeSrc": "1334:3:14",
																	"nodeType": "YulTypedName",
																	"src": "1334:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1733:162:14",
																"nodeType": "YulBlock",
																"src": "1733:162:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "mc",
																					"nativeSrc": "1867:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "1867:2:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "cc",
																							"nativeSrc": "1877:2:14",
																							"nodeType": "YulIdentifier",
																							"src": "1877:2:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1871:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "1871:5:14"
																					},
																					"nativeSrc": "1871:9:14",
																					"nodeType": "YulFunctionCall",
																					"src": "1871:9:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1860:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1860:6:14"
																			},
																			"nativeSrc": "1860:21:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1860:21:14"
																		},
																		"nativeSrc": "1860:21:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1860:21:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "mc",
																		"nativeSrc": "1566:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "1566:2:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "1570:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1570:3:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1563:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1563:2:14"
																},
																"nativeSrc": "1563:11:14",
																"nodeType": "YulFunctionCall",
																"src": "1563:11:14"
															},
															"nativeSrc": "1370:525:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1575:157:14",
																"nodeType": "YulBlock",
																"src": "1575:157:14",
																"statements": [
																	{
																		"nativeSrc": "1663:19:14",
																		"nodeType": "YulAssignment",
																		"src": "1663:19:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "mc",
																					"nativeSrc": "1673:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "1673:2:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1677:4:14",
																					"nodeType": "YulLiteral",
																					"src": "1677:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1669:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "1669:3:14"
																			},
																			"nativeSrc": "1669:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1669:13:14"
																		},
																		"variableNames": [
																			{
																				"name": "mc",
																				"nativeSrc": "1663:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "1663:2:14"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1699:19:14",
																		"nodeType": "YulAssignment",
																		"src": "1699:19:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "cc",
																					"nativeSrc": "1709:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "1709:2:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1713:4:14",
																					"nodeType": "YulLiteral",
																					"src": "1713:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1705:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "1705:3:14"
																			},
																			"nativeSrc": "1705:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1705:13:14"
																		},
																		"variableNames": [
																			{
																				"name": "cc",
																				"nativeSrc": "1699:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "1699:2:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1374:188:14",
																"nodeType": "YulBlock",
																"src": "1374:188:14",
																"statements": [
																	{
																		"nativeSrc": "1518:30:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1518:30:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "_preBytes",
																					"nativeSrc": "1532:9:14",
																					"nodeType": "YulIdentifier",
																					"src": "1532:9:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1543:4:14",
																					"nodeType": "YulLiteral",
																					"src": "1543:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1528:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "1528:3:14"
																			},
																			"nativeSrc": "1528:20:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1528:20:14"
																		},
																		"variables": [
																			{
																				"name": "cc",
																				"nativeSrc": "1522:2:14",
																				"nodeType": "YulTypedName",
																				"src": "1522:2:14",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1370:525:14"
														},
														{
															"nativeSrc": "2096:27:14",
															"nodeType": "YulAssignment",
															"src": "2096:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "_postBytes",
																		"nativeSrc": "2112:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "2112:10:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2106:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2106:5:14"
																},
																"nativeSrc": "2106:17:14",
																"nodeType": "YulFunctionCall",
																"src": "2106:17:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2096:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2096:6:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tempBytes",
																		"nativeSrc": "2143:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2143:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2158:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tempBytes",
																						"nativeSrc": "2172:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "2172:9:14"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "2166:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "2166:5:14"
																				},
																				"nativeSrc": "2166:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:16:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2154:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2154:3:14"
																		},
																		"nativeSrc": "2154:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2154:29:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2136:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2136:6:14"
																},
																"nativeSrc": "2136:48:14",
																"nodeType": "YulFunctionCall",
																"src": "2136:48:14"
															},
															"nativeSrc": "2136:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "2136:48:14"
														},
														{
															"nativeSrc": "2322:9:14",
															"nodeType": "YulAssignment",
															"src": "2322:9:14",
															"value": {
																"name": "end",
																"nativeSrc": "2328:3:14",
																"nodeType": "YulIdentifier",
																"src": "2328:3:14"
															},
															"variableNames": [
																{
																	"name": "mc",
																	"nativeSrc": "2322:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2322:2:14"
																}
															]
														},
														{
															"nativeSrc": "2458:22:14",
															"nodeType": "YulAssignment",
															"src": "2458:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "mc",
																		"nativeSrc": "2469:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "2469:2:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2473:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2473:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2465:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2465:3:14"
																},
																"nativeSrc": "2465:15:14",
																"nodeType": "YulFunctionCall",
																"src": "2465:15:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2458:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2458:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2662:53:14",
																"nodeType": "YulBlock",
																"src": "2662:53:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "mc",
																					"nativeSrc": "2687:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "2687:2:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "cc",
																							"nativeSrc": "2697:2:14",
																							"nodeType": "YulIdentifier",
																							"src": "2697:2:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2691:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2691:5:14"
																					},
																					"nativeSrc": "2691:9:14",
																					"nodeType": "YulFunctionCall",
																					"src": "2691:9:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2680:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2680:6:14"
																			},
																			"nativeSrc": "2680:21:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2680:21:14"
																		},
																		"nativeSrc": "2680:21:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2680:21:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "mc",
																		"nativeSrc": "2565:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "2565:2:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2569:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2569:3:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:14"
																},
																"nativeSrc": "2562:11:14",
																"nodeType": "YulFunctionCall",
																"src": "2562:11:14"
															},
															"nativeSrc": "2494:221:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2574:87:14",
																"nodeType": "YulBlock",
																"src": "2574:87:14",
																"statements": [
																	{
																		"nativeSrc": "2592:19:14",
																		"nodeType": "YulAssignment",
																		"src": "2592:19:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "mc",
																					"nativeSrc": "2602:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "2602:2:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2606:4:14",
																					"nodeType": "YulLiteral",
																					"src": "2606:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2598:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2598:3:14"
																			},
																			"nativeSrc": "2598:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2598:13:14"
																		},
																		"variableNames": [
																			{
																				"name": "mc",
																				"nativeSrc": "2592:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "2592:2:14"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2628:19:14",
																		"nodeType": "YulAssignment",
																		"src": "2628:19:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "cc",
																					"nativeSrc": "2638:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "2638:2:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2642:4:14",
																					"nodeType": "YulLiteral",
																					"src": "2642:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2634:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2634:3:14"
																			},
																			"nativeSrc": "2634:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2634:13:14"
																		},
																		"variableNames": [
																			{
																				"name": "cc",
																				"nativeSrc": "2628:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "2628:2:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2498:63:14",
																"nodeType": "YulBlock",
																"src": "2498:63:14",
																"statements": [
																	{
																		"nativeSrc": "2516:31:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2516:31:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "_postBytes",
																					"nativeSrc": "2530:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "2530:10:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2542:4:14",
																					"nodeType": "YulLiteral",
																					"src": "2542:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2526:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2526:3:14"
																			},
																			"nativeSrc": "2526:21:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2526:21:14"
																		},
																		"variables": [
																			{
																				"name": "cc",
																				"nativeSrc": "2520:2:14",
																				"nodeType": "YulTypedName",
																				"src": "2520:2:14",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2494:221:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3147:4:14",
																		"nodeType": "YulLiteral",
																		"src": "3147:4:14",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "end",
																								"nativeSrc": "3180:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "3180:3:14"
																							},
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "length",
																												"nativeSrc": "3196:6:14",
																												"nodeType": "YulIdentifier",
																												"src": "3196:6:14"
																											},
																											{
																												"arguments": [
																													{
																														"name": "_preBytes",
																														"nativeSrc": "3210:9:14",
																														"nodeType": "YulIdentifier",
																														"src": "3210:9:14"
																													}
																												],
																												"functionName": {
																													"name": "mload",
																													"nativeSrc": "3204:5:14",
																													"nodeType": "YulIdentifier",
																													"src": "3204:5:14"
																												},
																												"nativeSrc": "3204:16:14",
																												"nodeType": "YulFunctionCall",
																												"src": "3204:16:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3192:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "3192:3:14"
																										},
																										"nativeSrc": "3192:29:14",
																										"nodeType": "YulFunctionCall",
																										"src": "3192:29:14"
																									}
																								],
																								"functionName": {
																									"name": "iszero",
																									"nativeSrc": "3185:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "3185:6:14"
																								},
																								"nativeSrc": "3185:37:14",
																								"nodeType": "YulFunctionCall",
																								"src": "3185:37:14"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3176:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "3176:3:14"
																						},
																						"nativeSrc": "3176:47:14",
																						"nodeType": "YulFunctionCall",
																						"src": "3176:47:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3225:2:14",
																						"nodeType": "YulLiteral",
																						"src": "3225:2:14",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3172:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3172:3:14"
																				},
																				"nativeSrc": "3172:56:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3172:56:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3248:2:14",
																						"nodeType": "YulLiteral",
																						"src": "3248:2:14",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3244:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3244:3:14"
																				},
																				"nativeSrc": "3244:7:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3244:7:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3153:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3153:3:14"
																		},
																		"nativeSrc": "3153:151:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3153:151:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3140:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:14"
																},
																"nativeSrc": "3140:165:14",
																"nodeType": "YulFunctionCall",
																"src": "3140:165:14"
															},
															"nativeSrc": "3140:165:14",
															"nodeType": "YulExpressionStatement",
															"src": "3140:165:14"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2104,
														"isOffset": false,
														"isSlot": false,
														"src": "2112:10:14",
														"valueSize": 1
													},
													{
														"declaration": 2104,
														"isOffset": false,
														"isSlot": false,
														"src": "2530:10:14",
														"valueSize": 1
													},
													{
														"declaration": 2102,
														"isOffset": false,
														"isSlot": false,
														"src": "1532:9:14",
														"valueSize": 1
													},
													{
														"declaration": 2102,
														"isOffset": false,
														"isSlot": false,
														"src": "3210:9:14",
														"valueSize": 1
													},
													{
														"declaration": 2102,
														"isOffset": false,
														"isSlot": false,
														"src": "917:9:14",
														"valueSize": 1
													},
													{
														"declaration": 2110,
														"isOffset": false,
														"isSlot": false,
														"src": "1189:9:14",
														"valueSize": 1
													},
													{
														"declaration": 2110,
														"isOffset": false,
														"isSlot": false,
														"src": "2143:9:14",
														"valueSize": 1
													},
													{
														"declaration": 2110,
														"isOffset": false,
														"isSlot": false,
														"src": "2172:9:14",
														"valueSize": 1
													},
													{
														"declaration": 2110,
														"isOffset": false,
														"isSlot": false,
														"src": "741:9:14",
														"valueSize": 1
													},
													{
														"declaration": 2110,
														"isOffset": false,
														"isSlot": false,
														"src": "947:9:14",
														"valueSize": 1
													}
												],
												"id": 2112,
												"nodeType": "InlineAssembly",
												"src": "588:2727:14"
											},
											{
												"expression": {
													"id": 2113,
													"name": "tempBytes",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2110,
													"src": "3332:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2108,
												"id": 2114,
												"nodeType": "Return",
												"src": "3325:16:14"
											}
										]
									},
									"id": 2116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "concat",
									"nameLocation": "402:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "_preBytes",
												"nameLocation": "431:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "418:22:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2101,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "418:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "_postBytes",
												"nameLocation": "463:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "450:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "450:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:71:14"
									},
									"returnParameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "527:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2106,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "527:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "526:14:14"
									},
									"scope": 2431,
									"src": "393:2955:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2124,
										"nodeType": "Block",
										"src": "3436:6015:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3455:5990:14",
													"nodeType": "YulBlock",
													"src": "3455:5990:14",
													"statements": [
														{
															"nativeSrc": "3678:34:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3678:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "_preBytes.slot",
																		"nativeSrc": "3697:14:14",
																		"nodeType": "YulIdentifier",
																		"src": "3697:14:14"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "3691:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "3691:5:14"
																},
																"nativeSrc": "3691:21:14",
																"nodeType": "YulFunctionCall",
																"src": "3691:21:14"
															},
															"variables": [
																{
																	"name": "fslot",
																	"nativeSrc": "3682:5:14",
																	"nodeType": "YulTypedName",
																	"src": "3682:5:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4205:76:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4205:76:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fslot",
																				"nativeSrc": "4228:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "4228:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4243:5:14",
																								"nodeType": "YulLiteral",
																								"src": "4243:5:14",
																								"type": "",
																								"value": "0x100"
																							},
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "fslot",
																												"nativeSrc": "4261:5:14",
																												"nodeType": "YulIdentifier",
																												"src": "4261:5:14"
																											},
																											{
																												"kind": "number",
																												"nativeSrc": "4268:1:14",
																												"nodeType": "YulLiteral",
																												"src": "4268:1:14",
																												"type": "",
																												"value": "1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "4257:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "4257:3:14"
																										},
																										"nativeSrc": "4257:13:14",
																										"nodeType": "YulFunctionCall",
																										"src": "4257:13:14"
																									}
																								],
																								"functionName": {
																									"name": "iszero",
																									"nativeSrc": "4250:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "4250:6:14"
																								},
																								"nativeSrc": "4250:21:14",
																								"nodeType": "YulFunctionCall",
																								"src": "4250:21:14"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "4239:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "4239:3:14"
																						},
																						"nativeSrc": "4239:33:14",
																						"nodeType": "YulFunctionCall",
																						"src": "4239:33:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4274:1:14",
																						"nodeType": "YulLiteral",
																						"src": "4274:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4235:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4235:3:14"
																				},
																				"nativeSrc": "4235:41:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4235:41:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4224:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4224:3:14"
																		},
																		"nativeSrc": "4224:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4224:53:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4279:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4220:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4220:3:14"
																},
																"nativeSrc": "4220:61:14",
																"nodeType": "YulFunctionCall",
																"src": "4220:61:14"
															},
															"variables": [
																{
																	"name": "slength",
																	"nativeSrc": "4209:7:14",
																	"nodeType": "YulTypedName",
																	"src": "4209:7:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4294:32:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4294:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "_postBytes",
																		"nativeSrc": "4315:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "4315:10:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4309:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "4309:5:14"
																},
																"nativeSrc": "4309:17:14",
																"nodeType": "YulFunctionCall",
																"src": "4309:17:14"
															},
															"variables": [
																{
																	"name": "mlength",
																	"nativeSrc": "4298:7:14",
																	"nodeType": "YulTypedName",
																	"src": "4298:7:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4339:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4339:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "slength",
																		"nativeSrc": "4360:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "4360:7:14"
																	},
																	{
																		"name": "mlength",
																		"nativeSrc": "4369:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "4369:7:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4356:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4356:3:14"
																},
																"nativeSrc": "4356:21:14",
																"nodeType": "YulFunctionCall",
																"src": "4356:21:14"
															},
															"variables": [
																{
																	"name": "newlength",
																	"nativeSrc": "4343:9:14",
																	"nodeType": "YulTypedName",
																	"src": "4343:9:14",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4710:1485:14",
																		"nodeType": "YulBlock",
																		"src": "4710:1485:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "_preBytes.slot",
																							"nativeSrc": "4991:14:14",
																							"nodeType": "YulIdentifier",
																							"src": "4991:14:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "fslot",
																									"nativeSrc": "5303:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "5303:5:14"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"arguments": [
																																{
																																	"arguments": [
																																		{
																																			"name": "_postBytes",
																																			"nativeSrc": "5521:10:14",
																																			"nodeType": "YulIdentifier",
																																			"src": "5521:10:14"
																																		},
																																		{
																																			"kind": "number",
																																			"nativeSrc": "5533:4:14",
																																			"nodeType": "YulLiteral",
																																			"src": "5533:4:14",
																																			"type": "",
																																			"value": "0x20"
																																		}
																																	],
																																	"functionName": {
																																		"name": "add",
																																		"nativeSrc": "5517:3:14",
																																		"nodeType": "YulIdentifier",
																																		"src": "5517:3:14"
																																	},
																																	"nativeSrc": "5517:21:14",
																																	"nodeType": "YulFunctionCall",
																																	"src": "5517:21:14"
																																}
																															],
																															"functionName": {
																																"name": "mload",
																																"nativeSrc": "5511:5:14",
																																"nodeType": "YulIdentifier",
																																"src": "5511:5:14"
																															},
																															"nativeSrc": "5511:28:14",
																															"nodeType": "YulFunctionCall",
																															"src": "5511:28:14"
																														},
																														{
																															"arguments": [
																																{
																																	"kind": "number",
																																	"nativeSrc": "5648:5:14",
																																	"nodeType": "YulLiteral",
																																	"src": "5648:5:14",
																																	"type": "",
																																	"value": "0x100"
																																},
																																{
																																	"arguments": [
																																		{
																																			"kind": "number",
																																			"nativeSrc": "5659:2:14",
																																			"nodeType": "YulLiteral",
																																			"src": "5659:2:14",
																																			"type": "",
																																			"value": "32"
																																		},
																																		{
																																			"name": "mlength",
																																			"nativeSrc": "5663:7:14",
																																			"nodeType": "YulIdentifier",
																																			"src": "5663:7:14"
																																		}
																																	],
																																	"functionName": {
																																		"name": "sub",
																																		"nativeSrc": "5655:3:14",
																																		"nodeType": "YulIdentifier",
																																		"src": "5655:3:14"
																																	},
																																	"nativeSrc": "5655:16:14",
																																	"nodeType": "YulFunctionCall",
																																	"src": "5655:16:14"
																																}
																															],
																															"functionName": {
																																"name": "exp",
																																"nativeSrc": "5644:3:14",
																																"nodeType": "YulIdentifier",
																																"src": "5644:3:14"
																															},
																															"nativeSrc": "5644:28:14",
																															"nodeType": "YulFunctionCall",
																															"src": "5644:28:14"
																														}
																													],
																													"functionName": {
																														"name": "div",
																														"nativeSrc": "5404:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "5404:3:14"
																													},
																													"nativeSrc": "5404:302:14",
																													"nodeType": "YulFunctionCall",
																													"src": "5404:302:14"
																												},
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "5895:5:14",
																															"nodeType": "YulLiteral",
																															"src": "5895:5:14",
																															"type": "",
																															"value": "0x100"
																														},
																														{
																															"arguments": [
																																{
																																	"kind": "number",
																																	"nativeSrc": "5906:2:14",
																																	"nodeType": "YulLiteral",
																																	"src": "5906:2:14",
																																	"type": "",
																																	"value": "32"
																																},
																																{
																																	"name": "newlength",
																																	"nativeSrc": "5910:9:14",
																																	"nodeType": "YulIdentifier",
																																	"src": "5910:9:14"
																																}
																															],
																															"functionName": {
																																"name": "sub",
																																"nativeSrc": "5902:3:14",
																																"nodeType": "YulIdentifier",
																																"src": "5902:3:14"
																															},
																															"nativeSrc": "5902:18:14",
																															"nodeType": "YulFunctionCall",
																															"src": "5902:18:14"
																														}
																													],
																													"functionName": {
																														"name": "exp",
																														"nativeSrc": "5891:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "5891:3:14"
																													},
																													"nativeSrc": "5891:30:14",
																													"nodeType": "YulFunctionCall",
																													"src": "5891:30:14"
																												}
																											],
																											"functionName": {
																												"name": "mul",
																												"nativeSrc": "5367:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "5367:3:14"
																											},
																											"nativeSrc": "5367:584:14",
																											"nodeType": "YulFunctionCall",
																											"src": "5367:584:14"
																										},
																										{
																											"arguments": [
																												{
																													"name": "mlength",
																													"nativeSrc": "6104:7:14",
																													"nodeType": "YulIdentifier",
																													"src": "6104:7:14"
																												},
																												{
																													"kind": "number",
																													"nativeSrc": "6113:1:14",
																													"nodeType": "YulLiteral",
																													"src": "6113:1:14",
																													"type": "",
																													"value": "2"
																												}
																											],
																											"functionName": {
																												"name": "mul",
																												"nativeSrc": "6100:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "6100:3:14"
																											},
																											"nativeSrc": "6100:15:14",
																											"nodeType": "YulFunctionCall",
																											"src": "6100:15:14"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "5334:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "5334:3:14"
																									},
																									"nativeSrc": "5334:807:14",
																									"nodeType": "YulFunctionCall",
																									"src": "5334:807:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5134:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "5134:3:14"
																							},
																							"nativeSrc": "5134:1029:14",
																							"nodeType": "YulFunctionCall",
																							"src": "5134:1029:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4963:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4963:6:14"
																					},
																					"nativeSrc": "4963:1218:14",
																					"nodeType": "YulFunctionCall",
																					"src": "4963:1218:14"
																				},
																				"nativeSrc": "4963:1218:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "4963:1218:14"
																			}
																		]
																	},
																	"nativeSrc": "4703:1492:14",
																	"nodeType": "YulCase",
																	"src": "4703:1492:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4708:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4708:1:14",
																		"type": "",
																		"value": "2"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6215:1935:14",
																		"nodeType": "YulBlock",
																		"src": "6215:1935:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6424:3:14",
																							"nodeType": "YulLiteral",
																							"src": "6424:3:14",
																							"type": "",
																							"value": "0x0"
																						},
																						{
																							"name": "_preBytes.slot",
																							"nativeSrc": "6429:14:14",
																							"nodeType": "YulIdentifier",
																							"src": "6429:14:14"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "6417:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "6417:6:14"
																					},
																					"nativeSrc": "6417:27:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6417:27:14"
																				},
																				"nativeSrc": "6417:27:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "6417:27:14"
																			},
																			{
																				"nativeSrc": "6461:53:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6461:53:14",
																				"value": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6485:3:14",
																									"nodeType": "YulLiteral",
																									"src": "6485:3:14",
																									"type": "",
																									"value": "0x0"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6490:4:14",
																									"nodeType": "YulLiteral",
																									"src": "6490:4:14",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "keccak256",
																								"nativeSrc": "6475:9:14",
																								"nodeType": "YulIdentifier",
																								"src": "6475:9:14"
																							},
																							"nativeSrc": "6475:20:14",
																							"nodeType": "YulFunctionCall",
																							"src": "6475:20:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slength",
																									"nativeSrc": "6501:7:14",
																									"nodeType": "YulIdentifier",
																									"src": "6501:7:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6510:2:14",
																									"nodeType": "YulLiteral",
																									"src": "6510:2:14",
																									"type": "",
																									"value": "32"
																								}
																							],
																							"functionName": {
																								"name": "div",
																								"nativeSrc": "6497:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "6497:3:14"
																							},
																							"nativeSrc": "6497:16:14",
																							"nodeType": "YulFunctionCall",
																							"src": "6497:16:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6471:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "6471:3:14"
																					},
																					"nativeSrc": "6471:43:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6471:43:14"
																				},
																				"variables": [
																					{
																						"name": "sc",
																						"nativeSrc": "6465:2:14",
																						"nodeType": "YulTypedName",
																						"src": "6465:2:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "_preBytes.slot",
																							"nativeSrc": "6574:14:14",
																							"nodeType": "YulIdentifier",
																							"src": "6574:14:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newlength",
																											"nativeSrc": "6598:9:14",
																											"nodeType": "YulIdentifier",
																											"src": "6598:9:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6609:1:14",
																											"nodeType": "YulLiteral",
																											"src": "6609:1:14",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6594:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "6594:3:14"
																									},
																									"nativeSrc": "6594:17:14",
																									"nodeType": "YulFunctionCall",
																									"src": "6594:17:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6613:1:14",
																									"nodeType": "YulLiteral",
																									"src": "6613:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6590:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "6590:3:14"
																							},
																							"nativeSrc": "6590:25:14",
																							"nodeType": "YulFunctionCall",
																							"src": "6590:25:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6567:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "6567:6:14"
																					},
																					"nativeSrc": "6567:49:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6567:49:14"
																				},
																				"nativeSrc": "6567:49:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "6567:49:14"
																			},
																			{
																				"nativeSrc": "7204:30:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7204:30:14",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7222:2:14",
																							"nodeType": "YulLiteral",
																							"src": "7222:2:14",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "slength",
																							"nativeSrc": "7226:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "7226:7:14"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "7218:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "7218:3:14"
																					},
																					"nativeSrc": "7218:16:14",
																					"nodeType": "YulFunctionCall",
																					"src": "7218:16:14"
																				},
																				"variables": [
																					{
																						"name": "submod",
																						"nativeSrc": "7208:6:14",
																						"nodeType": "YulTypedName",
																						"src": "7208:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7251:33:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7251:33:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "_postBytes",
																							"nativeSrc": "7265:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "7265:10:14"
																						},
																						{
																							"name": "submod",
																							"nativeSrc": "7277:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "7277:6:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7261:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "7261:3:14"
																					},
																					"nativeSrc": "7261:23:14",
																					"nodeType": "YulFunctionCall",
																					"src": "7261:23:14"
																				},
																				"variables": [
																					{
																						"name": "mc",
																						"nativeSrc": "7255:2:14",
																						"nodeType": "YulTypedName",
																						"src": "7255:2:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7301:35:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7301:35:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "_postBytes",
																							"nativeSrc": "7316:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "7316:10:14"
																						},
																						{
																							"name": "mlength",
																							"nativeSrc": "7328:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "7328:7:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7312:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "7312:3:14"
																					},
																					"nativeSrc": "7312:24:14",
																					"nodeType": "YulFunctionCall",
																					"src": "7312:24:14"
																				},
																				"variables": [
																					{
																						"name": "end",
																						"nativeSrc": "7305:3:14",
																						"nodeType": "YulTypedName",
																						"src": "7305:3:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7353:38:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7353:38:14",
																				"value": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7373:5:14",
																									"nodeType": "YulLiteral",
																									"src": "7373:5:14",
																									"type": "",
																									"value": "0x100"
																								},
																								{
																									"name": "submod",
																									"nativeSrc": "7380:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "7380:6:14"
																								}
																							],
																							"functionName": {
																								"name": "exp",
																								"nativeSrc": "7369:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "7369:3:14"
																							},
																							"nativeSrc": "7369:18:14",
																							"nodeType": "YulFunctionCall",
																							"src": "7369:18:14"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7389:1:14",
																							"nodeType": "YulLiteral",
																							"src": "7389:1:14",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "7365:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "7365:3:14"
																					},
																					"nativeSrc": "7365:26:14",
																					"nodeType": "YulFunctionCall",
																					"src": "7365:26:14"
																				},
																				"variables": [
																					{
																						"name": "mask",
																						"nativeSrc": "7357:4:14",
																						"nodeType": "YulTypedName",
																						"src": "7357:4:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "sc",
																							"nativeSrc": "7437:2:14",
																							"nodeType": "YulIdentifier",
																							"src": "7437:2:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "fslot",
																											"nativeSrc": "7523:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "7523:5:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "7558:66:14",
																											"nodeType": "YulLiteral",
																											"src": "7558:66:14",
																											"type": "",
																											"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nativeSrc": "7490:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "7490:3:14"
																									},
																									"nativeSrc": "7490:160:14",
																									"nodeType": "YulFunctionCall",
																									"src": "7490:160:14"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "mc",
																													"nativeSrc": "7686:2:14",
																													"nodeType": "YulIdentifier",
																													"src": "7686:2:14"
																												}
																											],
																											"functionName": {
																												"name": "mload",
																												"nativeSrc": "7680:5:14",
																												"nodeType": "YulIdentifier",
																												"src": "7680:5:14"
																											},
																											"nativeSrc": "7680:9:14",
																											"nodeType": "YulFunctionCall",
																											"src": "7680:9:14"
																										},
																										{
																											"name": "mask",
																											"nativeSrc": "7691:4:14",
																											"nodeType": "YulIdentifier",
																											"src": "7691:4:14"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nativeSrc": "7676:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "7676:3:14"
																									},
																									"nativeSrc": "7676:20:14",
																									"nodeType": "YulFunctionCall",
																									"src": "7676:20:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7461:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "7461:3:14"
																							},
																							"nativeSrc": "7461:257:14",
																							"nodeType": "YulFunctionCall",
																							"src": "7461:257:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7409:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "7409:6:14"
																					},
																					"nativeSrc": "7409:327:14",
																					"nodeType": "YulFunctionCall",
																					"src": "7409:327:14"
																				},
																				"nativeSrc": "7409:327:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "7409:327:14"
																			},
																			{
																				"body": {
																					"nativeSrc": "7964:61:14",
																					"nodeType": "YulBlock",
																					"src": "7964:61:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "sc",
																										"nativeSrc": "7993:2:14",
																										"nodeType": "YulIdentifier",
																										"src": "7993:2:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "mc",
																												"nativeSrc": "8003:2:14",
																												"nodeType": "YulIdentifier",
																												"src": "8003:2:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7997:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "7997:5:14"
																										},
																										"nativeSrc": "7997:9:14",
																										"nodeType": "YulFunctionCall",
																										"src": "7997:9:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7986:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "7986:6:14"
																								},
																								"nativeSrc": "7986:21:14",
																								"nodeType": "YulFunctionCall",
																								"src": "7986:21:14"
																							},
																							"nativeSrc": "7986:21:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "7986:21:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "mc",
																							"nativeSrc": "7858:2:14",
																							"nodeType": "YulIdentifier",
																							"src": "7858:2:14"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "7862:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "7862:3:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7855:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "7855:2:14"
																					},
																					"nativeSrc": "7855:11:14",
																					"nodeType": "YulFunctionCall",
																					"src": "7855:11:14"
																				},
																				"nativeSrc": "7754:271:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7867:96:14",
																					"nodeType": "YulBlock",
																					"src": "7867:96:14",
																					"statements": [
																						{
																							"nativeSrc": "7889:16:14",
																							"nodeType": "YulAssignment",
																							"src": "7889:16:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "sc",
																										"nativeSrc": "7899:2:14",
																										"nodeType": "YulIdentifier",
																										"src": "7899:2:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7903:1:14",
																										"nodeType": "YulLiteral",
																										"src": "7903:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7895:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "7895:3:14"
																								},
																								"nativeSrc": "7895:10:14",
																								"nodeType": "YulFunctionCall",
																								"src": "7895:10:14"
																							},
																							"variableNames": [
																								{
																									"name": "sc",
																									"nativeSrc": "7889:2:14",
																									"nodeType": "YulIdentifier",
																									"src": "7889:2:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7926:19:14",
																							"nodeType": "YulAssignment",
																							"src": "7926:19:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "mc",
																										"nativeSrc": "7936:2:14",
																										"nodeType": "YulIdentifier",
																										"src": "7936:2:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7940:4:14",
																										"nodeType": "YulLiteral",
																										"src": "7940:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7932:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "7932:3:14"
																								},
																								"nativeSrc": "7932:13:14",
																								"nodeType": "YulFunctionCall",
																								"src": "7932:13:14"
																							},
																							"variableNames": [
																								{
																									"name": "mc",
																									"nativeSrc": "7926:2:14",
																									"nodeType": "YulIdentifier",
																									"src": "7926:2:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7758:96:14",
																					"nodeType": "YulBlock",
																					"src": "7758:96:14",
																					"statements": [
																						{
																							"nativeSrc": "7780:19:14",
																							"nodeType": "YulAssignment",
																							"src": "7780:19:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "mc",
																										"nativeSrc": "7790:2:14",
																										"nodeType": "YulIdentifier",
																										"src": "7790:2:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7794:4:14",
																										"nodeType": "YulLiteral",
																										"src": "7794:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7786:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "7786:3:14"
																								},
																								"nativeSrc": "7786:13:14",
																								"nodeType": "YulFunctionCall",
																								"src": "7786:13:14"
																							},
																							"variableNames": [
																								{
																									"name": "mc",
																									"nativeSrc": "7780:2:14",
																									"nodeType": "YulIdentifier",
																									"src": "7780:2:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7820:16:14",
																							"nodeType": "YulAssignment",
																							"src": "7820:16:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "sc",
																										"nativeSrc": "7830:2:14",
																										"nodeType": "YulIdentifier",
																										"src": "7830:2:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7834:1:14",
																										"nodeType": "YulLiteral",
																										"src": "7834:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7826:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "7826:3:14"
																								},
																								"nativeSrc": "7826:10:14",
																								"nodeType": "YulFunctionCall",
																								"src": "7826:10:14"
																							},
																							"variableNames": [
																								{
																									"name": "sc",
																									"nativeSrc": "7820:2:14",
																									"nodeType": "YulIdentifier",
																									"src": "7820:2:14"
																								}
																							]
																						}
																					]
																				},
																				"src": "7754:271:14"
																			},
																			{
																				"nativeSrc": "8043:32:14",
																				"nodeType": "YulAssignment",
																				"src": "8043:32:14",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8055:5:14",
																							"nodeType": "YulLiteral",
																							"src": "8055:5:14",
																							"type": "",
																							"value": "0x100"
																						},
																						{
																							"arguments": [
																								{
																									"name": "mc",
																									"nativeSrc": "8066:2:14",
																									"nodeType": "YulIdentifier",
																									"src": "8066:2:14"
																								},
																								{
																									"name": "end",
																									"nativeSrc": "8070:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "8070:3:14"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "8062:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "8062:3:14"
																							},
																							"nativeSrc": "8062:12:14",
																							"nodeType": "YulFunctionCall",
																							"src": "8062:12:14"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "8051:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "8051:3:14"
																					},
																					"nativeSrc": "8051:24:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8051:24:14"
																				},
																				"variableNames": [
																					{
																						"name": "mask",
																						"nativeSrc": "8043:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "8043:4:14"
																					}
																				]
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "sc",
																							"nativeSrc": "8100:2:14",
																							"nodeType": "YulIdentifier",
																							"src": "8100:2:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "mc",
																													"nativeSrc": "8118:2:14",
																													"nodeType": "YulIdentifier",
																													"src": "8118:2:14"
																												}
																											],
																											"functionName": {
																												"name": "mload",
																												"nativeSrc": "8112:5:14",
																												"nodeType": "YulIdentifier",
																												"src": "8112:5:14"
																											},
																											"nativeSrc": "8112:9:14",
																											"nodeType": "YulFunctionCall",
																											"src": "8112:9:14"
																										},
																										{
																											"name": "mask",
																											"nativeSrc": "8123:4:14",
																											"nodeType": "YulIdentifier",
																											"src": "8123:4:14"
																										}
																									],
																									"functionName": {
																										"name": "div",
																										"nativeSrc": "8108:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "8108:3:14"
																									},
																									"nativeSrc": "8108:20:14",
																									"nodeType": "YulFunctionCall",
																									"src": "8108:20:14"
																								},
																								{
																									"name": "mask",
																									"nativeSrc": "8130:4:14",
																									"nodeType": "YulIdentifier",
																									"src": "8130:4:14"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "8104:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "8104:3:14"
																							},
																							"nativeSrc": "8104:31:14",
																							"nodeType": "YulFunctionCall",
																							"src": "8104:31:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8093:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8093:6:14"
																					},
																					"nativeSrc": "8093:43:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8093:43:14"
																				},
																				"nativeSrc": "8093:43:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "8093:43:14"
																			}
																		]
																	},
																	"nativeSrc": "6208:1942:14",
																	"nodeType": "YulCase",
																	"src": "6208:1942:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6213:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6213:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8171:1264:14",
																		"nodeType": "YulBlock",
																		"src": "8171:1264:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8268:3:14",
																							"nodeType": "YulLiteral",
																							"src": "8268:3:14",
																							"type": "",
																							"value": "0x0"
																						},
																						{
																							"name": "_preBytes.slot",
																							"nativeSrc": "8273:14:14",
																							"nodeType": "YulIdentifier",
																							"src": "8273:14:14"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "8261:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8261:6:14"
																					},
																					"nativeSrc": "8261:27:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8261:27:14"
																				},
																				"nativeSrc": "8261:27:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "8261:27:14"
																			},
																			{
																				"nativeSrc": "8381:53:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8381:53:14",
																				"value": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8405:3:14",
																									"nodeType": "YulLiteral",
																									"src": "8405:3:14",
																									"type": "",
																									"value": "0x0"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8410:4:14",
																									"nodeType": "YulLiteral",
																									"src": "8410:4:14",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "keccak256",
																								"nativeSrc": "8395:9:14",
																								"nodeType": "YulIdentifier",
																								"src": "8395:9:14"
																							},
																							"nativeSrc": "8395:20:14",
																							"nodeType": "YulFunctionCall",
																							"src": "8395:20:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slength",
																									"nativeSrc": "8421:7:14",
																									"nodeType": "YulIdentifier",
																									"src": "8421:7:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8430:2:14",
																									"nodeType": "YulLiteral",
																									"src": "8430:2:14",
																									"type": "",
																									"value": "32"
																								}
																							],
																							"functionName": {
																								"name": "div",
																								"nativeSrc": "8417:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "8417:3:14"
																							},
																							"nativeSrc": "8417:16:14",
																							"nodeType": "YulFunctionCall",
																							"src": "8417:16:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "8391:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "8391:3:14"
																					},
																					"nativeSrc": "8391:43:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8391:43:14"
																				},
																				"variables": [
																					{
																						"name": "sc",
																						"nativeSrc": "8385:2:14",
																						"nodeType": "YulTypedName",
																						"src": "8385:2:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "_preBytes.slot",
																							"nativeSrc": "8494:14:14",
																							"nodeType": "YulIdentifier",
																							"src": "8494:14:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newlength",
																											"nativeSrc": "8518:9:14",
																											"nodeType": "YulIdentifier",
																											"src": "8518:9:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8529:1:14",
																											"nodeType": "YulLiteral",
																											"src": "8529:1:14",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8514:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "8514:3:14"
																									},
																									"nativeSrc": "8514:17:14",
																									"nodeType": "YulFunctionCall",
																									"src": "8514:17:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8533:1:14",
																									"nodeType": "YulLiteral",
																									"src": "8533:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8510:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "8510:3:14"
																							},
																							"nativeSrc": "8510:25:14",
																							"nodeType": "YulFunctionCall",
																							"src": "8510:25:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8487:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8487:6:14"
																					},
																					"nativeSrc": "8487:49:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8487:49:14"
																				},
																				"nativeSrc": "8487:49:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "8487:49:14"
																			},
																			{
																				"nativeSrc": "8663:34:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8663:34:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slength",
																							"nativeSrc": "8685:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "8685:7:14"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8694:2:14",
																							"nodeType": "YulLiteral",
																							"src": "8694:2:14",
																							"type": "",
																							"value": "32"
																						}
																					],
																					"functionName": {
																						"name": "mod",
																						"nativeSrc": "8681:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "8681:3:14"
																					},
																					"nativeSrc": "8681:16:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8681:16:14"
																				},
																				"variables": [
																					{
																						"name": "slengthmod",
																						"nativeSrc": "8667:10:14",
																						"nodeType": "YulTypedName",
																						"src": "8667:10:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8714:34:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8714:34:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "mlength",
																							"nativeSrc": "8736:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "8736:7:14"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8745:2:14",
																							"nodeType": "YulLiteral",
																							"src": "8745:2:14",
																							"type": "",
																							"value": "32"
																						}
																					],
																					"functionName": {
																						"name": "mod",
																						"nativeSrc": "8732:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "8732:3:14"
																					},
																					"nativeSrc": "8732:16:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8732:16:14"
																				},
																				"variables": [
																					{
																						"name": "mlengthmod",
																						"nativeSrc": "8718:10:14",
																						"nodeType": "YulTypedName",
																						"src": "8718:10:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8765:33:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8765:33:14",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8783:2:14",
																							"nodeType": "YulLiteral",
																							"src": "8783:2:14",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "slengthmod",
																							"nativeSrc": "8787:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "8787:10:14"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "8779:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "8779:3:14"
																					},
																					"nativeSrc": "8779:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8779:19:14"
																				},
																				"variables": [
																					{
																						"name": "submod",
																						"nativeSrc": "8769:6:14",
																						"nodeType": "YulTypedName",
																						"src": "8769:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8815:33:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8815:33:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "_postBytes",
																							"nativeSrc": "8829:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "8829:10:14"
																						},
																						{
																							"name": "submod",
																							"nativeSrc": "8841:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "8841:6:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "8825:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "8825:3:14"
																					},
																					"nativeSrc": "8825:23:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8825:23:14"
																				},
																				"variables": [
																					{
																						"name": "mc",
																						"nativeSrc": "8819:2:14",
																						"nodeType": "YulTypedName",
																						"src": "8819:2:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8865:35:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8865:35:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "_postBytes",
																							"nativeSrc": "8880:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "8880:10:14"
																						},
																						{
																							"name": "mlength",
																							"nativeSrc": "8892:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "8892:7:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "8876:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "8876:3:14"
																					},
																					"nativeSrc": "8876:24:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8876:24:14"
																				},
																				"variables": [
																					{
																						"name": "end",
																						"nativeSrc": "8869:3:14",
																						"nodeType": "YulTypedName",
																						"src": "8869:3:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8917:38:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8917:38:14",
																				"value": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8937:5:14",
																									"nodeType": "YulLiteral",
																									"src": "8937:5:14",
																									"type": "",
																									"value": "0x100"
																								},
																								{
																									"name": "submod",
																									"nativeSrc": "8944:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "8944:6:14"
																								}
																							],
																							"functionName": {
																								"name": "exp",
																								"nativeSrc": "8933:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "8933:3:14"
																							},
																							"nativeSrc": "8933:18:14",
																							"nodeType": "YulFunctionCall",
																							"src": "8933:18:14"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8953:1:14",
																							"nodeType": "YulLiteral",
																							"src": "8953:1:14",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "8929:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "8929:3:14"
																					},
																					"nativeSrc": "8929:26:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8929:26:14"
																				},
																				"variables": [
																					{
																						"name": "mask",
																						"nativeSrc": "8921:4:14",
																						"nodeType": "YulTypedName",
																						"src": "8921:4:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "sc",
																							"nativeSrc": "8980:2:14",
																							"nodeType": "YulIdentifier",
																							"src": "8980:2:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "sc",
																											"nativeSrc": "8994:2:14",
																											"nodeType": "YulIdentifier",
																											"src": "8994:2:14"
																										}
																									],
																									"functionName": {
																										"name": "sload",
																										"nativeSrc": "8988:5:14",
																										"nodeType": "YulIdentifier",
																										"src": "8988:5:14"
																									},
																									"nativeSrc": "8988:9:14",
																									"nodeType": "YulFunctionCall",
																									"src": "8988:9:14"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "mc",
																													"nativeSrc": "9009:2:14",
																													"nodeType": "YulIdentifier",
																													"src": "9009:2:14"
																												}
																											],
																											"functionName": {
																												"name": "mload",
																												"nativeSrc": "9003:5:14",
																												"nodeType": "YulIdentifier",
																												"src": "9003:5:14"
																											},
																											"nativeSrc": "9003:9:14",
																											"nodeType": "YulFunctionCall",
																											"src": "9003:9:14"
																										},
																										{
																											"name": "mask",
																											"nativeSrc": "9014:4:14",
																											"nodeType": "YulIdentifier",
																											"src": "9014:4:14"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nativeSrc": "8999:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "8999:3:14"
																									},
																									"nativeSrc": "8999:20:14",
																									"nodeType": "YulFunctionCall",
																									"src": "8999:20:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8984:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "8984:3:14"
																							},
																							"nativeSrc": "8984:36:14",
																							"nodeType": "YulFunctionCall",
																							"src": "8984:36:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8973:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8973:6:14"
																					},
																					"nativeSrc": "8973:48:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8973:48:14"
																				},
																				"nativeSrc": "8973:48:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "8973:48:14"
																			},
																			{
																				"body": {
																					"nativeSrc": "9249:61:14",
																					"nodeType": "YulBlock",
																					"src": "9249:61:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "sc",
																										"nativeSrc": "9278:2:14",
																										"nodeType": "YulIdentifier",
																										"src": "9278:2:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "mc",
																												"nativeSrc": "9288:2:14",
																												"nodeType": "YulIdentifier",
																												"src": "9288:2:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "9282:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "9282:5:14"
																										},
																										"nativeSrc": "9282:9:14",
																										"nodeType": "YulFunctionCall",
																										"src": "9282:9:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9271:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "9271:6:14"
																								},
																								"nativeSrc": "9271:21:14",
																								"nodeType": "YulFunctionCall",
																								"src": "9271:21:14"
																							},
																							"nativeSrc": "9271:21:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "9271:21:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "mc",
																							"nativeSrc": "9143:2:14",
																							"nodeType": "YulIdentifier",
																							"src": "9143:2:14"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "9147:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "9147:3:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9140:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "9140:2:14"
																					},
																					"nativeSrc": "9140:11:14",
																					"nodeType": "YulFunctionCall",
																					"src": "9140:11:14"
																				},
																				"nativeSrc": "9039:271:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "9152:96:14",
																					"nodeType": "YulBlock",
																					"src": "9152:96:14",
																					"statements": [
																						{
																							"nativeSrc": "9174:16:14",
																							"nodeType": "YulAssignment",
																							"src": "9174:16:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "sc",
																										"nativeSrc": "9184:2:14",
																										"nodeType": "YulIdentifier",
																										"src": "9184:2:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9188:1:14",
																										"nodeType": "YulLiteral",
																										"src": "9188:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9180:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "9180:3:14"
																								},
																								"nativeSrc": "9180:10:14",
																								"nodeType": "YulFunctionCall",
																								"src": "9180:10:14"
																							},
																							"variableNames": [
																								{
																									"name": "sc",
																									"nativeSrc": "9174:2:14",
																									"nodeType": "YulIdentifier",
																									"src": "9174:2:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9211:19:14",
																							"nodeType": "YulAssignment",
																							"src": "9211:19:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "mc",
																										"nativeSrc": "9221:2:14",
																										"nodeType": "YulIdentifier",
																										"src": "9221:2:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9225:4:14",
																										"nodeType": "YulLiteral",
																										"src": "9225:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9217:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "9217:3:14"
																								},
																								"nativeSrc": "9217:13:14",
																								"nodeType": "YulFunctionCall",
																								"src": "9217:13:14"
																							},
																							"variableNames": [
																								{
																									"name": "mc",
																									"nativeSrc": "9211:2:14",
																									"nodeType": "YulIdentifier",
																									"src": "9211:2:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "9043:96:14",
																					"nodeType": "YulBlock",
																					"src": "9043:96:14",
																					"statements": [
																						{
																							"nativeSrc": "9065:16:14",
																							"nodeType": "YulAssignment",
																							"src": "9065:16:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "sc",
																										"nativeSrc": "9075:2:14",
																										"nodeType": "YulIdentifier",
																										"src": "9075:2:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9079:1:14",
																										"nodeType": "YulLiteral",
																										"src": "9079:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9071:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "9071:3:14"
																								},
																								"nativeSrc": "9071:10:14",
																								"nodeType": "YulFunctionCall",
																								"src": "9071:10:14"
																							},
																							"variableNames": [
																								{
																									"name": "sc",
																									"nativeSrc": "9065:2:14",
																									"nodeType": "YulIdentifier",
																									"src": "9065:2:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9102:19:14",
																							"nodeType": "YulAssignment",
																							"src": "9102:19:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "mc",
																										"nativeSrc": "9112:2:14",
																										"nodeType": "YulIdentifier",
																										"src": "9112:2:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9116:4:14",
																										"nodeType": "YulLiteral",
																										"src": "9116:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9108:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "9108:3:14"
																								},
																								"nativeSrc": "9108:13:14",
																								"nodeType": "YulFunctionCall",
																								"src": "9108:13:14"
																							},
																							"variableNames": [
																								{
																									"name": "mc",
																									"nativeSrc": "9102:2:14",
																									"nodeType": "YulIdentifier",
																									"src": "9102:2:14"
																								}
																							]
																						}
																					]
																				},
																				"src": "9039:271:14"
																			},
																			{
																				"nativeSrc": "9328:32:14",
																				"nodeType": "YulAssignment",
																				"src": "9328:32:14",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9340:5:14",
																							"nodeType": "YulLiteral",
																							"src": "9340:5:14",
																							"type": "",
																							"value": "0x100"
																						},
																						{
																							"arguments": [
																								{
																									"name": "mc",
																									"nativeSrc": "9351:2:14",
																									"nodeType": "YulIdentifier",
																									"src": "9351:2:14"
																								},
																								{
																									"name": "end",
																									"nativeSrc": "9355:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "9355:3:14"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "9347:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "9347:3:14"
																							},
																							"nativeSrc": "9347:12:14",
																							"nodeType": "YulFunctionCall",
																							"src": "9347:12:14"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "9336:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "9336:3:14"
																					},
																					"nativeSrc": "9336:24:14",
																					"nodeType": "YulFunctionCall",
																					"src": "9336:24:14"
																				},
																				"variableNames": [
																					{
																						"name": "mask",
																						"nativeSrc": "9328:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "9328:4:14"
																					}
																				]
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "sc",
																							"nativeSrc": "9385:2:14",
																							"nodeType": "YulIdentifier",
																							"src": "9385:2:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "mc",
																													"nativeSrc": "9403:2:14",
																													"nodeType": "YulIdentifier",
																													"src": "9403:2:14"
																												}
																											],
																											"functionName": {
																												"name": "mload",
																												"nativeSrc": "9397:5:14",
																												"nodeType": "YulIdentifier",
																												"src": "9397:5:14"
																											},
																											"nativeSrc": "9397:9:14",
																											"nodeType": "YulFunctionCall",
																											"src": "9397:9:14"
																										},
																										{
																											"name": "mask",
																											"nativeSrc": "9408:4:14",
																											"nodeType": "YulIdentifier",
																											"src": "9408:4:14"
																										}
																									],
																									"functionName": {
																										"name": "div",
																										"nativeSrc": "9393:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "9393:3:14"
																									},
																									"nativeSrc": "9393:20:14",
																									"nodeType": "YulFunctionCall",
																									"src": "9393:20:14"
																								},
																								{
																									"name": "mask",
																									"nativeSrc": "9415:4:14",
																									"nodeType": "YulIdentifier",
																									"src": "9415:4:14"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "9389:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "9389:3:14"
																							},
																							"nativeSrc": "9389:31:14",
																							"nodeType": "YulFunctionCall",
																							"src": "9389:31:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9378:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9378:6:14"
																					},
																					"nativeSrc": "9378:43:14",
																					"nodeType": "YulFunctionCall",
																					"src": "9378:43:14"
																				},
																				"nativeSrc": "9378:43:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "9378:43:14"
																			}
																		]
																	},
																	"nativeSrc": "8163:1272:14",
																	"nodeType": "YulCase",
																	"src": "8163:1272:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slength",
																				"nativeSrc": "4658:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4658:7:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4667:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4667:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4655:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "4655:2:14"
																		},
																		"nativeSrc": "4655:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4655:15:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newlength",
																				"nativeSrc": "4675:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4675:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4686:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4686:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4672:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "4672:2:14"
																		},
																		"nativeSrc": "4672:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4672:17:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4651:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4651:3:14"
																},
																"nativeSrc": "4651:39:14",
																"nodeType": "YulFunctionCall",
																"src": "4651:39:14"
															},
															"nativeSrc": "4644:4791:14",
															"nodeType": "YulSwitch",
															"src": "4644:4791:14"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2120,
														"isOffset": false,
														"isSlot": false,
														"src": "4315:10:14",
														"valueSize": 1
													},
													{
														"declaration": 2120,
														"isOffset": false,
														"isSlot": false,
														"src": "5521:10:14",
														"valueSize": 1
													},
													{
														"declaration": 2120,
														"isOffset": false,
														"isSlot": false,
														"src": "7265:10:14",
														"valueSize": 1
													},
													{
														"declaration": 2120,
														"isOffset": false,
														"isSlot": false,
														"src": "7316:10:14",
														"valueSize": 1
													},
													{
														"declaration": 2120,
														"isOffset": false,
														"isSlot": false,
														"src": "8829:10:14",
														"valueSize": 1
													},
													{
														"declaration": 2120,
														"isOffset": false,
														"isSlot": false,
														"src": "8880:10:14",
														"valueSize": 1
													},
													{
														"declaration": 2118,
														"isOffset": false,
														"isSlot": true,
														"src": "3697:14:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2118,
														"isOffset": false,
														"isSlot": true,
														"src": "4991:14:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2118,
														"isOffset": false,
														"isSlot": true,
														"src": "6429:14:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2118,
														"isOffset": false,
														"isSlot": true,
														"src": "6574:14:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2118,
														"isOffset": false,
														"isSlot": true,
														"src": "8273:14:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2118,
														"isOffset": false,
														"isSlot": true,
														"src": "8494:14:14",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2123,
												"nodeType": "InlineAssembly",
												"src": "3446:5999:14"
											}
										]
									},
									"id": 2125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "concatStorage",
									"nameLocation": "3363:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "_preBytes",
												"nameLocation": "3391:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "3377:23:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2117,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3377:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "_postBytes",
												"nameLocation": "3415:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "3402:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3402:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3376:50:14"
									},
									"returnParameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3436:0:14"
									},
									"scope": 2431,
									"src": "3354:6097:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2161,
										"nodeType": "Block",
										"src": "9621:2640:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2137,
																	"name": "_length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2131,
																	"src": "9639:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3331",
																	"id": 2138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9649:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_31_by_1",
																		"typeString": "int_const 31"
																	},
																	"value": "31"
																},
																"src": "9639:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2140,
																"name": "_length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2131,
																"src": "9655:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9639:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736c6963655f6f766572666c6f77",
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9664:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e",
																"typeString": "literal_string \"slice_overflow\""
															},
															"value": "slice_overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e",
																"typeString": "literal_string \"slice_overflow\""
															}
														],
														"id": 2136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9631:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9631:50:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2144,
												"nodeType": "ExpressionStatement",
												"src": "9631:50:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2146,
																	"name": "_bytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2127,
																	"src": "9699:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9706:6:14",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9699:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2148,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2129,
																	"src": "9716:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2149,
																	"name": "_length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2131,
																	"src": "9725:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9716:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9699:33:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736c6963655f6f75744f66426f756e6473",
															"id": 2152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9734:19:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0",
																"typeString": "literal_string \"slice_outOfBounds\""
															},
															"value": "slice_outOfBounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0",
																"typeString": "literal_string \"slice_outOfBounds\""
															}
														],
														"id": 2145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9691:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9691:63:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2154,
												"nodeType": "ExpressionStatement",
												"src": "9691:63:14"
											},
											{
												"assignments": [
													2156
												],
												"declarations": [
													{
														"constant": false,
														"id": 2156,
														"mutability": "mutable",
														"name": "tempBytes",
														"nameLocation": "9778:9:14",
														"nodeType": "VariableDeclaration",
														"scope": 2161,
														"src": "9765:22:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2155,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9765:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2157,
												"nodeType": "VariableDeclarationStatement",
												"src": "9765:22:14"
											},
											{
												"AST": {
													"nativeSrc": "9807:2421:14",
													"nodeType": "YulBlock",
													"src": "9807:2421:14",
													"statements": [
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "9863:1960:14",
																		"nodeType": "YulBlock",
																		"src": "9863:1960:14",
																		"statements": [
																			{
																				"nativeSrc": "10019:24:14",
																				"nodeType": "YulAssignment",
																				"src": "10019:24:14",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10038:4:14",
																							"nodeType": "YulLiteral",
																							"src": "10038:4:14",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "10032:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "10032:5:14"
																					},
																					"nativeSrc": "10032:11:14",
																					"nodeType": "YulFunctionCall",
																					"src": "10032:11:14"
																				},
																				"variableNames": [
																					{
																						"name": "tempBytes",
																						"nativeSrc": "10019:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10019:9:14"
																					}
																				]
																			},
																			{
																				"nativeSrc": "10667:33:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10667:33:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "_length",
																							"nativeSrc": "10688:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "10688:7:14"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10697:2:14",
																							"nodeType": "YulLiteral",
																							"src": "10697:2:14",
																							"type": "",
																							"value": "31"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "10684:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "10684:3:14"
																					},
																					"nativeSrc": "10684:16:14",
																					"nodeType": "YulFunctionCall",
																					"src": "10684:16:14"
																				},
																				"variables": [
																					{
																						"name": "lengthmod",
																						"nativeSrc": "10671:9:14",
																						"nodeType": "YulTypedName",
																						"src": "10671:9:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "11021:70:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "11021:70:14",
																				"value": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tempBytes",
																									"nativeSrc": "11039:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "11039:9:14"
																								},
																								{
																									"name": "lengthmod",
																									"nativeSrc": "11050:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "11050:9:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "11035:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "11035:3:14"
																							},
																							"nativeSrc": "11035:25:14",
																							"nodeType": "YulFunctionCall",
																							"src": "11035:25:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "11066:4:14",
																									"nodeType": "YulLiteral",
																									"src": "11066:4:14",
																									"type": "",
																									"value": "0x20"
																								},
																								{
																									"arguments": [
																										{
																											"name": "lengthmod",
																											"nativeSrc": "11079:9:14",
																											"nodeType": "YulIdentifier",
																											"src": "11079:9:14"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nativeSrc": "11072:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "11072:6:14"
																									},
																									"nativeSrc": "11072:17:14",
																									"nodeType": "YulFunctionCall",
																									"src": "11072:17:14"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "11062:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "11062:3:14"
																							},
																							"nativeSrc": "11062:28:14",
																							"nodeType": "YulFunctionCall",
																							"src": "11062:28:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "11031:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "11031:3:14"
																					},
																					"nativeSrc": "11031:60:14",
																					"nodeType": "YulFunctionCall",
																					"src": "11031:60:14"
																				},
																				"variables": [
																					{
																						"name": "mc",
																						"nativeSrc": "11025:2:14",
																						"nodeType": "YulTypedName",
																						"src": "11025:2:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "11108:27:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "11108:27:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "mc",
																							"nativeSrc": "11123:2:14",
																							"nodeType": "YulIdentifier",
																							"src": "11123:2:14"
																						},
																						{
																							"name": "_length",
																							"nativeSrc": "11127:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "11127:7:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "11119:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "11119:3:14"
																					},
																					"nativeSrc": "11119:16:14",
																					"nodeType": "YulFunctionCall",
																					"src": "11119:16:14"
																				},
																				"variables": [
																					{
																						"name": "end",
																						"nativeSrc": "11112:3:14",
																						"nodeType": "YulTypedName",
																						"src": "11112:3:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "11517:61:14",
																					"nodeType": "YulBlock",
																					"src": "11517:61:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "mc",
																										"nativeSrc": "11546:2:14",
																										"nodeType": "YulIdentifier",
																										"src": "11546:2:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "cc",
																												"nativeSrc": "11556:2:14",
																												"nodeType": "YulIdentifier",
																												"src": "11556:2:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "11550:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "11550:5:14"
																										},
																										"nativeSrc": "11550:9:14",
																										"nodeType": "YulFunctionCall",
																										"src": "11550:9:14"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nativeSrc": "11539:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "11539:6:14"
																								},
																								"nativeSrc": "11539:21:14",
																								"nodeType": "YulFunctionCall",
																								"src": "11539:21:14"
																							},
																							"nativeSrc": "11539:21:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "11539:21:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "mc",
																							"nativeSrc": "11408:2:14",
																							"nodeType": "YulIdentifier",
																							"src": "11408:2:14"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "11412:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "11412:3:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "11405:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "11405:2:14"
																					},
																					"nativeSrc": "11405:11:14",
																					"nodeType": "YulFunctionCall",
																					"src": "11405:11:14"
																				},
																				"nativeSrc": "11153:425:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "11417:99:14",
																					"nodeType": "YulBlock",
																					"src": "11417:99:14",
																					"statements": [
																						{
																							"nativeSrc": "11439:19:14",
																							"nodeType": "YulAssignment",
																							"src": "11439:19:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "mc",
																										"nativeSrc": "11449:2:14",
																										"nodeType": "YulIdentifier",
																										"src": "11449:2:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "11453:4:14",
																										"nodeType": "YulLiteral",
																										"src": "11453:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "11445:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "11445:3:14"
																								},
																								"nativeSrc": "11445:13:14",
																								"nodeType": "YulFunctionCall",
																								"src": "11445:13:14"
																							},
																							"variableNames": [
																								{
																									"name": "mc",
																									"nativeSrc": "11439:2:14",
																									"nodeType": "YulIdentifier",
																									"src": "11439:2:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "11479:19:14",
																							"nodeType": "YulAssignment",
																							"src": "11479:19:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "cc",
																										"nativeSrc": "11489:2:14",
																										"nodeType": "YulIdentifier",
																										"src": "11489:2:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "11493:4:14",
																										"nodeType": "YulLiteral",
																										"src": "11493:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "11485:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "11485:3:14"
																								},
																								"nativeSrc": "11485:13:14",
																								"nodeType": "YulFunctionCall",
																								"src": "11485:13:14"
																							},
																							"variableNames": [
																								{
																									"name": "cc",
																									"nativeSrc": "11479:2:14",
																									"nodeType": "YulIdentifier",
																									"src": "11479:2:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "11157:247:14",
																					"nodeType": "YulBlock",
																					"src": "11157:247:14",
																					"statements": [
																						{
																							"nativeSrc": "11306:80:14",
																							"nodeType": "YulVariableDeclaration",
																							"src": "11306:80:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "_bytes",
																														"nativeSrc": "11328:6:14",
																														"nodeType": "YulIdentifier",
																														"src": "11328:6:14"
																													},
																													{
																														"name": "lengthmod",
																														"nativeSrc": "11336:9:14",
																														"nodeType": "YulIdentifier",
																														"src": "11336:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "11324:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "11324:3:14"
																												},
																												"nativeSrc": "11324:22:14",
																												"nodeType": "YulFunctionCall",
																												"src": "11324:22:14"
																											},
																											{
																												"arguments": [
																													{
																														"kind": "number",
																														"nativeSrc": "11352:4:14",
																														"nodeType": "YulLiteral",
																														"src": "11352:4:14",
																														"type": "",
																														"value": "0x20"
																													},
																													{
																														"arguments": [
																															{
																																"name": "lengthmod",
																																"nativeSrc": "11365:9:14",
																																"nodeType": "YulIdentifier",
																																"src": "11365:9:14"
																															}
																														],
																														"functionName": {
																															"name": "iszero",
																															"nativeSrc": "11358:6:14",
																															"nodeType": "YulIdentifier",
																															"src": "11358:6:14"
																														},
																														"nativeSrc": "11358:17:14",
																														"nodeType": "YulFunctionCall",
																														"src": "11358:17:14"
																													}
																												],
																												"functionName": {
																													"name": "mul",
																													"nativeSrc": "11348:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "11348:3:14"
																												},
																												"nativeSrc": "11348:28:14",
																												"nodeType": "YulFunctionCall",
																												"src": "11348:28:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "11320:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "11320:3:14"
																										},
																										"nativeSrc": "11320:57:14",
																										"nodeType": "YulFunctionCall",
																										"src": "11320:57:14"
																									},
																									{
																										"name": "_start",
																										"nativeSrc": "11379:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "11379:6:14"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "11316:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "11316:3:14"
																								},
																								"nativeSrc": "11316:70:14",
																								"nodeType": "YulFunctionCall",
																								"src": "11316:70:14"
																							},
																							"variables": [
																								{
																									"name": "cc",
																									"nativeSrc": "11310:2:14",
																									"nodeType": "YulTypedName",
																									"src": "11310:2:14",
																									"type": ""
																								}
																							]
																						}
																					]
																				},
																				"src": "11153:425:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "tempBytes",
																							"nativeSrc": "11603:9:14",
																							"nodeType": "YulIdentifier",
																							"src": "11603:9:14"
																						},
																						{
																							"name": "_length",
																							"nativeSrc": "11614:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "11614:7:14"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "11596:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11596:6:14"
																					},
																					"nativeSrc": "11596:26:14",
																					"nodeType": "YulFunctionCall",
																					"src": "11596:26:14"
																				},
																				"nativeSrc": "11596:26:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "11596:26:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11777:4:14",
																							"nodeType": "YulLiteral",
																							"src": "11777:4:14",
																							"type": "",
																							"value": "0x40"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "mc",
																											"nativeSrc": "11791:2:14",
																											"nodeType": "YulIdentifier",
																											"src": "11791:2:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "11795:2:14",
																											"nodeType": "YulLiteral",
																											"src": "11795:2:14",
																											"type": "",
																											"value": "31"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "11787:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "11787:3:14"
																									},
																									"nativeSrc": "11787:11:14",
																									"nodeType": "YulFunctionCall",
																									"src": "11787:11:14"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "11804:2:14",
																											"nodeType": "YulLiteral",
																											"src": "11804:2:14",
																											"type": "",
																											"value": "31"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nativeSrc": "11800:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "11800:3:14"
																									},
																									"nativeSrc": "11800:7:14",
																									"nodeType": "YulFunctionCall",
																									"src": "11800:7:14"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "11783:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "11783:3:14"
																							},
																							"nativeSrc": "11783:25:14",
																							"nodeType": "YulFunctionCall",
																							"src": "11783:25:14"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "11770:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11770:6:14"
																					},
																					"nativeSrc": "11770:39:14",
																					"nodeType": "YulFunctionCall",
																					"src": "11770:39:14"
																				},
																				"nativeSrc": "11770:39:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "11770:39:14"
																			}
																		]
																	},
																	"nativeSrc": "9856:1967:14",
																	"nodeType": "YulCase",
																	"src": "9856:1967:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9861:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9861:1:14",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "11927:291:14",
																		"nodeType": "YulBlock",
																		"src": "11927:291:14",
																		"statements": [
																			{
																				"nativeSrc": "11945:24:14",
																				"nodeType": "YulAssignment",
																				"src": "11945:24:14",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11964:4:14",
																							"nodeType": "YulLiteral",
																							"src": "11964:4:14",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "11958:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "11958:5:14"
																					},
																					"nativeSrc": "11958:11:14",
																					"nodeType": "YulFunctionCall",
																					"src": "11958:11:14"
																				},
																				"variableNames": [
																					{
																						"name": "tempBytes",
																						"nativeSrc": "11945:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11945:9:14"
																					}
																				]
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "tempBytes",
																							"nativeSrc": "12139:9:14",
																							"nodeType": "YulIdentifier",
																							"src": "12139:9:14"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "12150:1:14",
																							"nodeType": "YulLiteral",
																							"src": "12150:1:14",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "12132:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "12132:6:14"
																					},
																					"nativeSrc": "12132:20:14",
																					"nodeType": "YulFunctionCall",
																					"src": "12132:20:14"
																				},
																				"nativeSrc": "12132:20:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "12132:20:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "12177:4:14",
																							"nodeType": "YulLiteral",
																							"src": "12177:4:14",
																							"type": "",
																							"value": "0x40"
																						},
																						{
																							"arguments": [
																								{
																									"name": "tempBytes",
																									"nativeSrc": "12187:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "12187:9:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "12198:4:14",
																									"nodeType": "YulLiteral",
																									"src": "12198:4:14",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "12183:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "12183:3:14"
																							},
																							"nativeSrc": "12183:20:14",
																							"nodeType": "YulFunctionCall",
																							"src": "12183:20:14"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "12170:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "12170:6:14"
																					},
																					"nativeSrc": "12170:34:14",
																					"nodeType": "YulFunctionCall",
																					"src": "12170:34:14"
																				},
																				"nativeSrc": "12170:34:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "12170:34:14"
																			}
																		]
																	},
																	"nativeSrc": "11919:299:14",
																	"nodeType": "YulCase",
																	"src": "11919:299:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "_length",
																		"nativeSrc": "9835:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "9835:7:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9828:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9828:6:14"
																},
																"nativeSrc": "9828:15:14",
																"nodeType": "YulFunctionCall",
																"src": "9828:15:14"
															},
															"nativeSrc": "9821:2397:14",
															"nodeType": "YulSwitch",
															"src": "9821:2397:14"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2127,
														"isOffset": false,
														"isSlot": false,
														"src": "11328:6:14",
														"valueSize": 1
													},
													{
														"declaration": 2131,
														"isOffset": false,
														"isSlot": false,
														"src": "10688:7:14",
														"valueSize": 1
													},
													{
														"declaration": 2131,
														"isOffset": false,
														"isSlot": false,
														"src": "11127:7:14",
														"valueSize": 1
													},
													{
														"declaration": 2131,
														"isOffset": false,
														"isSlot": false,
														"src": "11614:7:14",
														"valueSize": 1
													},
													{
														"declaration": 2131,
														"isOffset": false,
														"isSlot": false,
														"src": "9835:7:14",
														"valueSize": 1
													},
													{
														"declaration": 2129,
														"isOffset": false,
														"isSlot": false,
														"src": "11379:6:14",
														"valueSize": 1
													},
													{
														"declaration": 2156,
														"isOffset": false,
														"isSlot": false,
														"src": "10019:9:14",
														"valueSize": 1
													},
													{
														"declaration": 2156,
														"isOffset": false,
														"isSlot": false,
														"src": "11039:9:14",
														"valueSize": 1
													},
													{
														"declaration": 2156,
														"isOffset": false,
														"isSlot": false,
														"src": "11603:9:14",
														"valueSize": 1
													},
													{
														"declaration": 2156,
														"isOffset": false,
														"isSlot": false,
														"src": "11945:9:14",
														"valueSize": 1
													},
													{
														"declaration": 2156,
														"isOffset": false,
														"isSlot": false,
														"src": "12139:9:14",
														"valueSize": 1
													},
													{
														"declaration": 2156,
														"isOffset": false,
														"isSlot": false,
														"src": "12187:9:14",
														"valueSize": 1
													}
												],
												"id": 2158,
												"nodeType": "InlineAssembly",
												"src": "9798:2430:14"
											},
											{
												"expression": {
													"id": 2159,
													"name": "tempBytes",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2156,
													"src": "12245:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2135,
												"id": 2160,
												"nodeType": "Return",
												"src": "12238:16:14"
											}
										]
									},
									"id": 2162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "slice",
									"nameLocation": "9466:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "_bytes",
												"nameLocation": "9494:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "9481:19:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9481:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "_start",
												"nameLocation": "9518:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "9510:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9510:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2131,
												"mutability": "mutable",
												"name": "_length",
												"nameLocation": "9542:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "9534:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9534:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9471:84:14"
									},
									"returnParameters": {
										"id": 2135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "9603:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2133,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9603:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9602:14:14"
									},
									"scope": 2431,
									"src": "9457:2804:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2187,
										"nodeType": "Block",
										"src": "12355:266:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2172,
																	"name": "_bytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2164,
																	"src": "12373:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12380:6:14",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12373:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2174,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2166,
																	"src": "12390:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3230",
																	"id": 2175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12399:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																},
																"src": "12390:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12373:28:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f416464726573735f6f75744f66426f756e6473",
															"id": 2178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12403:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d",
																"typeString": "literal_string \"toAddress_outOfBounds\""
															},
															"value": "toAddress_outOfBounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d",
																"typeString": "literal_string \"toAddress_outOfBounds\""
															}
														],
														"id": 2171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12365:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12365:62:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2180,
												"nodeType": "ExpressionStatement",
												"src": "12365:62:14"
											},
											{
												"assignments": [
													2182
												],
												"declarations": [
													{
														"constant": false,
														"id": 2182,
														"mutability": "mutable",
														"name": "tempAddress",
														"nameLocation": "12445:11:14",
														"nodeType": "VariableDeclaration",
														"scope": 2187,
														"src": "12437:19:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2181,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12437:7:14",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2183,
												"nodeType": "VariableDeclarationStatement",
												"src": "12437:19:14"
											},
											{
												"AST": {
													"nativeSrc": "12476:110:14",
													"nodeType": "YulBlock",
													"src": "12476:110:14",
													"statements": [
														{
															"nativeSrc": "12490:86:14",
															"nodeType": "YulAssignment",
															"src": "12490:86:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_bytes",
																								"nativeSrc": "12523:6:14",
																								"nodeType": "YulIdentifier",
																								"src": "12523:6:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12531:4:14",
																								"nodeType": "YulLiteral",
																								"src": "12531:4:14",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "12519:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "12519:3:14"
																						},
																						"nativeSrc": "12519:17:14",
																						"nodeType": "YulFunctionCall",
																						"src": "12519:17:14"
																					},
																					{
																						"name": "_start",
																						"nativeSrc": "12538:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "12538:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12515:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12515:3:14"
																				},
																				"nativeSrc": "12515:30:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12515:30:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12509:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "12509:5:14"
																		},
																		"nativeSrc": "12509:37:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12509:37:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12548:27:14",
																		"nodeType": "YulLiteral",
																		"src": "12548:27:14",
																		"type": "",
																		"value": "0x1000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12505:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12505:3:14"
																},
																"nativeSrc": "12505:71:14",
																"nodeType": "YulFunctionCall",
																"src": "12505:71:14"
															},
															"variableNames": [
																{
																	"name": "tempAddress",
																	"nativeSrc": "12490:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "12490:11:14"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2164,
														"isOffset": false,
														"isSlot": false,
														"src": "12523:6:14",
														"valueSize": 1
													},
													{
														"declaration": 2166,
														"isOffset": false,
														"isSlot": false,
														"src": "12538:6:14",
														"valueSize": 1
													},
													{
														"declaration": 2182,
														"isOffset": false,
														"isSlot": false,
														"src": "12490:11:14",
														"valueSize": 1
													}
												],
												"id": 2184,
												"nodeType": "InlineAssembly",
												"src": "12467:119:14"
											},
											{
												"expression": {
													"id": 2185,
													"name": "tempAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2182,
													"src": "12603:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2170,
												"id": 2186,
												"nodeType": "Return",
												"src": "12596:18:14"
											}
										]
									},
									"id": 2188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toAddress",
									"nameLocation": "12276:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "_bytes",
												"nameLocation": "12299:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2188,
												"src": "12286:19:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2163,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12286:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "_start",
												"nameLocation": "12315:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2188,
												"src": "12307:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12307:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12285:37:14"
									},
									"returnParameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2188,
												"src": "12346:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12346:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12345:9:14"
									},
									"scope": 2431,
									"src": "12267:354:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2213,
										"nodeType": "Block",
										"src": "12711:218:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2198,
																	"name": "_bytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2190,
																	"src": "12729:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12736:6:14",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12729:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2200,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2192,
																	"src": "12746:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12755:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "12746:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12729:27:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f55696e74385f6f75744f66426f756e6473",
															"id": 2204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12759:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1",
																"typeString": "literal_string \"toUint8_outOfBounds\""
															},
															"value": "toUint8_outOfBounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1",
																"typeString": "literal_string \"toUint8_outOfBounds\""
															}
														],
														"id": 2197,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12721:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12721:60:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2206,
												"nodeType": "ExpressionStatement",
												"src": "12721:60:14"
											},
											{
												"assignments": [
													2208
												],
												"declarations": [
													{
														"constant": false,
														"id": 2208,
														"mutability": "mutable",
														"name": "tempUint",
														"nameLocation": "12797:8:14",
														"nodeType": "VariableDeclaration",
														"scope": 2213,
														"src": "12791:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 2207,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "12791:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2209,
												"nodeType": "VariableDeclarationStatement",
												"src": "12791:14:14"
											},
											{
												"AST": {
													"nativeSrc": "12825:72:14",
													"nodeType": "YulBlock",
													"src": "12825:72:14",
													"statements": [
														{
															"nativeSrc": "12839:48:14",
															"nodeType": "YulAssignment",
															"src": "12839:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_bytes",
																						"nativeSrc": "12865:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "12865:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12873:3:14",
																						"nodeType": "YulLiteral",
																						"src": "12873:3:14",
																						"type": "",
																						"value": "0x1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12861:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12861:3:14"
																				},
																				"nativeSrc": "12861:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12861:16:14"
																			},
																			{
																				"name": "_start",
																				"nativeSrc": "12879:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12879:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12857:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12857:3:14"
																		},
																		"nativeSrc": "12857:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12857:29:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12851:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "12851:5:14"
																},
																"nativeSrc": "12851:36:14",
																"nodeType": "YulFunctionCall",
																"src": "12851:36:14"
															},
															"variableNames": [
																{
																	"name": "tempUint",
																	"nativeSrc": "12839:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "12839:8:14"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2190,
														"isOffset": false,
														"isSlot": false,
														"src": "12865:6:14",
														"valueSize": 1
													},
													{
														"declaration": 2192,
														"isOffset": false,
														"isSlot": false,
														"src": "12879:6:14",
														"valueSize": 1
													},
													{
														"declaration": 2208,
														"isOffset": false,
														"isSlot": false,
														"src": "12839:8:14",
														"valueSize": 1
													}
												],
												"id": 2210,
												"nodeType": "InlineAssembly",
												"src": "12816:81:14"
											},
											{
												"expression": {
													"id": 2211,
													"name": "tempUint",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2208,
													"src": "12914:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 2196,
												"id": 2212,
												"nodeType": "Return",
												"src": "12907:15:14"
											}
										]
									},
									"id": 2214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nameLocation": "12636:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "_bytes",
												"nameLocation": "12657:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "12644:19:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2189,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12644:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "_start",
												"nameLocation": "12673:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "12665:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12665:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12643:37:14"
									},
									"returnParameters": {
										"id": 2196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "12704:5:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2194,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "12704:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12703:7:14"
									},
									"scope": 2431,
									"src": "12627:302:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2239,
										"nodeType": "Block",
										"src": "13021:219:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2224,
																	"name": "_bytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2216,
																	"src": "13039:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13046:6:14",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "13039:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2226,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2218,
																	"src": "13056:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13065:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "13056:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13039:27:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f55696e7431365f6f75744f66426f756e6473",
															"id": 2230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13068:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_414233483a71244a4f2700455a9733e71511b5279e381bdd2af6d44b1b09ecab",
																"typeString": "literal_string \"toUint16_outOfBounds\""
															},
															"value": "toUint16_outOfBounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_414233483a71244a4f2700455a9733e71511b5279e381bdd2af6d44b1b09ecab",
																"typeString": "literal_string \"toUint16_outOfBounds\""
															}
														],
														"id": 2223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13031:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13031:60:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2232,
												"nodeType": "ExpressionStatement",
												"src": "13031:60:14"
											},
											{
												"assignments": [
													2234
												],
												"declarations": [
													{
														"constant": false,
														"id": 2234,
														"mutability": "mutable",
														"name": "tempUint",
														"nameLocation": "13108:8:14",
														"nodeType": "VariableDeclaration",
														"scope": 2239,
														"src": "13101:15:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 2233,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "13101:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2235,
												"nodeType": "VariableDeclarationStatement",
												"src": "13101:15:14"
											},
											{
												"AST": {
													"nativeSrc": "13136:72:14",
													"nodeType": "YulBlock",
													"src": "13136:72:14",
													"statements": [
														{
															"nativeSrc": "13150:48:14",
															"nodeType": "YulAssignment",
															"src": "13150:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_bytes",
																						"nativeSrc": "13176:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "13176:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13184:3:14",
																						"nodeType": "YulLiteral",
																						"src": "13184:3:14",
																						"type": "",
																						"value": "0x2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13172:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13172:3:14"
																				},
																				"nativeSrc": "13172:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13172:16:14"
																			},
																			{
																				"name": "_start",
																				"nativeSrc": "13190:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "13190:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13168:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13168:3:14"
																		},
																		"nativeSrc": "13168:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13168:29:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13162:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "13162:5:14"
																},
																"nativeSrc": "13162:36:14",
																"nodeType": "YulFunctionCall",
																"src": "13162:36:14"
															},
															"variableNames": [
																{
																	"name": "tempUint",
																	"nativeSrc": "13150:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "13150:8:14"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2216,
														"isOffset": false,
														"isSlot": false,
														"src": "13176:6:14",
														"valueSize": 1
													},
													{
														"declaration": 2218,
														"isOffset": false,
														"isSlot": false,
														"src": "13190:6:14",
														"valueSize": 1
													},
													{
														"declaration": 2234,
														"isOffset": false,
														"isSlot": false,
														"src": "13150:8:14",
														"valueSize": 1
													}
												],
												"id": 2236,
												"nodeType": "InlineAssembly",
												"src": "13127:81:14"
											},
											{
												"expression": {
													"id": 2237,
													"name": "tempUint",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2234,
													"src": "13225:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 2222,
												"id": 2238,
												"nodeType": "Return",
												"src": "13218:15:14"
											}
										]
									},
									"id": 2240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nameLocation": "12944:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "_bytes",
												"nameLocation": "12966:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "12953:19:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2215,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12953:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2218,
												"mutability": "mutable",
												"name": "_start",
												"nameLocation": "12982:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "12974:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12974:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12952:37:14"
									},
									"returnParameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "13013:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2220,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "13013:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13012:8:14"
									},
									"scope": 2431,
									"src": "12935:305:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2265,
										"nodeType": "Block",
										"src": "13332:219:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2250,
																	"name": "_bytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2242,
																	"src": "13350:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13357:6:14",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "13350:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2252,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2244,
																	"src": "13367:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13376:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "13367:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13350:27:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f55696e7433325f6f75744f66426f756e6473",
															"id": 2256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13379:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e0a09853867d05bef4b1d534052126bc72acd3515e1725b9b280e16d988e6ccf",
																"typeString": "literal_string \"toUint32_outOfBounds\""
															},
															"value": "toUint32_outOfBounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e0a09853867d05bef4b1d534052126bc72acd3515e1725b9b280e16d988e6ccf",
																"typeString": "literal_string \"toUint32_outOfBounds\""
															}
														],
														"id": 2249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13342:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13342:60:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2258,
												"nodeType": "ExpressionStatement",
												"src": "13342:60:14"
											},
											{
												"assignments": [
													2260
												],
												"declarations": [
													{
														"constant": false,
														"id": 2260,
														"mutability": "mutable",
														"name": "tempUint",
														"nameLocation": "13419:8:14",
														"nodeType": "VariableDeclaration",
														"scope": 2265,
														"src": "13412:15:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 2259,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "13412:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2261,
												"nodeType": "VariableDeclarationStatement",
												"src": "13412:15:14"
											},
											{
												"AST": {
													"nativeSrc": "13447:72:14",
													"nodeType": "YulBlock",
													"src": "13447:72:14",
													"statements": [
														{
															"nativeSrc": "13461:48:14",
															"nodeType": "YulAssignment",
															"src": "13461:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_bytes",
																						"nativeSrc": "13487:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "13487:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13495:3:14",
																						"nodeType": "YulLiteral",
																						"src": "13495:3:14",
																						"type": "",
																						"value": "0x4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13483:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13483:3:14"
																				},
																				"nativeSrc": "13483:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13483:16:14"
																			},
																			{
																				"name": "_start",
																				"nativeSrc": "13501:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "13501:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13479:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13479:3:14"
																		},
																		"nativeSrc": "13479:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13479:29:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13473:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "13473:5:14"
																},
																"nativeSrc": "13473:36:14",
																"nodeType": "YulFunctionCall",
																"src": "13473:36:14"
															},
															"variableNames": [
																{
																	"name": "tempUint",
																	"nativeSrc": "13461:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "13461:8:14"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2242,
														"isOffset": false,
														"isSlot": false,
														"src": "13487:6:14",
														"valueSize": 1
													},
													{
														"declaration": 2244,
														"isOffset": false,
														"isSlot": false,
														"src": "13501:6:14",
														"valueSize": 1
													},
													{
														"declaration": 2260,
														"isOffset": false,
														"isSlot": false,
														"src": "13461:8:14",
														"valueSize": 1
													}
												],
												"id": 2262,
												"nodeType": "InlineAssembly",
												"src": "13438:81:14"
											},
											{
												"expression": {
													"id": 2263,
													"name": "tempUint",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2260,
													"src": "13536:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 2248,
												"id": 2264,
												"nodeType": "Return",
												"src": "13529:15:14"
											}
										]
									},
									"id": 2266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nameLocation": "13255:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "_bytes",
												"nameLocation": "13277:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "13264:19:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13264:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "_start",
												"nameLocation": "13293:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "13285:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13285:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13263:37:14"
									},
									"returnParameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "13324:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2246,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "13324:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13323:8:14"
									},
									"scope": 2431,
									"src": "13246:305:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2291,
										"nodeType": "Block",
										"src": "13643:219:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2276,
																	"name": "_bytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2268,
																	"src": "13661:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13668:6:14",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "13661:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2278,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2270,
																	"src": "13678:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13687:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "13678:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13661:27:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f55696e7436345f6f75744f66426f756e6473",
															"id": 2282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13690:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55885cc1e15ebd0ff3d9803b39476f6ee2279f42aa3070b40f2de433347c0145",
																"typeString": "literal_string \"toUint64_outOfBounds\""
															},
															"value": "toUint64_outOfBounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55885cc1e15ebd0ff3d9803b39476f6ee2279f42aa3070b40f2de433347c0145",
																"typeString": "literal_string \"toUint64_outOfBounds\""
															}
														],
														"id": 2275,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13653:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13653:60:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2284,
												"nodeType": "ExpressionStatement",
												"src": "13653:60:14"
											},
											{
												"assignments": [
													2286
												],
												"declarations": [
													{
														"constant": false,
														"id": 2286,
														"mutability": "mutable",
														"name": "tempUint",
														"nameLocation": "13730:8:14",
														"nodeType": "VariableDeclaration",
														"scope": 2291,
														"src": "13723:15:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 2285,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "13723:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2287,
												"nodeType": "VariableDeclarationStatement",
												"src": "13723:15:14"
											},
											{
												"AST": {
													"nativeSrc": "13758:72:14",
													"nodeType": "YulBlock",
													"src": "13758:72:14",
													"statements": [
														{
															"nativeSrc": "13772:48:14",
															"nodeType": "YulAssignment",
															"src": "13772:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_bytes",
																						"nativeSrc": "13798:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "13798:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13806:3:14",
																						"nodeType": "YulLiteral",
																						"src": "13806:3:14",
																						"type": "",
																						"value": "0x8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13794:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13794:3:14"
																				},
																				"nativeSrc": "13794:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13794:16:14"
																			},
																			{
																				"name": "_start",
																				"nativeSrc": "13812:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "13812:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13790:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13790:3:14"
																		},
																		"nativeSrc": "13790:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13790:29:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13784:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "13784:5:14"
																},
																"nativeSrc": "13784:36:14",
																"nodeType": "YulFunctionCall",
																"src": "13784:36:14"
															},
															"variableNames": [
																{
																	"name": "tempUint",
																	"nativeSrc": "13772:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "13772:8:14"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2268,
														"isOffset": false,
														"isSlot": false,
														"src": "13798:6:14",
														"valueSize": 1
													},
													{
														"declaration": 2270,
														"isOffset": false,
														"isSlot": false,
														"src": "13812:6:14",
														"valueSize": 1
													},
													{
														"declaration": 2286,
														"isOffset": false,
														"isSlot": false,
														"src": "13772:8:14",
														"valueSize": 1
													}
												],
												"id": 2288,
												"nodeType": "InlineAssembly",
												"src": "13749:81:14"
											},
											{
												"expression": {
													"id": 2289,
													"name": "tempUint",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2286,
													"src": "13847:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 2274,
												"id": 2290,
												"nodeType": "Return",
												"src": "13840:15:14"
											}
										]
									},
									"id": 2292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nameLocation": "13566:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "_bytes",
												"nameLocation": "13588:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "13575:19:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2267,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13575:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "_start",
												"nameLocation": "13604:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "13596:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13596:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13574:37:14"
									},
									"returnParameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "13635:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2272,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13635:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13634:8:14"
									},
									"scope": 2431,
									"src": "13557:305:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2317,
										"nodeType": "Block",
										"src": "13954:220:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2302,
																	"name": "_bytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2294,
																	"src": "13972:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13979:6:14",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "13972:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2304,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2296,
																	"src": "13989:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3132",
																	"id": 2305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13998:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_12_by_1",
																		"typeString": "int_const 12"
																	},
																	"value": "12"
																},
																"src": "13989:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13972:28:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f55696e7439365f6f75744f66426f756e6473",
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14002:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245175b34ac1d95c460f2a4fcb106dbfea12949a3cbb7ae3362c49144bb9feb7",
																"typeString": "literal_string \"toUint96_outOfBounds\""
															},
															"value": "toUint96_outOfBounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245175b34ac1d95c460f2a4fcb106dbfea12949a3cbb7ae3362c49144bb9feb7",
																"typeString": "literal_string \"toUint96_outOfBounds\""
															}
														],
														"id": 2301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13964:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13964:61:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2310,
												"nodeType": "ExpressionStatement",
												"src": "13964:61:14"
											},
											{
												"assignments": [
													2312
												],
												"declarations": [
													{
														"constant": false,
														"id": 2312,
														"mutability": "mutable",
														"name": "tempUint",
														"nameLocation": "14042:8:14",
														"nodeType": "VariableDeclaration",
														"scope": 2317,
														"src": "14035:15:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 2311,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "14035:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2313,
												"nodeType": "VariableDeclarationStatement",
												"src": "14035:15:14"
											},
											{
												"AST": {
													"nativeSrc": "14070:72:14",
													"nodeType": "YulBlock",
													"src": "14070:72:14",
													"statements": [
														{
															"nativeSrc": "14084:48:14",
															"nodeType": "YulAssignment",
															"src": "14084:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_bytes",
																						"nativeSrc": "14110:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "14110:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14118:3:14",
																						"nodeType": "YulLiteral",
																						"src": "14118:3:14",
																						"type": "",
																						"value": "0xc"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14106:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "14106:3:14"
																				},
																				"nativeSrc": "14106:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "14106:16:14"
																			},
																			{
																				"name": "_start",
																				"nativeSrc": "14124:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "14124:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14102:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14102:3:14"
																		},
																		"nativeSrc": "14102:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14102:29:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14096:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "14096:5:14"
																},
																"nativeSrc": "14096:36:14",
																"nodeType": "YulFunctionCall",
																"src": "14096:36:14"
															},
															"variableNames": [
																{
																	"name": "tempUint",
																	"nativeSrc": "14084:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "14084:8:14"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2294,
														"isOffset": false,
														"isSlot": false,
														"src": "14110:6:14",
														"valueSize": 1
													},
													{
														"declaration": 2296,
														"isOffset": false,
														"isSlot": false,
														"src": "14124:6:14",
														"valueSize": 1
													},
													{
														"declaration": 2312,
														"isOffset": false,
														"isSlot": false,
														"src": "14084:8:14",
														"valueSize": 1
													}
												],
												"id": 2314,
												"nodeType": "InlineAssembly",
												"src": "14061:81:14"
											},
											{
												"expression": {
													"id": 2315,
													"name": "tempUint",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2312,
													"src": "14159:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 2300,
												"id": 2316,
												"nodeType": "Return",
												"src": "14152:15:14"
											}
										]
									},
									"id": 2318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint96",
									"nameLocation": "13877:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2294,
												"mutability": "mutable",
												"name": "_bytes",
												"nameLocation": "13899:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2318,
												"src": "13886:19:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2293,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13886:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "_start",
												"nameLocation": "13915:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2318,
												"src": "13907:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13907:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13885:37:14"
									},
									"returnParameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2318,
												"src": "13946:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 2298,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "13946:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13945:8:14"
									},
									"scope": 2431,
									"src": "13868:306:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2343,
										"nodeType": "Block",
										"src": "14268:223:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2328,
																	"name": "_bytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2320,
																	"src": "14286:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14293:6:14",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "14286:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2330,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2322,
																	"src": "14303:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14312:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14303:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14286:28:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f55696e743132385f6f75744f66426f756e6473",
															"id": 2334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14316:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_17474b965d7fdba029328487966488b63c32338e60aea74eafb22325bb8d90dc",
																"typeString": "literal_string \"toUint128_outOfBounds\""
															},
															"value": "toUint128_outOfBounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_17474b965d7fdba029328487966488b63c32338e60aea74eafb22325bb8d90dc",
																"typeString": "literal_string \"toUint128_outOfBounds\""
															}
														],
														"id": 2327,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14278:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14278:62:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2336,
												"nodeType": "ExpressionStatement",
												"src": "14278:62:14"
											},
											{
												"assignments": [
													2338
												],
												"declarations": [
													{
														"constant": false,
														"id": 2338,
														"mutability": "mutable",
														"name": "tempUint",
														"nameLocation": "14358:8:14",
														"nodeType": "VariableDeclaration",
														"scope": 2343,
														"src": "14350:16:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 2337,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "14350:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2339,
												"nodeType": "VariableDeclarationStatement",
												"src": "14350:16:14"
											},
											{
												"AST": {
													"nativeSrc": "14386:73:14",
													"nodeType": "YulBlock",
													"src": "14386:73:14",
													"statements": [
														{
															"nativeSrc": "14400:49:14",
															"nodeType": "YulAssignment",
															"src": "14400:49:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_bytes",
																						"nativeSrc": "14426:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "14426:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14434:4:14",
																						"nodeType": "YulLiteral",
																						"src": "14434:4:14",
																						"type": "",
																						"value": "0x10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14422:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "14422:3:14"
																				},
																				"nativeSrc": "14422:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "14422:17:14"
																			},
																			{
																				"name": "_start",
																				"nativeSrc": "14441:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "14441:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14418:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14418:3:14"
																		},
																		"nativeSrc": "14418:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14418:30:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14412:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "14412:5:14"
																},
																"nativeSrc": "14412:37:14",
																"nodeType": "YulFunctionCall",
																"src": "14412:37:14"
															},
															"variableNames": [
																{
																	"name": "tempUint",
																	"nativeSrc": "14400:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "14400:8:14"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2320,
														"isOffset": false,
														"isSlot": false,
														"src": "14426:6:14",
														"valueSize": 1
													},
													{
														"declaration": 2322,
														"isOffset": false,
														"isSlot": false,
														"src": "14441:6:14",
														"valueSize": 1
													},
													{
														"declaration": 2338,
														"isOffset": false,
														"isSlot": false,
														"src": "14400:8:14",
														"valueSize": 1
													}
												],
												"id": 2340,
												"nodeType": "InlineAssembly",
												"src": "14377:82:14"
											},
											{
												"expression": {
													"id": 2341,
													"name": "tempUint",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2338,
													"src": "14476:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 2326,
												"id": 2342,
												"nodeType": "Return",
												"src": "14469:15:14"
											}
										]
									},
									"id": 2344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "14189:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "_bytes",
												"nameLocation": "14212:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2344,
												"src": "14199:19:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2319,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14199:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2322,
												"mutability": "mutable",
												"name": "_start",
												"nameLocation": "14228:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2344,
												"src": "14220:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14220:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14198:37:14"
									},
									"returnParameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2344,
												"src": "14259:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2324,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "14259:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14258:9:14"
									},
									"scope": 2431,
									"src": "14180:311:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2369,
										"nodeType": "Block",
										"src": "14585:223:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2354,
																	"name": "_bytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2346,
																	"src": "14603:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14610:6:14",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "14603:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2356,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2348,
																	"src": "14620:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14629:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14620:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14603:28:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f55696e743235365f6f75744f66426f756e6473",
															"id": 2360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14633:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b",
																"typeString": "literal_string \"toUint256_outOfBounds\""
															},
															"value": "toUint256_outOfBounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b",
																"typeString": "literal_string \"toUint256_outOfBounds\""
															}
														],
														"id": 2353,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14595:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14595:62:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2362,
												"nodeType": "ExpressionStatement",
												"src": "14595:62:14"
											},
											{
												"assignments": [
													2364
												],
												"declarations": [
													{
														"constant": false,
														"id": 2364,
														"mutability": "mutable",
														"name": "tempUint",
														"nameLocation": "14675:8:14",
														"nodeType": "VariableDeclaration",
														"scope": 2369,
														"src": "14667:16:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2363,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14667:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2365,
												"nodeType": "VariableDeclarationStatement",
												"src": "14667:16:14"
											},
											{
												"AST": {
													"nativeSrc": "14703:73:14",
													"nodeType": "YulBlock",
													"src": "14703:73:14",
													"statements": [
														{
															"nativeSrc": "14717:49:14",
															"nodeType": "YulAssignment",
															"src": "14717:49:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_bytes",
																						"nativeSrc": "14743:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "14743:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14751:4:14",
																						"nodeType": "YulLiteral",
																						"src": "14751:4:14",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14739:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "14739:3:14"
																				},
																				"nativeSrc": "14739:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "14739:17:14"
																			},
																			{
																				"name": "_start",
																				"nativeSrc": "14758:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "14758:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14735:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14735:3:14"
																		},
																		"nativeSrc": "14735:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14735:30:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14729:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "14729:5:14"
																},
																"nativeSrc": "14729:37:14",
																"nodeType": "YulFunctionCall",
																"src": "14729:37:14"
															},
															"variableNames": [
																{
																	"name": "tempUint",
																	"nativeSrc": "14717:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "14717:8:14"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2346,
														"isOffset": false,
														"isSlot": false,
														"src": "14743:6:14",
														"valueSize": 1
													},
													{
														"declaration": 2348,
														"isOffset": false,
														"isSlot": false,
														"src": "14758:6:14",
														"valueSize": 1
													},
													{
														"declaration": 2364,
														"isOffset": false,
														"isSlot": false,
														"src": "14717:8:14",
														"valueSize": 1
													}
												],
												"id": 2366,
												"nodeType": "InlineAssembly",
												"src": "14694:82:14"
											},
											{
												"expression": {
													"id": 2367,
													"name": "tempUint",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2364,
													"src": "14793:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2352,
												"id": 2368,
												"nodeType": "Return",
												"src": "14786:15:14"
											}
										]
									},
									"id": 2370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "14506:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "_bytes",
												"nameLocation": "14529:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "14516:19:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14516:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2348,
												"mutability": "mutable",
												"name": "_start",
												"nameLocation": "14545:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "14537:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14537:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14515:37:14"
									},
									"returnParameters": {
										"id": 2352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "14576:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14576:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14575:9:14"
									},
									"scope": 2431,
									"src": "14497:311:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2395,
										"nodeType": "Block",
										"src": "14902:232:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2380,
																	"name": "_bytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2372,
																	"src": "14920:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14927:6:14",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "14920:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2382,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2374,
																	"src": "14937:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14946:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14937:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14920:28:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f427974657333325f6f75744f66426f756e6473",
															"id": 2386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14950:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2",
																"typeString": "literal_string \"toBytes32_outOfBounds\""
															},
															"value": "toBytes32_outOfBounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2",
																"typeString": "literal_string \"toBytes32_outOfBounds\""
															}
														],
														"id": 2379,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14912:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14912:62:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2388,
												"nodeType": "ExpressionStatement",
												"src": "14912:62:14"
											},
											{
												"assignments": [
													2390
												],
												"declarations": [
													{
														"constant": false,
														"id": 2390,
														"mutability": "mutable",
														"name": "tempBytes32",
														"nameLocation": "14992:11:14",
														"nodeType": "VariableDeclaration",
														"scope": 2395,
														"src": "14984:19:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2389,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "14984:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2391,
												"nodeType": "VariableDeclarationStatement",
												"src": "14984:19:14"
											},
											{
												"AST": {
													"nativeSrc": "15023:76:14",
													"nodeType": "YulBlock",
													"src": "15023:76:14",
													"statements": [
														{
															"nativeSrc": "15037:52:14",
															"nodeType": "YulAssignment",
															"src": "15037:52:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_bytes",
																						"nativeSrc": "15066:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "15066:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15074:4:14",
																						"nodeType": "YulLiteral",
																						"src": "15074:4:14",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15062:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "15062:3:14"
																				},
																				"nativeSrc": "15062:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "15062:17:14"
																			},
																			{
																				"name": "_start",
																				"nativeSrc": "15081:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "15081:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15058:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15058:3:14"
																		},
																		"nativeSrc": "15058:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15058:30:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15052:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "15052:5:14"
																},
																"nativeSrc": "15052:37:14",
																"nodeType": "YulFunctionCall",
																"src": "15052:37:14"
															},
															"variableNames": [
																{
																	"name": "tempBytes32",
																	"nativeSrc": "15037:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "15037:11:14"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2372,
														"isOffset": false,
														"isSlot": false,
														"src": "15066:6:14",
														"valueSize": 1
													},
													{
														"declaration": 2374,
														"isOffset": false,
														"isSlot": false,
														"src": "15081:6:14",
														"valueSize": 1
													},
													{
														"declaration": 2390,
														"isOffset": false,
														"isSlot": false,
														"src": "15037:11:14",
														"valueSize": 1
													}
												],
												"id": 2392,
												"nodeType": "InlineAssembly",
												"src": "15014:85:14"
											},
											{
												"expression": {
													"id": 2393,
													"name": "tempBytes32",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2390,
													"src": "15116:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2378,
												"id": 2394,
												"nodeType": "Return",
												"src": "15109:18:14"
											}
										]
									},
									"id": 2396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toBytes32",
									"nameLocation": "14823:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "_bytes",
												"nameLocation": "14846:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "14833:19:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2371,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14833:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "_start",
												"nameLocation": "14862:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "14854:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14854:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14832:37:14"
									},
									"returnParameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "14893:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2376,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "14893:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14892:9:14"
									},
									"scope": 2431,
									"src": "14814:320:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2412,
										"nodeType": "Block",
										"src": "15233:1323:14",
										"statements": [
											{
												"assignments": [
													2406
												],
												"declarations": [
													{
														"constant": false,
														"id": 2406,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "15248:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2412,
														"src": "15243:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2405,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15243:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2408,
												"initialValue": {
													"hexValue": "74727565",
													"id": 2407,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15258:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15243:19:14"
											},
											{
												"AST": {
													"nativeSrc": "15282:1243:14",
													"nodeType": "YulBlock",
													"src": "15282:1243:14",
													"statements": [
														{
															"nativeSrc": "15296:30:14",
															"nodeType": "YulVariableDeclaration",
															"src": "15296:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "_preBytes",
																		"nativeSrc": "15316:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "15316:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15310:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "15310:5:14"
																},
																"nativeSrc": "15310:16:14",
																"nodeType": "YulFunctionCall",
																"src": "15310:16:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "15300:6:14",
																	"nodeType": "YulTypedName",
																	"src": "15300:6:14",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "15459:961:14",
																		"nodeType": "YulBlock",
																		"src": "15459:961:14",
																		"statements": [
																			{
																				"nativeSrc": "15688:11:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15688:11:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "15698:1:14",
																					"nodeType": "YulLiteral",
																					"src": "15698:1:14",
																					"type": "",
																					"value": "1"
																				},
																				"variables": [
																					{
																						"name": "cb",
																						"nativeSrc": "15692:2:14",
																						"nodeType": "YulTypedName",
																						"src": "15692:2:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "15717:30:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15717:30:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "_preBytes",
																							"nativeSrc": "15731:9:14",
																							"nodeType": "YulIdentifier",
																							"src": "15731:9:14"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "15742:4:14",
																							"nodeType": "YulLiteral",
																							"src": "15742:4:14",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "15727:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "15727:3:14"
																					},
																					"nativeSrc": "15727:20:14",
																					"nodeType": "YulFunctionCall",
																					"src": "15727:20:14"
																				},
																				"variables": [
																					{
																						"name": "mc",
																						"nativeSrc": "15721:2:14",
																						"nodeType": "YulTypedName",
																						"src": "15721:2:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "15764:26:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15764:26:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "mc",
																							"nativeSrc": "15779:2:14",
																							"nodeType": "YulIdentifier",
																							"src": "15779:2:14"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "15783:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "15783:6:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "15775:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "15775:3:14"
																					},
																					"nativeSrc": "15775:15:14",
																					"nodeType": "YulFunctionCall",
																					"src": "15775:15:14"
																				},
																				"variables": [
																					{
																						"name": "end",
																						"nativeSrc": "15768:3:14",
																						"nodeType": "YulTypedName",
																						"src": "15768:3:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "16122:284:14",
																					"nodeType": "YulBlock",
																					"src": "16122:284:14",
																					"statements": [
																						{
																							"body": {
																								"nativeSrc": "16258:130:14",
																								"nodeType": "YulBlock",
																								"src": "16258:130:14",
																								"statements": [
																									{
																										"nativeSrc": "16322:12:14",
																										"nodeType": "YulAssignment",
																										"src": "16322:12:14",
																										"value": {
																											"kind": "number",
																											"nativeSrc": "16333:1:14",
																											"nodeType": "YulLiteral",
																											"src": "16333:1:14",
																											"type": "",
																											"value": "0"
																										},
																										"variableNames": [
																											{
																												"name": "success",
																												"nativeSrc": "16322:7:14",
																												"nodeType": "YulIdentifier",
																												"src": "16322:7:14"
																											}
																										]
																									},
																									{
																										"nativeSrc": "16359:7:14",
																										"nodeType": "YulAssignment",
																										"src": "16359:7:14",
																										"value": {
																											"kind": "number",
																											"nativeSrc": "16365:1:14",
																											"nodeType": "YulLiteral",
																											"src": "16365:1:14",
																											"type": "",
																											"value": "0"
																										},
																										"variableNames": [
																											{
																												"name": "cb",
																												"nativeSrc": "16359:2:14",
																												"nodeType": "YulIdentifier",
																												"src": "16359:2:14"
																											}
																										]
																									}
																								]
																							},
																							"condition": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "mc",
																														"nativeSrc": "16241:2:14",
																														"nodeType": "YulIdentifier",
																														"src": "16241:2:14"
																													}
																												],
																												"functionName": {
																													"name": "mload",
																													"nativeSrc": "16235:5:14",
																													"nodeType": "YulIdentifier",
																													"src": "16235:5:14"
																												},
																												"nativeSrc": "16235:9:14",
																												"nodeType": "YulFunctionCall",
																												"src": "16235:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"name": "cc",
																														"nativeSrc": "16252:2:14",
																														"nodeType": "YulIdentifier",
																														"src": "16252:2:14"
																													}
																												],
																												"functionName": {
																													"name": "mload",
																													"nativeSrc": "16246:5:14",
																													"nodeType": "YulIdentifier",
																													"src": "16246:5:14"
																												},
																												"nativeSrc": "16246:9:14",
																												"nodeType": "YulFunctionCall",
																												"src": "16246:9:14"
																											}
																										],
																										"functionName": {
																											"name": "eq",
																											"nativeSrc": "16232:2:14",
																											"nodeType": "YulIdentifier",
																											"src": "16232:2:14"
																										},
																										"nativeSrc": "16232:24:14",
																										"nodeType": "YulFunctionCall",
																										"src": "16232:24:14"
																									}
																								],
																								"functionName": {
																									"name": "iszero",
																									"nativeSrc": "16225:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "16225:6:14"
																								},
																								"nativeSrc": "16225:32:14",
																								"nodeType": "YulFunctionCall",
																								"src": "16225:32:14"
																							},
																							"nativeSrc": "16222:166:14",
																							"nodeType": "YulIf",
																							"src": "16222:166:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "mc",
																											"nativeSrc": "16004:2:14",
																											"nodeType": "YulIdentifier",
																											"src": "16004:2:14"
																										},
																										{
																											"name": "end",
																											"nativeSrc": "16008:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "16008:3:14"
																										}
																									],
																									"functionName": {
																										"name": "lt",
																										"nativeSrc": "16001:2:14",
																										"nodeType": "YulIdentifier",
																										"src": "16001:2:14"
																									},
																									"nativeSrc": "16001:11:14",
																									"nodeType": "YulFunctionCall",
																									"src": "16001:11:14"
																								},
																								{
																									"name": "cb",
																									"nativeSrc": "16014:2:14",
																									"nodeType": "YulIdentifier",
																									"src": "16014:2:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "15997:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "15997:3:14"
																							},
																							"nativeSrc": "15997:20:14",
																							"nodeType": "YulFunctionCall",
																							"src": "15997:20:14"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "16019:1:14",
																							"nodeType": "YulLiteral",
																							"src": "16019:1:14",
																							"type": "",
																							"value": "2"
																						}
																					],
																					"functionName": {
																						"name": "eq",
																						"nativeSrc": "15994:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "15994:2:14"
																					},
																					"nativeSrc": "15994:27:14",
																					"nodeType": "YulFunctionCall",
																					"src": "15994:27:14"
																				},
																				"nativeSrc": "15808:598:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "16022:99:14",
																					"nodeType": "YulBlock",
																					"src": "16022:99:14",
																					"statements": [
																						{
																							"nativeSrc": "16044:19:14",
																							"nodeType": "YulAssignment",
																							"src": "16044:19:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "mc",
																										"nativeSrc": "16054:2:14",
																										"nodeType": "YulIdentifier",
																										"src": "16054:2:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "16058:4:14",
																										"nodeType": "YulLiteral",
																										"src": "16058:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "16050:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "16050:3:14"
																								},
																								"nativeSrc": "16050:13:14",
																								"nodeType": "YulFunctionCall",
																								"src": "16050:13:14"
																							},
																							"variableNames": [
																								{
																									"name": "mc",
																									"nativeSrc": "16044:2:14",
																									"nodeType": "YulIdentifier",
																									"src": "16044:2:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "16084:19:14",
																							"nodeType": "YulAssignment",
																							"src": "16084:19:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "cc",
																										"nativeSrc": "16094:2:14",
																										"nodeType": "YulIdentifier",
																										"src": "16094:2:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "16098:4:14",
																										"nodeType": "YulLiteral",
																										"src": "16098:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "16090:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "16090:3:14"
																								},
																								"nativeSrc": "16090:13:14",
																								"nodeType": "YulFunctionCall",
																								"src": "16090:13:14"
																							},
																							"variableNames": [
																								{
																									"name": "cc",
																									"nativeSrc": "16084:2:14",
																									"nodeType": "YulIdentifier",
																									"src": "16084:2:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "15812:181:14",
																					"nodeType": "YulBlock",
																					"src": "15812:181:14",
																					"statements": [
																						{
																							"nativeSrc": "15834:31:14",
																							"nodeType": "YulVariableDeclaration",
																							"src": "15834:31:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "_postBytes",
																										"nativeSrc": "15848:10:14",
																										"nodeType": "YulIdentifier",
																										"src": "15848:10:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "15860:4:14",
																										"nodeType": "YulLiteral",
																										"src": "15860:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "15844:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "15844:3:14"
																								},
																								"nativeSrc": "15844:21:14",
																								"nodeType": "YulFunctionCall",
																								"src": "15844:21:14"
																							},
																							"variables": [
																								{
																									"name": "cc",
																									"nativeSrc": "15838:2:14",
																									"nodeType": "YulTypedName",
																									"src": "15838:2:14",
																									"type": ""
																								}
																							]
																						}
																					]
																				},
																				"src": "15808:598:14"
																			}
																		]
																	},
																	"nativeSrc": "15452:968:14",
																	"nodeType": "YulCase",
																	"src": "15452:968:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15457:1:14",
																		"nodeType": "YulLiteral",
																		"src": "15457:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "16441:74:14",
																		"nodeType": "YulBlock",
																		"src": "16441:74:14",
																		"statements": [
																			{
																				"nativeSrc": "16489:12:14",
																				"nodeType": "YulAssignment",
																				"src": "16489:12:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "16500:1:14",
																					"nodeType": "YulLiteral",
																					"src": "16500:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variableNames": [
																					{
																						"name": "success",
																						"nativeSrc": "16489:7:14",
																						"nodeType": "YulIdentifier",
																						"src": "16489:7:14"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "16433:82:14",
																	"nodeType": "YulCase",
																	"src": "16433:82:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "15413:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "15413:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_postBytes",
																				"nativeSrc": "15427:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "15427:10:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "15421:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "15421:5:14"
																		},
																		"nativeSrc": "15421:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15421:17:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "15410:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "15410:2:14"
																},
																"nativeSrc": "15410:29:14",
																"nodeType": "YulFunctionCall",
																"src": "15410:29:14"
															},
															"nativeSrc": "15403:1112:14",
															"nodeType": "YulSwitch",
															"src": "15403:1112:14"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2400,
														"isOffset": false,
														"isSlot": false,
														"src": "15427:10:14",
														"valueSize": 1
													},
													{
														"declaration": 2400,
														"isOffset": false,
														"isSlot": false,
														"src": "15848:10:14",
														"valueSize": 1
													},
													{
														"declaration": 2398,
														"isOffset": false,
														"isSlot": false,
														"src": "15316:9:14",
														"valueSize": 1
													},
													{
														"declaration": 2398,
														"isOffset": false,
														"isSlot": false,
														"src": "15731:9:14",
														"valueSize": 1
													},
													{
														"declaration": 2406,
														"isOffset": false,
														"isSlot": false,
														"src": "16322:7:14",
														"valueSize": 1
													},
													{
														"declaration": 2406,
														"isOffset": false,
														"isSlot": false,
														"src": "16489:7:14",
														"valueSize": 1
													}
												],
												"id": 2409,
												"nodeType": "InlineAssembly",
												"src": "15273:1252:14"
											},
											{
												"expression": {
													"id": 2410,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2406,
													"src": "16542:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2404,
												"id": 2411,
												"nodeType": "Return",
												"src": "16535:14:14"
											}
										]
									},
									"id": 2413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "15149:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "_preBytes",
												"nameLocation": "15168:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "15155:22:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15155:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2400,
												"mutability": "mutable",
												"name": "_postBytes",
												"nameLocation": "15192:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "15179:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2399,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15179:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15154:49:14"
									},
									"returnParameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "15227:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15227:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15226:6:14"
									},
									"scope": 2431,
									"src": "15140:1416:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2429,
										"nodeType": "Block",
										"src": "16713:2559:14",
										"statements": [
											{
												"assignments": [
													2423
												],
												"declarations": [
													{
														"constant": false,
														"id": 2423,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16728:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2429,
														"src": "16723:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2422,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16723:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2425,
												"initialValue": {
													"hexValue": "74727565",
													"id": 2424,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16738:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16723:19:14"
											},
											{
												"AST": {
													"nativeSrc": "16762:2479:14",
													"nodeType": "YulBlock",
													"src": "16762:2479:14",
													"statements": [
														{
															"nativeSrc": "16821:34:14",
															"nodeType": "YulVariableDeclaration",
															"src": "16821:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "_preBytes.slot",
																		"nativeSrc": "16840:14:14",
																		"nodeType": "YulIdentifier",
																		"src": "16840:14:14"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "16834:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "16834:5:14"
																},
																"nativeSrc": "16834:21:14",
																"nodeType": "YulFunctionCall",
																"src": "16834:21:14"
															},
															"variables": [
																{
																	"name": "fslot",
																	"nativeSrc": "16825:5:14",
																	"nodeType": "YulTypedName",
																	"src": "16825:5:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16946:76:14",
															"nodeType": "YulVariableDeclaration",
															"src": "16946:76:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fslot",
																				"nativeSrc": "16969:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "16969:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "16984:5:14",
																								"nodeType": "YulLiteral",
																								"src": "16984:5:14",
																								"type": "",
																								"value": "0x100"
																							},
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "fslot",
																												"nativeSrc": "17002:5:14",
																												"nodeType": "YulIdentifier",
																												"src": "17002:5:14"
																											},
																											{
																												"kind": "number",
																												"nativeSrc": "17009:1:14",
																												"nodeType": "YulLiteral",
																												"src": "17009:1:14",
																												"type": "",
																												"value": "1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "16998:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "16998:3:14"
																										},
																										"nativeSrc": "16998:13:14",
																										"nodeType": "YulFunctionCall",
																										"src": "16998:13:14"
																									}
																								],
																								"functionName": {
																									"name": "iszero",
																									"nativeSrc": "16991:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "16991:6:14"
																								},
																								"nativeSrc": "16991:21:14",
																								"nodeType": "YulFunctionCall",
																								"src": "16991:21:14"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "16980:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "16980:3:14"
																						},
																						"nativeSrc": "16980:33:14",
																						"nodeType": "YulFunctionCall",
																						"src": "16980:33:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17015:1:14",
																						"nodeType": "YulLiteral",
																						"src": "17015:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "16976:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "16976:3:14"
																				},
																				"nativeSrc": "16976:41:14",
																				"nodeType": "YulFunctionCall",
																				"src": "16976:41:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16965:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16965:3:14"
																		},
																		"nativeSrc": "16965:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16965:53:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17020:1:14",
																		"nodeType": "YulLiteral",
																		"src": "17020:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "16961:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16961:3:14"
																},
																"nativeSrc": "16961:61:14",
																"nodeType": "YulFunctionCall",
																"src": "16961:61:14"
															},
															"variables": [
																{
																	"name": "slength",
																	"nativeSrc": "16950:7:14",
																	"nodeType": "YulTypedName",
																	"src": "16950:7:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17035:32:14",
															"nodeType": "YulVariableDeclaration",
															"src": "17035:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "_postBytes",
																		"nativeSrc": "17056:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "17056:10:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17050:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "17050:5:14"
																},
																"nativeSrc": "17050:17:14",
																"nodeType": "YulFunctionCall",
																"src": "17050:17:14"
															},
															"variables": [
																{
																	"name": "mlength",
																	"nativeSrc": "17039:7:14",
																	"nodeType": "YulTypedName",
																	"src": "17039:7:14",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "17191:1945:14",
																		"nodeType": "YulBlock",
																		"src": "17191:1945:14",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "17502:1620:14",
																					"nodeType": "YulBlock",
																					"src": "17502:1620:14",
																					"statements": [
																						{
																							"cases": [
																								{
																									"body": {
																										"nativeSrc": "17574:340:14",
																										"nodeType": "YulBlock",
																										"src": "17574:340:14",
																										"statements": [
																											{
																												"nativeSrc": "17667:38:14",
																												"nodeType": "YulAssignment",
																												"src": "17667:38:14",
																												"value": {
																													"arguments": [
																														{
																															"arguments": [
																																{
																																	"name": "fslot",
																																	"nativeSrc": "17684:5:14",
																																	"nodeType": "YulIdentifier",
																																	"src": "17684:5:14"
																																},
																																{
																																	"kind": "number",
																																	"nativeSrc": "17691:5:14",
																																	"nodeType": "YulLiteral",
																																	"src": "17691:5:14",
																																	"type": "",
																																	"value": "0x100"
																																}
																															],
																															"functionName": {
																																"name": "div",
																																"nativeSrc": "17680:3:14",
																																"nodeType": "YulIdentifier",
																																"src": "17680:3:14"
																															},
																															"nativeSrc": "17680:17:14",
																															"nodeType": "YulFunctionCall",
																															"src": "17680:17:14"
																														},
																														{
																															"kind": "number",
																															"nativeSrc": "17699:5:14",
																															"nodeType": "YulLiteral",
																															"src": "17699:5:14",
																															"type": "",
																															"value": "0x100"
																														}
																													],
																													"functionName": {
																														"name": "mul",
																														"nativeSrc": "17676:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "17676:3:14"
																													},
																													"nativeSrc": "17676:29:14",
																													"nodeType": "YulFunctionCall",
																													"src": "17676:29:14"
																												},
																												"variableNames": [
																													{
																														"name": "fslot",
																														"nativeSrc": "17667:5:14",
																														"nodeType": "YulIdentifier",
																														"src": "17667:5:14"
																													}
																												]
																											},
																											{
																												"body": {
																													"nativeSrc": "17782:110:14",
																													"nodeType": "YulBlock",
																													"src": "17782:110:14",
																													"statements": [
																														{
																															"nativeSrc": "17854:12:14",
																															"nodeType": "YulAssignment",
																															"src": "17854:12:14",
																															"value": {
																																"kind": "number",
																																"nativeSrc": "17865:1:14",
																																"nodeType": "YulLiteral",
																																"src": "17865:1:14",
																																"type": "",
																																"value": "0"
																															},
																															"variableNames": [
																																{
																																	"name": "success",
																																	"nativeSrc": "17854:7:14",
																																	"nodeType": "YulIdentifier",
																																	"src": "17854:7:14"
																																}
																															]
																														}
																													]
																												},
																												"condition": {
																													"arguments": [
																														{
																															"arguments": [
																																{
																																	"name": "fslot",
																																	"nativeSrc": "17744:5:14",
																																	"nodeType": "YulIdentifier",
																																	"src": "17744:5:14"
																																},
																																{
																																	"arguments": [
																																		{
																																			"arguments": [
																																				{
																																					"name": "_postBytes",
																																					"nativeSrc": "17761:10:14",
																																					"nodeType": "YulIdentifier",
																																					"src": "17761:10:14"
																																				},
																																				{
																																					"kind": "number",
																																					"nativeSrc": "17773:4:14",
																																					"nodeType": "YulLiteral",
																																					"src": "17773:4:14",
																																					"type": "",
																																					"value": "0x20"
																																				}
																																			],
																																			"functionName": {
																																				"name": "add",
																																				"nativeSrc": "17757:3:14",
																																				"nodeType": "YulIdentifier",
																																				"src": "17757:3:14"
																																			},
																																			"nativeSrc": "17757:21:14",
																																			"nodeType": "YulFunctionCall",
																																			"src": "17757:21:14"
																																		}
																																	],
																																	"functionName": {
																																		"name": "mload",
																																		"nativeSrc": "17751:5:14",
																																		"nodeType": "YulIdentifier",
																																		"src": "17751:5:14"
																																	},
																																	"nativeSrc": "17751:28:14",
																																	"nodeType": "YulFunctionCall",
																																	"src": "17751:28:14"
																																}
																															],
																															"functionName": {
																																"name": "eq",
																																"nativeSrc": "17741:2:14",
																																"nodeType": "YulIdentifier",
																																"src": "17741:2:14"
																															},
																															"nativeSrc": "17741:39:14",
																															"nodeType": "YulFunctionCall",
																															"src": "17741:39:14"
																														}
																													],
																													"functionName": {
																														"name": "iszero",
																														"nativeSrc": "17734:6:14",
																														"nodeType": "YulIdentifier",
																														"src": "17734:6:14"
																													},
																													"nativeSrc": "17734:47:14",
																													"nodeType": "YulFunctionCall",
																													"src": "17734:47:14"
																												},
																												"nativeSrc": "17731:161:14",
																												"nodeType": "YulIf",
																												"src": "17731:161:14"
																											}
																										]
																									},
																									"nativeSrc": "17567:347:14",
																									"nodeType": "YulCase",
																									"src": "17567:347:14",
																									"value": {
																										"kind": "number",
																										"nativeSrc": "17572:1:14",
																										"nodeType": "YulLiteral",
																										"src": "17572:1:14",
																										"type": "",
																										"value": "1"
																									}
																								},
																								{
																									"body": {
																										"nativeSrc": "17943:1161:14",
																										"nodeType": "YulBlock",
																										"src": "17943:1161:14",
																										"statements": [
																											{
																												"nativeSrc": "18212:11:14",
																												"nodeType": "YulVariableDeclaration",
																												"src": "18212:11:14",
																												"value": {
																													"kind": "number",
																													"nativeSrc": "18222:1:14",
																													"nodeType": "YulLiteral",
																													"src": "18222:1:14",
																													"type": "",
																													"value": "1"
																												},
																												"variables": [
																													{
																														"name": "cb",
																														"nativeSrc": "18216:2:14",
																														"nodeType": "YulTypedName",
																														"src": "18216:2:14",
																														"type": ""
																													}
																												]
																											},
																											{
																												"expression": {
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "18336:3:14",
																															"nodeType": "YulLiteral",
																															"src": "18336:3:14",
																															"type": "",
																															"value": "0x0"
																														},
																														{
																															"name": "_preBytes.slot",
																															"nativeSrc": "18341:14:14",
																															"nodeType": "YulIdentifier",
																															"src": "18341:14:14"
																														}
																													],
																													"functionName": {
																														"name": "mstore",
																														"nativeSrc": "18329:6:14",
																														"nodeType": "YulIdentifier",
																														"src": "18329:6:14"
																													},
																													"nativeSrc": "18329:27:14",
																													"nodeType": "YulFunctionCall",
																													"src": "18329:27:14"
																												},
																												"nativeSrc": "18329:27:14",
																												"nodeType": "YulExpressionStatement",
																												"src": "18329:27:14"
																											},
																											{
																												"nativeSrc": "18381:30:14",
																												"nodeType": "YulVariableDeclaration",
																												"src": "18381:30:14",
																												"value": {
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "18401:3:14",
																															"nodeType": "YulLiteral",
																															"src": "18401:3:14",
																															"type": "",
																															"value": "0x0"
																														},
																														{
																															"kind": "number",
																															"nativeSrc": "18406:4:14",
																															"nodeType": "YulLiteral",
																															"src": "18406:4:14",
																															"type": "",
																															"value": "0x20"
																														}
																													],
																													"functionName": {
																														"name": "keccak256",
																														"nativeSrc": "18391:9:14",
																														"nodeType": "YulIdentifier",
																														"src": "18391:9:14"
																													},
																													"nativeSrc": "18391:20:14",
																													"nodeType": "YulFunctionCall",
																													"src": "18391:20:14"
																												},
																												"variables": [
																													{
																														"name": "sc",
																														"nativeSrc": "18385:2:14",
																														"nodeType": "YulTypedName",
																														"src": "18385:2:14",
																														"type": ""
																													}
																												]
																											},
																											{
																												"nativeSrc": "18437:31:14",
																												"nodeType": "YulVariableDeclaration",
																												"src": "18437:31:14",
																												"value": {
																													"arguments": [
																														{
																															"name": "_postBytes",
																															"nativeSrc": "18451:10:14",
																															"nodeType": "YulIdentifier",
																															"src": "18451:10:14"
																														},
																														{
																															"kind": "number",
																															"nativeSrc": "18463:4:14",
																															"nodeType": "YulLiteral",
																															"src": "18463:4:14",
																															"type": "",
																															"value": "0x20"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "18447:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "18447:3:14"
																													},
																													"nativeSrc": "18447:21:14",
																													"nodeType": "YulFunctionCall",
																													"src": "18447:21:14"
																												},
																												"variables": [
																													{
																														"name": "mc",
																														"nativeSrc": "18441:2:14",
																														"nodeType": "YulTypedName",
																														"src": "18441:2:14",
																														"type": ""
																													}
																												]
																											},
																											{
																												"nativeSrc": "18493:27:14",
																												"nodeType": "YulVariableDeclaration",
																												"src": "18493:27:14",
																												"value": {
																													"arguments": [
																														{
																															"name": "mc",
																															"nativeSrc": "18508:2:14",
																															"nodeType": "YulIdentifier",
																															"src": "18508:2:14"
																														},
																														{
																															"name": "mlength",
																															"nativeSrc": "18512:7:14",
																															"nodeType": "YulIdentifier",
																															"src": "18512:7:14"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "18504:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "18504:3:14"
																													},
																													"nativeSrc": "18504:16:14",
																													"nodeType": "YulFunctionCall",
																													"src": "18504:16:14"
																												},
																												"variables": [
																													{
																														"name": "end",
																														"nativeSrc": "18497:3:14",
																														"nodeType": "YulTypedName",
																														"src": "18497:3:14",
																														"type": ""
																													}
																												]
																											},
																											{
																												"body": {
																													"nativeSrc": "18828:254:14",
																													"nodeType": "YulBlock",
																													"src": "18828:254:14",
																													"statements": [
																														{
																															"body": {
																																"nativeSrc": "18894:162:14",
																																"nodeType": "YulBlock",
																																"src": "18894:162:14",
																																"statements": [
																																	{
																																		"nativeSrc": "18974:12:14",
																																		"nodeType": "YulAssignment",
																																		"src": "18974:12:14",
																																		"value": {
																																			"kind": "number",
																																			"nativeSrc": "18985:1:14",
																																			"nodeType": "YulLiteral",
																																			"src": "18985:1:14",
																																			"type": "",
																																			"value": "0"
																																		},
																																		"variableNames": [
																																			{
																																				"name": "success",
																																				"nativeSrc": "18974:7:14",
																																				"nodeType": "YulIdentifier",
																																				"src": "18974:7:14"
																																			}
																																		]
																																	},
																																	{
																																		"nativeSrc": "19019:7:14",
																																		"nodeType": "YulAssignment",
																																		"src": "19019:7:14",
																																		"value": {
																																			"kind": "number",
																																			"nativeSrc": "19025:1:14",
																																			"nodeType": "YulLiteral",
																																			"src": "19025:1:14",
																																			"type": "",
																																			"value": "0"
																																		},
																																		"variableNames": [
																																			{
																																				"name": "cb",
																																				"nativeSrc": "19019:2:14",
																																				"nodeType": "YulIdentifier",
																																				"src": "19019:2:14"
																																			}
																																		]
																																	}
																																]
																															},
																															"condition": {
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"arguments": [
																																					{
																																						"name": "sc",
																																						"nativeSrc": "18877:2:14",
																																						"nodeType": "YulIdentifier",
																																						"src": "18877:2:14"
																																					}
																																				],
																																				"functionName": {
																																					"name": "sload",
																																					"nativeSrc": "18871:5:14",
																																					"nodeType": "YulIdentifier",
																																					"src": "18871:5:14"
																																				},
																																				"nativeSrc": "18871:9:14",
																																				"nodeType": "YulFunctionCall",
																																				"src": "18871:9:14"
																																			},
																																			{
																																				"arguments": [
																																					{
																																						"name": "mc",
																																						"nativeSrc": "18888:2:14",
																																						"nodeType": "YulIdentifier",
																																						"src": "18888:2:14"
																																					}
																																				],
																																				"functionName": {
																																					"name": "mload",
																																					"nativeSrc": "18882:5:14",
																																					"nodeType": "YulIdentifier",
																																					"src": "18882:5:14"
																																				},
																																				"nativeSrc": "18882:9:14",
																																				"nodeType": "YulFunctionCall",
																																				"src": "18882:9:14"
																																			}
																																		],
																																		"functionName": {
																																			"name": "eq",
																																			"nativeSrc": "18868:2:14",
																																			"nodeType": "YulIdentifier",
																																			"src": "18868:2:14"
																																		},
																																		"nativeSrc": "18868:24:14",
																																		"nodeType": "YulFunctionCall",
																																		"src": "18868:24:14"
																																	}
																																],
																																"functionName": {
																																	"name": "iszero",
																																	"nativeSrc": "18861:6:14",
																																	"nodeType": "YulIdentifier",
																																	"src": "18861:6:14"
																																},
																																"nativeSrc": "18861:32:14",
																																"nodeType": "YulFunctionCall",
																																"src": "18861:32:14"
																															},
																															"nativeSrc": "18858:198:14",
																															"nodeType": "YulIf",
																															"src": "18858:198:14"
																														}
																													]
																												},
																												"condition": {
																													"arguments": [
																														{
																															"arguments": [
																																{
																																	"arguments": [
																																		{
																																			"name": "mc",
																																			"nativeSrc": "18689:2:14",
																																			"nodeType": "YulIdentifier",
																																			"src": "18689:2:14"
																																		},
																																		{
																																			"name": "end",
																																			"nativeSrc": "18693:3:14",
																																			"nodeType": "YulIdentifier",
																																			"src": "18693:3:14"
																																		}
																																	],
																																	"functionName": {
																																		"name": "lt",
																																		"nativeSrc": "18686:2:14",
																																		"nodeType": "YulIdentifier",
																																		"src": "18686:2:14"
																																	},
																																	"nativeSrc": "18686:11:14",
																																	"nodeType": "YulFunctionCall",
																																	"src": "18686:11:14"
																																},
																																{
																																	"name": "cb",
																																	"nativeSrc": "18699:2:14",
																																	"nodeType": "YulIdentifier",
																																	"src": "18699:2:14"
																																}
																															],
																															"functionName": {
																																"name": "add",
																																"nativeSrc": "18682:3:14",
																																"nodeType": "YulIdentifier",
																																"src": "18682:3:14"
																															},
																															"nativeSrc": "18682:20:14",
																															"nodeType": "YulFunctionCall",
																															"src": "18682:20:14"
																														},
																														{
																															"kind": "number",
																															"nativeSrc": "18704:1:14",
																															"nodeType": "YulLiteral",
																															"src": "18704:1:14",
																															"type": "",
																															"value": "2"
																														}
																													],
																													"functionName": {
																														"name": "eq",
																														"nativeSrc": "18679:2:14",
																														"nodeType": "YulIdentifier",
																														"src": "18679:2:14"
																													},
																													"nativeSrc": "18679:27:14",
																													"nodeType": "YulFunctionCall",
																													"src": "18679:27:14"
																												},
																												"nativeSrc": "18672:410:14",
																												"nodeType": "YulForLoop",
																												"post": {
																													"nativeSrc": "18707:120:14",
																													"nodeType": "YulBlock",
																													"src": "18707:120:14",
																													"statements": [
																														{
																															"nativeSrc": "18737:16:14",
																															"nodeType": "YulAssignment",
																															"src": "18737:16:14",
																															"value": {
																																"arguments": [
																																	{
																																		"name": "sc",
																																		"nativeSrc": "18747:2:14",
																																		"nodeType": "YulIdentifier",
																																		"src": "18747:2:14"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "18751:1:14",
																																		"nodeType": "YulLiteral",
																																		"src": "18751:1:14",
																																		"type": "",
																																		"value": "1"
																																	}
																																],
																																"functionName": {
																																	"name": "add",
																																	"nativeSrc": "18743:3:14",
																																	"nodeType": "YulIdentifier",
																																	"src": "18743:3:14"
																																},
																																"nativeSrc": "18743:10:14",
																																"nodeType": "YulFunctionCall",
																																"src": "18743:10:14"
																															},
																															"variableNames": [
																																{
																																	"name": "sc",
																																	"nativeSrc": "18737:2:14",
																																	"nodeType": "YulIdentifier",
																																	"src": "18737:2:14"
																																}
																															]
																														},
																														{
																															"nativeSrc": "18782:19:14",
																															"nodeType": "YulAssignment",
																															"src": "18782:19:14",
																															"value": {
																																"arguments": [
																																	{
																																		"name": "mc",
																																		"nativeSrc": "18792:2:14",
																																		"nodeType": "YulIdentifier",
																																		"src": "18792:2:14"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "18796:4:14",
																																		"nodeType": "YulLiteral",
																																		"src": "18796:4:14",
																																		"type": "",
																																		"value": "0x20"
																																	}
																																],
																																"functionName": {
																																	"name": "add",
																																	"nativeSrc": "18788:3:14",
																																	"nodeType": "YulIdentifier",
																																	"src": "18788:3:14"
																																},
																																"nativeSrc": "18788:13:14",
																																"nodeType": "YulFunctionCall",
																																"src": "18788:13:14"
																															},
																															"variableNames": [
																																{
																																	"name": "mc",
																																	"nativeSrc": "18782:2:14",
																																	"nodeType": "YulIdentifier",
																																	"src": "18782:2:14"
																																}
																															]
																														}
																													]
																												},
																												"pre": {
																													"nativeSrc": "18676:2:14",
																													"nodeType": "YulBlock",
																													"src": "18676:2:14",
																													"statements": []
																												},
																												"src": "18672:410:14"
																											}
																										]
																									},
																									"nativeSrc": "17935:1169:14",
																									"nodeType": "YulCase",
																									"src": "17935:1169:14",
																									"value": "default"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"name": "slength",
																										"nativeSrc": "17534:7:14",
																										"nodeType": "YulIdentifier",
																										"src": "17534:7:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17543:2:14",
																										"nodeType": "YulLiteral",
																										"src": "17543:2:14",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "lt",
																									"nativeSrc": "17531:2:14",
																									"nodeType": "YulIdentifier",
																									"src": "17531:2:14"
																								},
																								"nativeSrc": "17531:15:14",
																								"nodeType": "YulFunctionCall",
																								"src": "17531:15:14"
																							},
																							"nativeSrc": "17524:1580:14",
																							"nodeType": "YulSwitch",
																							"src": "17524:1580:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "slength",
																									"nativeSrc": "17492:7:14",
																									"nodeType": "YulIdentifier",
																									"src": "17492:7:14"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nativeSrc": "17485:6:14",
																								"nodeType": "YulIdentifier",
																								"src": "17485:6:14"
																							},
																							"nativeSrc": "17485:15:14",
																							"nodeType": "YulFunctionCall",
																							"src": "17485:15:14"
																						}
																					],
																					"functionName": {
																						"name": "iszero",
																						"nativeSrc": "17478:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "17478:6:14"
																					},
																					"nativeSrc": "17478:23:14",
																					"nodeType": "YulFunctionCall",
																					"src": "17478:23:14"
																				},
																				"nativeSrc": "17475:1647:14",
																				"nodeType": "YulIf",
																				"src": "17475:1647:14"
																			}
																		]
																	},
																	"nativeSrc": "17184:1952:14",
																	"nodeType": "YulCase",
																	"src": "17184:1952:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17189:1:14",
																		"nodeType": "YulLiteral",
																		"src": "17189:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "19157:74:14",
																		"nodeType": "YulBlock",
																		"src": "19157:74:14",
																		"statements": [
																			{
																				"nativeSrc": "19205:12:14",
																				"nodeType": "YulAssignment",
																				"src": "19205:12:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "19216:1:14",
																					"nodeType": "YulLiteral",
																					"src": "19216:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variableNames": [
																					{
																						"name": "success",
																						"nativeSrc": "19205:7:14",
																						"nodeType": "YulIdentifier",
																						"src": "19205:7:14"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "19149:82:14",
																	"nodeType": "YulCase",
																	"src": "19149:82:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slength",
																		"nativeSrc": "17154:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "17154:7:14"
																	},
																	{
																		"name": "mlength",
																		"nativeSrc": "17163:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "17163:7:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "17151:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "17151:2:14"
																},
																"nativeSrc": "17151:20:14",
																"nodeType": "YulFunctionCall",
																"src": "17151:20:14"
															},
															"nativeSrc": "17144:2087:14",
															"nodeType": "YulSwitch",
															"src": "17144:2087:14"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2417,
														"isOffset": false,
														"isSlot": false,
														"src": "17056:10:14",
														"valueSize": 1
													},
													{
														"declaration": 2417,
														"isOffset": false,
														"isSlot": false,
														"src": "17761:10:14",
														"valueSize": 1
													},
													{
														"declaration": 2417,
														"isOffset": false,
														"isSlot": false,
														"src": "18451:10:14",
														"valueSize": 1
													},
													{
														"declaration": 2415,
														"isOffset": false,
														"isSlot": true,
														"src": "16840:14:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2415,
														"isOffset": false,
														"isSlot": true,
														"src": "18341:14:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2423,
														"isOffset": false,
														"isSlot": false,
														"src": "17854:7:14",
														"valueSize": 1
													},
													{
														"declaration": 2423,
														"isOffset": false,
														"isSlot": false,
														"src": "18974:7:14",
														"valueSize": 1
													},
													{
														"declaration": 2423,
														"isOffset": false,
														"isSlot": false,
														"src": "19205:7:14",
														"valueSize": 1
													}
												],
												"id": 2426,
												"nodeType": "InlineAssembly",
												"src": "16753:2488:14"
											},
											{
												"expression": {
													"id": 2427,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2423,
													"src": "19258:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2421,
												"id": 2428,
												"nodeType": "Return",
												"src": "19251:14:14"
											}
										]
									},
									"id": 2430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equalStorage",
									"nameLocation": "16571:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "_preBytes",
												"nameLocation": "16607:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "16593:23:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16593:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "_postBytes",
												"nameLocation": "16639:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "16626:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2416,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16626:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16583:72:14"
									},
									"returnParameters": {
										"id": 2421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "16703:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16703:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16702:6:14"
									},
									"scope": 2431,
									"src": "16562:2710:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2432,
							"src": "370:18904:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "336:18939:14"
				},
				"id": 14
			}
		}
	}
}